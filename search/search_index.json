{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>What's new?</p> <p>The public beta of our new product, OCTO, is now available!</p> <p>We've been working hard on this product for the past few months, and we're really excited to share it with you. We're still under development, but we've already received great feedback from our early beta testers.</p> <p>In the public beta, you'll have access to all of the features of OCTO, but there may be some bugs or limitations. We're committed to making OCTO the best it can be, so your feedback is essential.</p> <p>Try it out at https://app.alphaus.cloud/octo/. We can't wait to hear what you think!</p> <p>Welcome to Alphaus documentation. Find user guides, developer guides, API references, tutorials, sample codes, and more.</p>"},{"location":"iam/","title":"Identity &amp; Access Management (IAM)","text":""},{"location":"iam/#users","title":"Users","text":"<p>There are two types of Alphaus users; root users and subusers. Root users are account owners and super admins. These are the accounts you register to Alphaus and are in email address form. Subusers are users that are created by root users and are typically given minimal access to perform specific roles although subusers can also be admins.</p>"},{"location":"iam/#rbac","title":"RBAC","text":"<p>Alphaus RBAC is an organization-wide role-based access control system that provides fine-grained access management to Alphaus features and resources. In using Alphaus RBAC, you can grant only the amount of access to users that they need to perform their jobs.</p> <p>RBAC is defined around users, namespaces, roles, and permissions. Users can be actual users in your organization, or a virtual user used in scripts or automation codes. Roles are job functions or groups that have a certain level of authority, or a list of permissions attached to it. Examples are <code>Admin</code>, <code>Developers</code>, etc. You can assign up to five (5) roles to a user per namespace.</p> <p>RBAC roles and permissions are isolated based on namespaces. What this means is that a role can only be created under a specific namespace, with namespace-specific permissions attached to it.</p> <p>Root users are always super admins, or have unrestricted access across namespaces. Typically, root users should create subusers and assign specific roles to them.</p>"},{"location":"iam/#namespaces","title":"Namespaces","text":"<p>Below is the list of supported namespaces under Alphaus RBAC:</p> Product/service Namespace Ripple <code>ripple</code> Wave(Pro) <code>wave</code> User management <code>users</code> RBAC management <code>rbac</code>"},{"location":"iam/#permissions","title":"Permissions","text":"<p>For the latest permissions, check out here.</p> <p>Permissions are hierarchical. Any user with permissions in the higher hierarchy will have permissions in the lower hierarchy as well. Some permissions can have resource filters. Empty filters mean all resources are allowed. Resource filters also follow the same hierarchical structure as permissions. At the moment, only the <code>Allow</code> effect is supported.</p>"},{"location":"products/","title":"Our products","text":""},{"location":"products/#octo-beta","title":"Octo (beta)","text":"<p>Octo is our comprehensive cloud cost management solution for enterprises. It allows you to visualize, allocate, understand, and optimize your cloud costs.</p> <p>Go to Octo console</p>"},{"location":"products/#ripple","title":"Ripple","text":"<p>Ripple is our invoicing solution for cloud resellers and MSPs (Managed Service Providers). It supports the three mainstream cloud vendors, namely, AWS, Azure, and GCP.</p> <p>Go to Ripple console</p>"},{"location":"products/#wavepro","title":"WavePro","text":"<p>WavePro is Ripple's companion cost visualization console for cloud resellers' clients.</p> <p>Go to WavePro console</p>"},{"location":"products/#aqua","title":"Aqua","text":"<p>Aqua is our cloud costs optimization tool for both Ripple and WavePro. It can be accessed from either Ripple's or WavePro's console.</p>"},{"location":"apiref/","title":"Overview","text":"<p>Info</p> <p>This reference is about our old APIs. For the new version, please check out Blue API.</p> <p>Alphaus provides an API for interacting with its services. The API is a RESTful API that can be accessed by an HTTP client such as <code>curl</code>, <code>wget</code>, or any HTTP library which is part of most modern programming languages.</p>"},{"location":"apiref/api-clients/","title":"API clients","text":"<p>The following endpoint is the base url for the APIs below.</p> <pre><code>https://service.alphaus.cloud/m/u/users/\n</code></pre>"},{"location":"apiref/api-clients/#create-api-client","title":"Create API client","text":"<p>Create a new API client under a specific user.</p> <p>Request</p> <pre><code>POST /client/:user HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{\n  \"name\": \"test-apiclient-name\",\n}\n</code></pre> <p><code>:user</code> is either root user or subuser.</p> <p>Details for the POST <code>{body}</code>.</p> Key Value <code>name</code> Required. The name of the API client. <p>Response</p> <pre><code>HTTP/1.1 200 OK\n\n{\n  \"client_id\": \"ripple-abcdef123456\",\n  \"client_secret\": \"critical\",\n  \"grant_type\": \"client_credentials\",\n  \"create_time\": \"2020-06-27T11:26:46.257375295Z\",\n  \"user_id\": \"id0001\",\n  \"username\": \"someusername\",\n  \"name\": \"test-apiclient-name\"\n}\n</code></pre>"},{"location":"apiref/api-clients/#list-api-clients","title":"List API clients","text":"<p>List all API clients under a specific user.</p> <p>Request</p> <pre><code>GET /clients/:user HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p><code>:user</code> is either root user or subuser.</p> <p>Response</p> <pre><code>HTTP/1.1 200 OK\n\n[\n  {\n    \"client_id\": \"ripple-abcdef123456\",\n    \"client_secret\": \"\",\n    \"grant_type\": \"client_credentials\",\n    \"create_time\": \"2020-06-15T05:07:50.258779172Z\",\n    \"user_id\": \"id001\",\n    \"name\": \"test-apiclient-name\"\n  },\n  ...\n]\n</code></pre>"},{"location":"apiref/api-clients/#delete-api-client","title":"Delete API client","text":"<p>Delete an existing API client under a specific user.</p> <p>Request</p> <pre><code>DELETE /client/:user/:clientid HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p><code>:user</code> is either root user or subuser. <code>:clientid</code> is the client id to delete.</p> <p>Response</p> <pre><code>HTTP/1.1 200 OK\n\n{\n  \"status\": \"success\"\n}\n</code></pre>"},{"location":"apiref/authentication/","title":"Authentication","text":"<p>Info</p> <p>Authentication for Wave (OpenAPI) is separated at the moment. We will be unifying all logins for all our APIs going forward. An announcement will be made once it's done.</p> <p>Before you can access Alphaus API services, you need to get an access token first. You will then use this token in your succeeding calls to the API using the <code>Authorization: Bearer {token}</code> HTTP header. Alphaus API tokens are JSON Web Tokens (JWT).</p> <p>Use the following endpoints to acquire product-specific access tokens. Tokens are not compatible between the two. Ripple access tokens can only be used for Ripple endpoints; Wave access tokens are only valid on Wave endpoints.</p> <pre><code># Ripple\nhttps://login.alphaus.cloud/ripple/access_token\n\n# Wave\nhttps://login.alphaus.cloud/access_token\n</code></pre> <p>Request</p> <p>To obtain an access token, send a POST message to the access token endpoint using the format described below.</p> <pre><code>POST {access-token-url} HTTP1.1\nContent-Type: multipart/form-data\n\n{body formdata}\n</code></pre> <p>The following table describes the formdata you need to supply as your POST body.</p> Name Value <code>grant_type</code> Valid values: <code>password</code>, <code>client_credentials</code> <code>client_id</code> The client id you received from Alphaus or from API. <code>client_secret</code> The client secret you received from Alphaus or from API. <code>username</code> You account username. Required if <code>grant_type</code> is set to <code>password</code>. <code>password</code> You account password. Required if <code>grant_type</code> is set to <code>password</code>. <code>scope</code> Valid values: <code>openid</code> <p>Response</p> <pre><code>HTTP/1.1 200 OK\n\n{\n  \"id_token\": \"eyJ0eXAiOiJKV1Q...\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 86400,\n  \"access_token\": \"eyJ0eXAiOiJKV1Q...\",\n  \"refresh_token\": \"def50200...\"\n}\n</code></pre> <p>Using bluectl</p> <p>You can also use our bluectl CLI tool to generate access tokens. It is designed to work with the <code>client_credentials</code> grant type, although it supports the <code>password</code> grant type as well. To set the required environment variables for authentication, check out this document.</p> <pre><code># Simple version:\n$ bluectl access-token\n\n# You can also access our beta (next) environment:\n$ bluectl access-token --beta\n\n# Use with other commands (example):\n$ curl -H \"Authorization: Bearer $(bluectl access-token)\" \\\n  https://some-ripple-endpoint/...\n</code></pre>"},{"location":"apiref/authorization/","title":"Authorization (RBAC)","text":"<p>For general information about RBAC, check out this link.</p> <p>The following endpoint is the base url for the APIs below.</p> <pre><code>https://service.alphaus.cloud/m/auth/rbac/\n</code></pre>"},{"location":"apiref/authorization/#list-permissions","title":"List permissions","text":"<p>List all permissions supported by RBAC in all namespaces. For reference, supported permissions can be found here.</p> <p>Request</p> <pre><code>GET /permissions HTTP1.1\nauthorization: Bearer {token}\n</code></pre> <p>Response</p> <pre><code>HTTP/1.1 200 OK\n\n[\n  {\n    \"namespace\":\"wave\",\n    \"permissions\":[\n      \"Admin\",\n      \"ModifySettings\",\n      \"...\"\n    ]\n  },\n  {\n    \"namespace\":\"ripple\",\n    \"permissions\":[\n      \"Admin\"\n    ]\n  }\n]\n</code></pre>"},{"location":"apiref/authorization/#create-role","title":"Create role","text":"<p>During role creation, if your <code>permissions</code> list contains an <code>Admin</code> entry, all other entries will be discarded except <code>Admin</code>.</p> <p>Roles are root user-level. That means all roles created by the root user, or any subuser that has permissions to create roles, are available to all subusers.</p> <p>Request</p> <pre><code>POST /roles HTTP1.1\nauthorization: Bearer {token}\ncontent-type: application/json\n\n{\n  \"name\":\"testrole\",\n  \"namespace\":\"wave\",\n  \"permissions\":[\n    \"ModifySettings\",\n    \"ViewSettings\",\n    ...\n  ]\n}\n</code></pre> <p>Role names should have at least 6 characters in length and 32 characters maximum. It should also be alphanumeric. Hyphens and underscores are allowed in between. The regular expression used for validation is below:</p> <pre><code>^[A-Za-z0-9][A-Za-z0-9_-]*[A-Za-z0-9]$\n</code></pre> <p>Response</p> <pre><code>HTTP/1.1 200 OK\n\n{\n  \"name\":\"testrole\",\n  \"namespace\":\"wave\",\n  \"permissions\":[\n    \"ModifySettings\",\n    \"ViewSettings\",\n    ...\n  ]\n}\n</code></pre>"},{"location":"apiref/authorization/#list-roles","title":"List roles","text":"<p>Request</p> <pre><code>GET /roles?namespace={namespace} HTTP1.1\nauthorization: Bearer {token}\n</code></pre> <p>The <code>{namespace}</code> parameter is optional. If not provided, all roles will be returned.</p> <p>Response</p> <pre><code>HTTP/1.1 200 OK\n\n[\n  {\n    \"name\": \"testrole\",\n    \"namespace\": \"wave\",\n    \"permissions\": [\n      \"ModifySettings\",\n      \"ViewSettings\",\n      \"ModifyAccountSettings\"\n    ]\n  },\n  {\n    \"name\": \"waveAdmin\",\n    \"namespace\": \"wave\",\n    \"permissions\": [\n      \"Admin\"\n    ]\n  },\n  ...\n]\n</code></pre>"},{"location":"apiref/authorization/#update-role","title":"Update role","text":"<p>Update role. If role name is different, rename mapped role name.</p> <p>Request</p> <pre><code>PATCH /roles/{namespace}/{rolename} HTTP1.1\nauthorization: Bearer {token}\ncontent-type: application/json\n\n{\n  \"namespace\":\"wave\",\n  \"permissions\":[\n    \"ModifySettings\",\n    \"ViewSettings\",\n    ...\n  ]\n}\n</code></pre> <p>Response</p> <pre><code>HTTP/1.1 200 OK\n\n{\n  \"name\": \"testrole\",\n  \"namespace\":\"wave\",\n  \"permissions\":[\n    \"ModifySettings\",\n    \"ViewSettings\",\n    ...\n  ]\n}\n</code></pre>"},{"location":"apiref/authorization/#delete-role","title":"Delete role","text":"<p>Delete role. Deleting a role will also remove all mappings.</p> <p>Request</p> <pre><code>DELETE /roles/{namespace}/{rolename} HTTP1.1\nauthorization: Bearer {token}\n</code></pre>"},{"location":"apiref/authorization/#map-roles-to-user","title":"Map roles to user","text":"<p>You can only map (or attach) up to 5 roles to a user per namespace. There is no limit for filtering rules per user.</p> <p>Valid values for <code>type</code> for filtering rules:</p> Namespace Value <code>wave</code> <code>linkAcct</code>, <code>group</code>, <code>tags</code> <code>ripple</code> <code>billingGroup</code> <p>Request</p> <pre><code>POST /userroles HTTP1.1\nauthorization: Bearer {token}\ncontent-type: application/json\n\n{\n  \"user_id\":\"subuser1\",\n  \"roles\":[\n    {\n      \"namespace\":\"wave\",\n      \"role\": \"somerole\",\n    },\n    ...\n    ]\n}\n</code></pre> <p>Response</p> <pre><code>HTTP/1.1 200 OK\n\n{\n  \"success\":[\n    \"somerole\"\n  ],\n  \"failed\":[],\n  \"filters\":[]\n}\n</code></pre>"},{"location":"apiref/authorization/#list-user-role-mappings","title":"List user role mappings","text":"<p>Request</p> <p>For this endpoint, the returned role mappings are those attached to the caller.</p> <pre><code>GET /userroles HTTP1.1\nauthorization: Bearer {token}\n</code></pre> <p>For listing role mappings of other subusers, use this endpoint.</p> <pre><code>GET /{subuser}/userroles HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p><code>{subuser}</code> is the subuser name.</p> <p>Response</p> <pre><code>HTTP/1.1 200 OK\n\n[\n  {\n    \"root_user\":\"58c2297d25645\",\n    \"sub_user\":\"subuser01\",\n    \"namespace\":\"wave\",\n    \"role\":\"testrole1\"\n  },\n  {\n    \"root_user\":\"58c2297d25645\",\n    \"sub_user\":\"subuser02\",\n    \"namespace\":\"wave\",\n    \"filter\":\"billingGroup:2222\"\n  },\n  ...\n]\n</code></pre>"},{"location":"apiref/authorization/#list-user-permissions","title":"List user permissions","text":"<p>Retrieve all permissions to all roles attached to the <code>{subuser}</code>.</p> <p>Request</p> <pre><code>GET /{subuser}/permissions HTTP1.1\nauthorization: Bearer {token}\n</code></pre> <p>Response</p> <pre><code>HTTP/1.1 200 OK\n\n[\n  {\n    \"namespace\":\"wave\",\n    \"permissions\":[\n      \"Admin\",\n      \"ModifySettings\",\n      \"...\"\n    ]\n  },\n  {\n    \"namespace\":\"ripple\",\n    \"permissions\":[\n      \"Admin\"\n    ]\n  }\n]\n</code></pre>"},{"location":"apiref/authorization/#update-map-roles-to-user","title":"Update map roles to user","text":"<p>You can only update map (or attach) up to 5 roles to a user per namespace. There is no limit for filtering rules per user.</p> <p>Valid values for <code>type</code> for filtering rules:</p> Namespace Value <code>wave</code> <code>linkAcct</code>, <code>group</code>, <code>tags</code> <code>ripple</code> <code>billingGroup</code> <p>This method replaces subuser's all roles to information in the request body.</p> <p>Request</p> <pre><code>PATCH /userroles HTTP1.1\nauthorization: Bearer {token}\ncontent-type: application/json\n\n{\n  \"roles\":[\n    {\n      \"namespace\":\"wave\",\n      \"role\": \"somerole\",\n    },\n    ...\n    ]\n}\n</code></pre> <pre><code>PATCH /{subuser}/userroles HTTP1.1\nauthorization: Bearer {token}\ncontent-type: application/json\n\n{\n  \"roles\":[\n    {\n      \"namespace\":\"wave\",\n      \"role\": \"somerole\",\n    },\n    ...\n    ]\n}\n</code></pre> <p><code>{subuser}</code> is the subuser id.</p> <p>Response</p> <pre><code>HTTP/1.1 200 OK\n\n{\n  \"success\":[\n    \"somerole\"\n  ],\n  \"failed\":[],\n  \"filters\":[]\n}\n</code></pre>"},{"location":"apiref/endpoint-limits/","title":"Endpoint limits","text":"<p>All Alphaus API endpoints are globally rate limited by default to 100 calls per second per user. To request for limit increase, please contact us through our various contact channels.</p>"},{"location":"apiref/status/","title":"Status","text":"<p>The following endpoint is the base url for the APIs below.</p> <pre><code>https://service.mobingi.com/m/status/\n</code></pre>"},{"location":"apiref/status/#list-invoice-calculation-status","title":"List invoice calculation status","text":"<p>Get the current status of the invoice calculations.</p> <p>Request</p> <pre><code>GET calculations/status[?params] HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>Details for <code>params</code>.</p> Key Value <code>vendor</code> Optional. Supported vendor is only <code>aws</code>  at the moment. <code>from</code> Optional. If not provided, default value is 2 months before current month. Format: <code>yyyymm</code>. <code>to</code> Optional. If not provided, default value is current month. Format: <code>yyyymm</code>. <p>Response</p> <pre><code>HTTP/1.1 200 OK\n\n[\n  {\n    \"billing_month\": \"2020-04\",\n    \"end_time\": \"\",\n    \"finished\": 3090,\n    \"id\": \"MSP-123456\",\n    \"invoice_type\": \"account\",\n    \"msp\": \"MSP-123456\",\n    \"name\": \"Alphaus, Inc.\",\n    \"run_id\": \"MSP-123456/76f20b9a-b7fa-4599-bc38-0691dbbd4ea3\",\n    \"start_time\": \"2020-05-22T04:01:38Z\",\n    \"status\": \"checking\",\n    \"status_message\": \"checking\",\n    \"total\": 3090,\n    \"type\": \"msp\",\n    \"vendor\": \"aws\"\n  },\n  ...\n]\n</code></pre> <p>Examples:</p> <pre><code># Simple request. Get status for the past 2 months:\nGET calculations/status\n\n# If you want range from Oct 2019 - Jan 2020:\nGET calculations/status?from=201910&amp;to=202001\n</code></pre>"},{"location":"apiref/users/","title":"Users","text":"<p>The following endpoint is the base url for the APIs below.</p> <pre><code>https://service.alphaus.cloud/m/u/\n</code></pre>"},{"location":"apiref/users/#create-subuser","title":"Create subuser","text":"<p>Create new subuser.</p> <p>Request</p> <pre><code>POST /users HTTP1.1\nauthorization: Bearer {token}\ncontent-type: application/json\n\n{\n  \"username\": \"newsubuser\",\n  \"password\": \"mysecretpassword\",\n  \"email\": \"dev@mobingi.com\",\n  \"notification\": {\n    \"email\": \"false\"\n  }\n}\n</code></pre> <p>Details for the POST <code>{body}</code>.</p> Key Value <code>username</code> Required. Min: 4, max: 18, allowed characters: letters, numbers, _ (underscore), . (period) and - (hyphen). <code>password</code> Required. Min: 8, max: 18. <code>notification.email</code> Required. Enable or disable notifications. Valid values: <code>\"true\"</code>, <code>\"false\"</code>. <code>email</code> Optional email address. <p>Response</p> <pre><code>HTTP/1.1 200 OK\n\n[\n  {\n    \"username\":\"mysubuser\",\n    \"msp_user\":\"MSP-123456\",\n    \"mobingi_user\": \"abcdef\",\n    \"email\":\"mysubuser@domain.com\",\n    \"nickname\":\"\",\n    ...\n  }\n]\n</code></pre>"},{"location":"apiref/users/#list-subusers","title":"List subusers","text":"<p>List all subusers.</p> <p>Request</p> <pre><code>GET /users HTTP1.1\nauthorization: Bearer {token}\n</code></pre> <p>Response</p> <pre><code>HTTP/1.1 200 OK\n\n[\n  {\n    \"username\":\"mysubuser\",\n    \"msp_user\":\"MSP-123456\",\n    \"mobingi_user\": \"abcdef\",\n    \"email\":\"mysubuser@domain.com\",\n    \"nickname\":\"\",\n    ...\n  }\n]\n</code></pre>"},{"location":"blueapi/authentication/","title":"Authentication","text":"<p>Blue uses API client credentials for authentication. You can generate your API credentials either from Ripple under \"Tools &gt; API Access Tokens\", or Wave(Pro) under \"Settings &gt; API Access Tokens\".</p>"},{"location":"blueapi/authentication/#environment-setup","title":"Environment setup","text":"<p>Set the environment variables below if you are using <code>bluectl</code> or any of our supported client libraries.</p> RippleWave(Pro) <pre><code>ALPHAUS_CLIENT_ID={ripple-client-id}\nALPHAUS_CLIENT_SECRET={ripple-client-secret}\n</code></pre> <pre><code>ALPHAUS_CLIENT_ID={wave-client-id}\nALPHAUS_CLIENT_SECRET={wave-client-secret}\nALPHAUS_AUTH_URL=https://login.alphaus.cloud/access_token\n</code></pre> <p>You can validate your setup using <code>bluectl</code>. Run the following command: <pre><code>$ bluectl whoami\n</code></pre></p> <p>If successful, it will output some information about the authenticated user.</p> <p>At the moment, setting both Ripple and Wave(Pro) client credentials is not supported. If both are set, authentication will default to Ripple.</p> <p>If you're using either <code>bluectl</code> or any of our supported client libraries, the authentication flow is as follows. First, it will look for the following environment variables: <pre><code>ALPHAUS_CLIENT_ID\nALPHAUS_CLIENT_SECRET\n</code></pre></p> <p>The <code>ALPHAUS_AUTH_URL</code> environment variable is optional for Ripple. For Wave(Pro) users, this can be set to: <pre><code>ALPHAUS_AUTH_URL=https://login.alphaus.cloud/access_token\n</code></pre></p> <p>In most cases, the environment variables above should be sufficient. If those are not set, it will then look for: <pre><code>ALPHAUS_RIPPLE_CLIENT_ID\nALPHAUS_RIPPLE_CLIENT_SECRET\n</code></pre></p> <p>If those are not set, it will finally look for: <pre><code>ALPHAUS_WAVE_CLIENT_ID\nALPHAUS_WAVE_CLIENT_SECRET\n</code></pre></p>"},{"location":"blueapi/authentication/#calling-jsonrest-api-directly","title":"Calling JSON/REST API directly","text":"<p>If you prefer to call our JSON/REST API directly, you can use <code>bluectl</code> to generate the access token. This is useful for APIs that are not yet supported in <code>bluectl</code>. <pre><code># Get access token for production:\n$ bluectl token\neyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhd...\n\n# You can use the command above to provide access tokens to your\n# other commands. For example:\n$ curl -H \"Authorization: Bearer $(bluectl token)\" \\\n  https://api.alphaus.cloud/m/blue/iam/v1/whoami | jq\n{\n  \"id\":\"test\",\n  \"parent\":\"MSP-xxxxxxx\",\n  \"metadata\":{}\n}\n\n# If you want to access our NEXT (BETA) environment, you can do:\n$ curl -H \"Authorization: Bearer $(bluectl token \\\n  --client-id $MY_CLIENT_ID_NEXT \\\n  --client-secret $MY_CLIENT_SECRET_NEXT --beta)\" \\\n  https://apinext.alphaus.cloud/m/blue/iam/v1/whoami | jq\n{\n  \"id\":\"test\",\n  \"parent\":\"MSP-xxxxxxx\",\n  \"metadata\":{}\n}\n</code></pre></p> <p>You can also use <code>bluectl</code> to provide access tokens to our current, non-Blue APIs here. For example: <pre><code>$ curl -H \"Authorization: Bearer $(bluectl token)\" \\\n  https://api.alphaus.cloud/m/ripple/user | jq\n{\n  ...\n}\n</code></pre></p>"},{"location":"blueapi/authentication/#access-token-endpoints","title":"Access token endpoints","text":"<p>The following are the endpoints used to acquire product-specific access tokens. You will then use these tokens in your calls to the API using the <code>Authorization: Bearer {token}</code> HTTP header. Access tokens are not compatible between products. Ripple access tokens can only be used for Ripple endpoints; Wave(Pro) access tokens are only valid on Wave(Pro) endpoints.</p> RippleWave(Pro) <pre><code>https://login.alphaus.cloud/ripple/access_token\n</code></pre> <pre><code>https://login.alphaus.cloud/access_token\n</code></pre> <p>To obtain an access token, send a POST message to the access token endpoint using the format described below.</p> <p>Request</p> <pre><code>POST {access-token-url} HTTP1.1\nContent-Type: multipart/form-data\n\n{body formdata}\n</code></pre> Name Value <code>grant_type</code> Valid value(s): <code>password</code>, <code>client_credentials</code> <code>client_id</code> The client id you received from Alphaus or from API. <code>client_secret</code> The client secret you received from Alphaus or from API. <code>username</code> You account username. Required if <code>grant_type</code> is set to <code>password</code>. <code>password</code> You account password. Required if <code>grant_type</code> is set to <code>password</code>. <code>scope</code> Valid value(s): <code>openid</code> <p>Response</p> <pre><code>{\n  \"id_token\": \"eyJ0eXAiOiJKV1Q...\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 86400,\n  \"access_token\": \"eyJ0eXAiOiJKV1Q...\",\n  \"refresh_token\": \"def50200...\"\n}\n</code></pre> <p>Example</p> <pre><code>$ curl -X POST \\\n  -F client_id={client-id} \\\n  -F client_secret={client-secret} \\\n  -F grant_type=client_credentials \\\n  -F scope=openid \\\n  https://login.alphaus.cloud/ripple/access_token\n</code></pre>"},{"location":"blueapi/bluectl/","title":"bluectl","text":"<p><code>bluectl</code> is the official command line interface (CLI) for Alphaus services. It uses the same API that powers our Ripple/Wave(Pro)/Aqua UI consoles.</p>"},{"location":"blueapi/bluectl/#installation","title":"Installation","text":"<p>You can install <code>bluectl</code> using Homebrew (MacOS, Linux, and Windows through WSL/2). Run the command below in a terminal: <pre><code>$ brew install alphauslabs/tap/bluectl\n</code></pre></p>"},{"location":"blueapi/bluectl/#authentication","title":"Authentication","text":"<p><code>bluectl</code> uses API client credentials for authentication. You can generate your API credentials either from Ripple under \"Tools &gt; API Access Tokens\", or Wave(Pro) under \"Settings &gt; API Access Tokens\".</p> <p>To validate your credentials with <code>bluectl</code>, run the command below (replace the <code>{client-*}</code> part with your actual client id and client secret values): <pre><code>$ bluectl whoami --client-id {client-id} --client-secret {client-secret}\n</code></pre></p> <p>If successful, it will output some information about the authenticated user.</p>"},{"location":"blueapi/bluectl/#environment-variables","title":"Environment variables","text":"<p>You can also store your credentials as environment variables instead of typing them everytime you run a command. Check out the \"Environment setup\" section here.</p> <p>With environment variables set, you should now be able to run any <code>bluectl</code> commands without the <code>--client-id</code> and <code>--client-secret</code> flags. <pre><code>$ bluectl whoami\n</code></pre></p>"},{"location":"blueapi/bluectl/#configuration-file","title":"Configuration file","text":"<p><code>bluectl</code> also supports authentication using a configuration file located in <code>$HOME/.config/alphaus/config.toml</code>.</p> <pre><code>[default]\nclient-id = 'sample-id'\nclient-secret = 'sample-secret'\n\n[beta]\nclient-id = 'sample-id'\nclient-secret = 'sample-secret'\nauth-url = 'https://loginnext.alphaus.cloud/ripple/access_token'\n</code></pre> <p>You can select a profile using the <code>--profile</code> flag. For example: <pre><code>$ bluectl whoami --profile beta\n</code></pre></p> <p>If the configuration file exists and the <code>[default]</code> profile is set, <code>bluectl</code> will use that credentials. In this case, the <code>--profile default</code> flag can be omitted. If both environment variables and the <code>[default]</code> profile are present, <code>bluectl</code> will use the <code>[default]</code> profile.</p> <pre><code># This usage...\n$ bluectl whoami --profile default\n\n# is the same as...\n$ bluectl whoami\n</code></pre>"},{"location":"blueapi/bluectl/#usage","title":"Usage","text":"<p>Finally, you can explore some of <code>bluectl</code>'s available supported commands by running: <pre><code># Check out the main commands:\n$ bluectl -h\n\n# More information on a specific subcommand:\n$ bluectl {subcommand} -h\n</code></pre></p>"},{"location":"blueapi/client-sdks/","title":"Client SDKs","text":"<p>We are in the process of generating client libraries (SDKs) for programming languages supported in gRPC. If you have a particular programming language in the list you want supported, contact us at support@alphaus.cloud and we will try to prioritize it.</p>"},{"location":"blueapi/client-sdks/#blue-sdk-go","title":"blue-sdk-go","text":"<p>Check out here for more information.</p>"},{"location":"blueapi/client-sdks/#blue-sdk-python","title":"blue-sdk-python","text":"<p>The Python SDK is now available via <code>pip</code>. Simply do: <pre><code>$ pip install alphausblue\n</code></pre> and the Blue Python SDK, and all its dependencies will be installed. Examples can be found on our GitHub repo.</p> <p>Check out here for more information.</p>"},{"location":"blueapi/overview/","title":"Overview","text":"<p>API Reference</p> <p>https://labs.alphaus.cloud/blueapidocs/</p> <p>Blue API allows you to programmatically access our services such as Ripple and Wave(Pro). It uses protocol buffers for service and message definitions, and gRPC for implementation and server/client stub generation. It also uses grpc-gateway for proxying JSON/REST requests to gRPC, and generating OpenAPI documentation. This way, you have the option to use our APIs using either gRPC or JSON/REST, or both.</p> <p>At the moment, Blue API is still a work in progress. Most of the APIs currently supported in Ripple and Wave(Pro) are still not available. In the meantime, you can still use our JSON/REST APIs here. We plan to upgrade as many of our JSON/REST APIs as possible over to gRPC as it is significantly more efficient in terms of throughput and CPU usage compared to JSON/REST API. However, we don't intend to deprecate our JSON/REST APIs once the transition is completed. You should be able to use both.</p>"},{"location":"blueapi/apis/admin/","title":"Admin API","text":"<p>API Reference</p> <p>https://alphauslabs.github.io/blueapidocs/#/Admin</p> <p>The Admin API group provides the API for managing administrative resources and operations in Blue.</p>"},{"location":"blueapi/apis/billing/","title":"Billing API","text":"<p>API Reference</p> <p>https://alphauslabs.github.io/blueapidocs/#/Billing</p> <p>The Billing API group provides the API for managing billing- and invoice-related resources and operations in Blue.</p>"},{"location":"blueapi/apis/cost/","title":"Cost API","text":"<p>API Reference</p> <p>https://alphauslabs.github.io/blueapidocs/#/Cost</p> <p>The Cost API group provides the API for interacting with cost- and usage-related resources and operations in Blue.</p>"},{"location":"blueapi/apis/iam/","title":"IAM API","text":"<p>API Reference</p> <p>https://alphauslabs.github.io/blueapidocs/#/Iam</p> <p>The IAM API group provides the API for managing IAM-related resources and components in Blue. Check out this page to have an overview of how IAM works in Blue.</p>"},{"location":"blueapi/apis/iam/#group-root-users-wip","title":"Group Root Users [WIP]","text":"<p>You can create a root user account for a given billing group or access group with a given set of Wave or Aqua features. Currently, endpoints for creating, retrieving and deleting a group root user are supported as well as retrieving all the group root users associated with the organization. In addition, all the feature flags for a given group root user can be retrieved and updated.</p>"},{"location":"blueapi/apis/iam/#feature-flags","title":"Feature Flags","text":"<p>In order to enable or disable a feature in Aqua or Wave for a given user, the appropriate feature flag should be either enabled or disabled respectively. The following is a list of such feature flags and which feature they control:</p> Feature Flag Feature Name Action Product dashboard_graph Dashboard View Graph Wave / Wave Pro usage_account Usage Reports Accounts - Access Wave / Wave Pro usage_account_graph Usage Reports Accounts - View Graph Wave / Wave Pro usage_account_menu_account_edit Usage Reports Accounts - Edit Info Wave / Wave Pro usage_account_menu_budget Usage Reports Accounts - View Budget Settings Wave / Wave Pro usage_account_menu_budget_edit Usage Reports Accounts - Edit Budget Settings Wave / Wave Pro usage_account_menu_fees_fee Usage Reports Accounts - View Fees Wave / Wave Pro usage_account_menu_fees_credit Usage Reports Accounts - View Credits Wave / Wave Pro usage_account_menu_fees_refund Usage Reports Accounts - View Refunds Wave / Wave Pro usage_account_menu_fees_other_fees Usage Reports Accounts - View Other Fees Wave / Wave Pro usage_report_download Usage Reports Accounts - Download Reports CSV Wave / Wave Pro usage_group Usage Reports Groups - Access Wave / Wave Pro usage_group_graph Usage Reports Groups - View Graph Wave / Wave Pro usage_tag Usage Reports Tags - Access Wave / Wave Pro usage_tag_graph Usage Reports Tags - View Graph Wave / Wave Pro usage_crosstag Usage Reports Crosstag - Access Wave / Wave Pro usage_crosstag_graph Usage Reports Crosstag - View Graph Wave / Wave Pro ri_purchased Reserved Instances View Purchased RI Wave ri_utilization Reserved Instances View RI Utilization Wave ri_recommendation Recommendations Access Wave sp_purchased Savings Plans Access Wave invoice Others Invoice - Display Link Wave / Wave Pro invoice_download_csv_discount Others Invoice - Download Discounted CSV Wave / Wave Pro invoice_download_csv_merged Others Invoice - Download Merged CSV Wave / Wave Pro open_api Others API Access Tokens Wave / Wave Pro users_management Others Sub-user Management Wave / Wave Pro aq_dashboard Dashboard Access Aqua aq_coverage_ratio Coverage Ratio Access Aqua aq_ri_management Reserved Instances Access Aqua aq_sp_management Savings Plans Access Aqua aq_ri_sp_instances RI &amp; SP Recommendations Access Aqua aq_right_sizing Instance Right-Sizing Access Aqua aq_scheduling Scheduling Access Aqua report_filters Report Filters Access Wave Pro aqua_link Aqua Access Wave Pro <p>When setting a feature flag, a value of true will enable the feature and a value of false will disable the feature.</p>"},{"location":"blueapi/apis/kvstore/","title":"KvStore API","text":"<p>API Reference</p> <p>https://alphauslabs.github.io/blueapidocs/#/KvStore</p> <p>All Alphaus clients have free access to the free-tier version of our KvStore, a highly-available, distributed key/value store that is easily accessible using <code>curl</code>, or <code>bluectl</code>, or using any of the gRPC-supported programming languages. All data are encrypted in transit and at rest so you can use this as a general purpose key/value database even in your production workloads.</p> <p>The free version is limited to a regional store closest to you where data is replicated across three zones. If you want to have access to an unlimited, enterprise-grade version, either regional, multi-region, or even a globally-distributed version (data is replicated across multiple regions across multiple continents), please contact our Sales/Support team.</p>"},{"location":"blueapi/apis/kvstore/#limits","title":"Limits","text":"<ul> <li>Total data size (free tier) - around ~100MB</li> <li>Maximum key size - 7KB</li> <li>Maximum value size - 10MB</li> </ul>"},{"location":"blueapi/apis/kvstore/#examples","title":"Examples","text":"<p>Let's use <code>bluectl</code> to demonstrate how to use KvStore. To write a single key/value: <pre><code># key=hello, value=world\n$ bluectl kv write hello world\n\n# If value has spaces, enclose with double-quotes (\") or single-quotes (')\n$ bluectl kv write space \"this value has spaces\"\n</code></pre></p> <p>To read the key/value: <pre><code># Read key=hello, '--bare' for clean output\n$ bluectl kv read hello --bare\nworld\n</code></pre></p> <p>You can also write file contents as value: <pre><code># Here's a sample file with JSON contents\n$ cat /tmp/test.json\n{\n  \"title\":\"JP text\",\n  \"message\":\"\u65e5\u672c\"\n}\n\n# Write the key/value from file, key=json\n$ bluectl kv write json --from-file=/tmp/test.json\n\n# Let's try reading the \"message\" section using jq\n$ bluectl kv read json --bare | jq -r .message\n\u65e5\u672c\n</code></pre></p> <p>You can also scan multiple keys: <pre><code># Read all keys\n$ bluectl kv scan --outfmt=json\n{\"key\":\"hello\",\"value\":\"world\"}\n{\"key\":\"json\",\"value\":\"{\\n  \\\"title\\\":\\\"JP text\\\",\\n  \\\"message\\\":\\\"\u65e5\u672c\\\"\\n}\"}\n{\"key\":\"space\",\"value\":\"this value has spaces\"}\n\n# Or just some keys using SQL's LIKE operator\n$ bluectl kv scan '%ell%'\nKEY    VALUE \nhello  world\n</code></pre></p>"},{"location":"blueapi/apis/operations/","title":"Operations API","text":"<p>API Reference</p> <p>https://alphauslabs.github.io/blueapidocs/#/Operations</p> <p>The Operations API group provides the API for managing long-running operations in Blue.</p>"},{"location":"blueapi/apis/org/","title":"Organization API","text":"<p>API Reference</p> <p>https://alphauslabs.github.io/blueapidocs/#/Organization</p>"},{"location":"blueapi/apis/preferences/","title":"Preferences API","text":"<p>API Reference</p> <p>https://alphauslabs.github.io/blueapidocs/#/Preferences</p> <p>The Preferences API group provides the API for managing user-scoped preferences and settings in Blue.</p>"},{"location":"blueapi/apis/billing/billinggroup/","title":"Billing group documentation","text":"<p>Description of values related to Billing group.</p>"},{"location":"blueapi/apis/billing/billinggroup/#guidance","title":"Guidance","text":"<p>Definition of Billing group.</p> <pre><code>message BillingGroup {\n  string billingInternalId = 1;\n\n  string billingGroupId = 2;\n\n  string billingGroupName = 3;\n\n  string companyName = 7;\n}\n</code></pre>"},{"location":"blueapi/apis/billing/billinggroup/#billinginternalid","title":"billingInternalId","text":"<p>The following section describes the use of the <code>billingInternalId</code>.</p> <p>This is a unique ID given when creating a billing group. This value cannot be changed.</p>"},{"location":"blueapi/apis/billing/billinggroup/#billinggroupid","title":"billingGroupId","text":"<p>The following section describes the use of the <code>billingGroupId</code>.</p> <p>This is a ID for users to manage billing groups in products(Ripple/Wave[Pro]).</p>"},{"location":"blueapi/apis/billing/billinggroup/#billinggroupname","title":"billingGroupName","text":"<p>The following section describes the use of the <code>billingGroupName</code>.</p> <p>This is a Name for users to manage billing groups in products(Ripple/Wave[Pro]).</p>"},{"location":"blueapi/apis/billing/billinggroup/#companyname","title":"companyName","text":"<p>The following section describes the use of the <code>companyName</code>.</p> <p>This is a Name for users to manage company involved in billing.</p>"},{"location":"guides/","title":"Overview","text":"<p>Find user guides, developer guides, API references, tutorials, sample codes, and more.</p>"},{"location":"guides/aws-cost-mods/","title":"Adding cost modifiers to the AWS calculator using bluectl","text":"<p>Note</p> <p>This guide is only applicable to Ripple users.</p> <p>Ripple allows the manipulation of cost values in its AWS cost calculations through cost modifiers. Cost modifiers expose two variables, namely <code>usage</code> and <code>cost</code>, as inputs to user-provided formulas that can change the final cost during daily and monthly calculations. Since the modifier formula supports arithmetic, logical, and comparison operators, it is actually quite flexible.</p> <p>In this guide, we will try and create cost modifiers to our AWS calculations. At the time of writing, there is no UI available yet for these APIs so we will use <code>bluectl</code> for the time being.</p> <p>Make sure to install <code>bluectl</code> first.</p> <p>You might want to query the daily cost details first to know what kind of qualifiers (or filters) to use to further filter down your modifiers' targets. You can check out this guide for more information. For this guide though, we will use <code>productCode:awskms</code> and <code>operation:DescribeKey</code> under Tokyo region for our qualifiers.</p> <p>Warning</p> <p>Ripple's trueunblended calculation uses a different logic than just referencing the lineitem's usage and cost. Be careful when applying modifiers to lineitems that are affected by trueunblended such as parts of AmazonEC2, AmazonRDS, AmazonElastiCache, AmazonES, and AmazonRedShift that are utilizing their respective RIs and/or SPs.</p>"},{"location":"guides/aws-cost-mods/#referencing-usage","title":"Referencing usage","text":"<p>In this example, we will use a different rate of $0.005. Let's modify the description as well by enclosing it with an asterisk <code>*</code> so we will know later on what items were modified.</p> <pre><code># Let's use a file as our input:\n$ cat /tmp/qualifier.json\n{\n  \"awsOptions\":{\n    \"groupId\":\"xWOGCzNy6GlK\",\n    \"qualifiers\":[\n      {\n        \"and\":{\n          \"productCode\":\"awskms\",\n          \"region\":\"re:^ap.*-1$\",\n          \"operation\":\"DescribeKey\"\n        }\n      }\n    ],\n    \"modifier\":{\n      \"formula\":\"usage * 0.005\",\n      \"descriptionModifier\":{\n        \"prefix\":\"*\",\n        \"suffix\":\"*\"\n      }\n    }\n  }\n}\n\n# Create the modifier:\n$ bluectl cost aws calculator mods create \\\n  --raw-input \"$(cat /tmp/qualifier.json)\"\n\n# Query our current modifiers:\n$ bluectl cost aws calculator mods list --outfmt json --bare | jq\n</code></pre> <p>Unfortunately, we either have to wait for the calculator's next scheduled run or we request a billing group calculation to see the effects of these modifiers. We will provide an API to force-calculate specific targets without affecting invoice values in the future so stay tuned for that.</p> <p>Once the calculation is completed, we can query the daily cost to check our results.</p> <pre><code>$ bluectl cost aws usage get \\\n  --raw-input '{\"groupId\":\"xWOGCzNy6GlK\"}' \\\n  --out /tmp/out.csv\n</code></pre> <p>Open the CSV file, filter using our qualifiers, and confirm the resulting cost and the description columns.</p>"},{"location":"guides/aws-cost-mods/#referencing-cost","title":"Referencing cost","text":"<p>Using the same set of commands above, in this example, we will modify the cost itself by adding a markup of 2%.</p> <pre><code>$ cat /tmp/qualifier.json\n{\n  \"awsOptions\":{\n    \"groupId\":\"xWOGCzNy6GlK\",\n    \"qualifiers\":[\n      {\n        \"and\":{\n          \"productCode\":\"awskms\",\n          \"region\":\"re:^ap.*-1$\",\n          \"operation\":\"DescribeKey\"\n        }\n      }\n    ],\n    \"modifier\":{\n      \"formula\":\"cost + (cost * 0.02)\",\n      \"descriptionModifier\":{\n        \"prefix\":\"*\",\n        \"suffix\":\"*\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"guides/aws-cost-mods/#referencing-both-usage-and-cost","title":"Referencing both usage and cost","text":"<p>The following examples refer only to the <code>formula</code> key in our <code>qualifier.json</code> file above.</p> <p>This formula means that if the usage is less than 50, set the cost to 0, otherwise, return the current cost.</p> <pre><code>usage &lt; 50.0 ? 0 : cost\n</code></pre> <p>This formula uses the following cost ranges:</p> <ul> <li>If cost is less than $10 or usage is less than 5, give 1% discount,</li> <li>If cost is $10 or more but less than $50, give 2% discount,</li> <li>If cost is $50 or more, give 3% discount.</li> </ul> <p>(Should be one line) <pre><code>cost &lt; 10.0 || usage &lt; 5.0\n  ? cost - (cost * 0.01)\n  : (cost &gt;= 10.0 &amp;&amp; cost &lt; 50.0\n       ? cost - (cost * 0.02)\n       : cost - (cost * 0.03))\n</code></pre></p>"},{"location":"guides/aws-enable-api-access/","title":"Enabling AWS payer API access using bluectl","text":"<p>Note</p> <p>This guide is only applicable to Ripple users.</p> <p>If you have registered your AWS payer account using CloudFormation as described here, Alphaus will have a read-only API access to the payer's cost details such as RIs, SPs, etc. However, if you have some payer accounts that were registered to Ripple manually (before the CloudFormation support was released), Alphaus only has read access to the S3 bucket containing the CUR files. Although API access is optional, we recommend you to setup API access to allow us to have more accuracy in the calculation results. Without API access, our calculation engine, especially for trueunblended, uses CUR data for your RIs and SPs. This is only a best-effort basis as RI and SP information in the CUR are sometimes incomplete. API access will allow us to have a more accurate information about your payer's RIs, SPs, and other cost-related resources.</p> <p>Make sure to install <code>bluectl</code> first. Also make sure that you have the needed permissions to deploy CloudFormation templates on the payer account. The template used in this guide will create an IAM Role with read-only API access to the payer's cost details. You can check out the actual template here.</p> <p>Open a terminal and run the following command (<code>012345678901</code> is a sample payer account ID):</p> <pre><code>$ bluectl xacct create 012345678901 apionly\nOpen the link below in your browser and deploy:\nhttps://console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/..\nConfirm successful deployment? [Y/n]: \n</code></pre> <p>Click on the URL link, or copy it to your browser. It will open the CloudFormation console with the parameters filled up. Leave the defaults, check the \"acknowledge\" checkbox, and click \"Create stack\".</p> <p>Once the deployment is done and successful, return to the terminal above and press Enter (<code>Y</code> is the default option). The deployment validation will begin. If there are no issues, validation details are displayed and the process is completed.</p> <p>You can run the command below to check API access information about your payer accounts.</p> <pre><code>$ bluectl xacct list\n</code></pre>"},{"location":"guides/aws-query-costs/","title":"Querying AWS costs using bluectl","text":"<p><code>bluectl</code> is a flexible tool that you can use to query your cost data in Ripple/Wave(Pro). Since it also supports most, if not all of the possible API parameters, in some cases, you can even query data combinations that are not yet available in our UI.</p> <p>--raw-input</p> <p>Blue API and <code>bluectl</code> are still in beta. For <code>bluectl</code> to be able to support most Blue API parameter combinations, it provides a <code>--raw-input</code> flag which accepts the same JSON input required in Blue API for most of its commands. Refer to the examples using the <code>--raw-input</code> flag below.</p> <p>As Blue API becomes more stable, we will provide more easy-to-use parameters to <code>bluectl</code> so you don't have to use the <code>--raw-input</code> flag in the future. Stay tuned.</p>"},{"location":"guides/aws-query-costs/#querying-a-billing-groups-daily-costs-for-the-current-month","title":"Querying a billing group's daily costs for the current month","text":"<pre><code># Replace 'abcdef' with your billing internal id.\n$ bluectl cost aws get --raw-input '{\"groupId\":\"abcdef\"}'\n</code></pre>"},{"location":"guides/aws-query-costs/#querying-an-accounts-daily-costs-for-the-current-month","title":"Querying an account's daily costs for the current month","text":"<pre><code># Replace '012345678901' with your account id.\n$ bluectl cost aws get --raw-input '{\"accountId\":\"012345678901\"}'\n</code></pre>"},{"location":"guides/aws-query-costs/#using-date-ranges-in-your-query","title":"Using date ranges in your query","text":"<pre><code># Query costs for the month of December, 2021.\n$ bluectl cost aws get --raw-input \\\n  '{\"accountId\":\"012345678901\",\"startTime\":\"20211201\",\"endTime\":\"20211231\"}'\n</code></pre>"},{"location":"guides/aws-query-costs/#exporting-your-queries-to-csv","title":"Exporting your queries to CSV","text":"<p>You can use the <code>--out {location}</code> flag to export your queries to a CSV file. For example: <pre><code>$ bluectl cost aws get --raw-input '{\"groupId\":\"abcdef\"}' --out /tmp/out.csv\n</code></pre></p> <p>Reference</p> <p>Check out the JSON request format here to know more about the <code>bluectl cost aws get --raw-input '{...}'</code> command's supported parameters.</p> <p>Tip: use file as --raw-input</p> <p>If your <code>--raw-input</code> is getting longer and is becoming difficult to read, you can write it in a file, and then reference that file in your command. For example, <pre><code># This is your query file. Modify as needed.\n$ cat /tmp/query.json\n{\n  \"accountId\":\"012345678901\",\n  \"startTime\":\"20211201\",\n  \"endTime\":\"20211231\"\n}\n\n# Use query.json file as your --raw-input.\n$ bluectl cost aws get --raw-input \"$(cat /tmp/query.json)\" --out /tmp/out.csv\n</code></pre></p>"},{"location":"guides/aws-query-costs/#grouping-by-month","title":"Grouping by month","text":"<pre><code># Query monthly service costs from December, 2021 to January 2022.\n$ cat /tmp/query.json\n{\n  \"accountId\":\"012345678901\",\n  \"startTime\":\"20211201\",\n  \"endTime\":\"20220131\",\n  \"awsOptions\":{\n    \"groupByMonth\":true\n  }\n}\n\n$ bluectl cost aws get --raw-input \"$(cat /tmp/query.json)\" --out /tmp/out.csv\n</code></pre>"},{"location":"guides/aws-query-costs/#grouping-by-cost-attributes","title":"Grouping by cost attributes","text":"<p>You can group your costs by cost attributes (or columns). Blue API supports the following attributes for grouping: <code>productCode</code>, <code>serviceCode</code>, <code>region</code>, <code>zone</code>, <code>usageType</code>, <code>instanceType</code>, <code>operation</code>, <code>invoiceId</code>, <code>description</code>, and <code>resourceId</code>. You can group by any combination of these attributes.</p> <pre><code># Query January 2022 daily costs grouped by service and region.\n$ cat /tmp/query.json\n{\n  \"accountId\":\"012345678901\",\n  \"startTime\":\"20220101\",\n  \"endTime\":\"20220131\",\n  \"awsOptions\":{\n    \"groupByColumns\":\"productCode,region\"\n  }\n}\n\n$ bluectl cost aws get --raw-input \"$(cat /tmp/query.json)\" --out /tmp/out.csv\n</code></pre> <pre><code># Query January 2022 costs grouped by service and region, then group by month.\n$ cat /tmp/query.json\n{\n  \"accountId\":\"012345678901\",\n  \"startTime\":\"20220101\",\n  \"endTime\":\"20220131\",\n  \"awsOptions\":{\n    \"groupByColumns\":\"productCode,region\",\n    \"groupByMonth\":true\n  }\n}\n\n$ bluectl cost aws get --raw-input \"$(cat /tmp/query.json)\" --out /tmp/out.csv\n</code></pre>"},{"location":"guides/aws-query-costs/#filtering-your-queries","title":"Filtering your queries","text":"<p>Blue API provides a flexible way for you to further filter your queries in combination with your cost attributes. This allows you to query more specific information such as specific services, or specific regions, or a combination of the two.</p> <pre><code>$ cat /tmp/query.json\n{\n  \"accountId\":\"012345678901\",\n  \"startTime\":\"20220101\",\n  \"endTime\":\"20220131\",\n  \"awsOptions\":{\n    \"filters\":[\n      {\n        \"andFilters\":{\n          \"productCode\":\"AmazonEC2\",\n          \"region\":\"ap-northeast-1\"\n        }\n      },\n      {\n        \"andFilters\":{\n          \"productCode\":\"AmazonRDS\"\n        }\n      }\n    ]\n  }\n}\n\n$ bluectl cost aws get --raw-input \"$(cat /tmp/query.json)\" --out /tmp/out.csv\n</code></pre> <p>The example above can be interpreted as:</p> <ul> <li>(<code>productCode</code> is equal to \"AmazonEC2\" AND <code>region</code> is equal to \"ap-northeast-1\") OR</li> <li>(<code>productCode</code> is equal to \"AmazonRDS\")</li> </ul> <p>The items inside the <code>andFilters</code> key use the AND operator, while the <code>andFilters</code> themselves use the OR operator.</p> <p>Blue API filters also support regular expressions using Google's RE2 by prefixing your filter values with either <code>re:</code> (match) or <code>!re:</code> (reverse match).</p> <pre><code># Query all EC2 or RDS costs in all regions starting with \"ap-\".\n$ cat /tmp/query.json\n{\n  \"accountId\":\"012345678901\",\n  \"startTime\":\"20220101\",\n  \"endTime\":\"20220131\",\n  \"awsOptions\":{\n    \"filters\":[\n      {\n        \"andFilters\":{\n          \"productCode\":\"re:AmazonEC2|AmazonRDS\",\n          \"region\":\"re:^ap-.*\"\n        }\n      }\n    ]\n  }\n}\n\n$ bluectl cost aws get --raw-input \"$(cat /tmp/query.json)\" --out /tmp/out.csv\n</code></pre>"},{"location":"guides/aws-query-costs/#filtering-by-tags","title":"Filtering by tags","text":"<p>Tag filtering is similar to filtering by attributes in terms of the logic order and regular expressions support. The only difference is that your <code>andFilters</code> map will contain the tag key/values.</p> <pre><code># Query all costs that are tagged with 'key=user:Name' and 'value=some-name'.\n$ cat /tmp/query.json\n{\n  \"accountId\":\"012345678901\",\n  \"startTime\":\"20220101\",\n  \"endTime\":\"20220131\",\n  \"awsOptions\":{\n    \"tagFilters\":[\n      {\n        \"andFilters\":{\n          \"user:Name\":\"some-name\"\n        }\n      }\n    ]\n  }\n}\n\n$ bluectl cost aws get --raw-input \"$(cat /tmp/query.json)\" --out /tmp/out.csv\n</code></pre>"},{"location":"guides/aws-register-payer/","title":"Registering AWS payer accounts using bluectl","text":"<p>Note</p> <p>This guide is only applicable to Ripple users.</p> <p>Make sure to install <code>bluectl</code> first. Also make sure that you have the needed permissions to deploy CloudFormation templates on the payer account. The template used in this guide will setup a new CUR export definition to an S3 bucket. It will also create an IAM Role with read access to the target bucket alongside read-only API access to the payer's cost details such as RIs, SPs, etc. You can check out the actual template here.</p> <p>Open a terminal and run the following command (<code>012345678901</code> is a sample payer account ID):</p> <pre><code>$ bluectl xacct create 012345678901\nOpen the link below in your browser and deploy:\nhttps://console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/..\nConfirm successful deployment? [Y/n]: \n</code></pre> <p>Click on the URL link, or copy it to your browser. It will open the CloudFormation console with the parameters filled up. Check the \"acknowledge\" checkbox, and click \"Create stack\".</p> <p>Once the deployment is done and successful, return to the terminal above and press Enter (<code>Y</code> is the default option). The deployment validation will begin. If there are no issues, registration details are displayed and the process is completed.</p>"},{"location":"guides/aws-register-payer/#different-region-for-s3-bucket","title":"Different region for S3 bucket","text":"<p>By default, the CloudFormation stack will be deployed to <code>us-east-1</code> region. This is because, at the time of this writing, AWS only supports CUR export definition on that region. If you prefer to have your S3 bucket located on a different region however, you can do the following steps.</p> <p>First, create an S3 bucket using the command below. When in the CloudFormation console, make sure that you are in your desired region when deploying the stack. You can check out the actual template here.</p> <pre><code>$ bluectl xacct create 012345678901 s3only\n</code></pre> <p>Once the bucket is created, deploy the main CloudFormation template using the command below. In the CloudFormation console, select the \"USE_EXISTING\" parameter, and update the S3 bucket name (<code>CurS3BucketName</code>) and region (<code>CurS3BucketRegion</code>) with the values used in the first deployment.</p> <pre><code>$ bluectl xacct create 012345678901\n</code></pre>"},{"location":"guides/invoice-calc-sched/","title":"Scheduling your invoice calculations using bluectl","text":"<p>Note</p> <p>This guide is only applicable to Ripple users.</p> <p>In this guide, we will try and create an invoicing calculation schedule for Ripple every 3rd day of each month. At the moment, only one schedule is allowed per Ripple account.</p> <p>Make sure to install <code>bluectl</code> first.</p> <p>Note that creating a calculation schedule automatically enables your notification channels as well. If you don't specify a notification channel during schedule creation, an email-type channel will be created using your primary email address. At the moment, only email-type channels are supported.</p> <p>Schedules are specified using the Unix cron format. For example, every 7th day of the month at 9:00am: <code>0 9 7 * *</code>. To create our schedule for this guide (every 3rd of the month), run the following command:</p> <pre><code>$ bluectl cost aws calculation schedule create \"0 0 3 * *\"\n</code></pre> <p>Run the following command to see your current schedule:</p> <pre><code>$ bluectl cost aws calculation schedule list\nID        SCHEDULE   NEXT_RUN              NOTIFICATION_CHANNEL\nCsqsj4v2  0 0 3 * *  2022-03-03T00:00:00Z  7143c90d-6f84-4051...\n</code></pre> <p>--notification-channel</p> <p>If you want to use an existing notification channel, use the <code>--notification-channel=id</code> flag. You can get your channel ids using the following command:</p> <pre><code>$ bluectl notification channels list\n</code></pre> <p>Finally, run the following command to delete your schedule:</p> <pre><code>$ bluectl cost aws calculation schedule rm -\n</code></pre>"},{"location":"octo/","title":"Overview","text":"<p>Welcome to Alphaus documentation. Find user guides, developer guides, API references, tutorials, sample codes, and more.</p>"},{"location":"octo/account-registration-gcpbigquery/","title":"Setup BigQuery to register GCP billing account in Octo","text":""},{"location":"octo/account-registration-gcpbigquery/#export-billing-data-to-bigquery","title":"Export Billing Data to BigQuery","text":"<p>In order for Octo to help you with managing your Google Cloud Platform bills, you need to first export your billing data to BigQuery. This lets Octo see all the details of your cloud spending, so it can give you the best advice on how to save money and manage costs effectively. </p> <p>If you have already exported your data to BigQuery, you can skip this step and proceed to the next one. If not, you can follow the instructions below.</p> <ol> <li> <p>Choose the Project ID you want to save the dataset to the BigQuery.</p> <p> It is recommended to create a project for hosting Cloud Billing exports, as this facilitates efficient management and organization of billing data.</p> </li> <li> <p>Go to BigQuery, click the three vertical dots then Create Dataset.</p> <p> </p> </li> <li> <p>Go to Billing and Select Billing Export</p> <p></p> </li> <li> <p>Select the <code>BIGQUERY EXPORT</code> tab and click <code>EDIT SETTINGS</code> under the <code>Standard Usage Cost</code> section.</p> <p></p> </li> <li> <p>In the <code>Projects</code> input, select the Project ID where the dataset is saved. For the \"Dataset\" input, choose the dataset that you've created, and then click <code>SAVE</code>.</p> <p></p> </li> </ol>"},{"location":"octo/account-registration-gcpbigquery/#add-bigquery-permission","title":"Add BigQuery Permission","text":"<ol> <li> <p>After completing the previous step, return to BigQuery and locate the dataset created. Click the three vertical dots next to the dataset name, then click <code>Share</code> </p> <p></p> </li> <li> <p>Click Add Principal and use the Alphaus service account provided below and assign the \"BigQuery Data Viewer\" role to it, then click \"Save.\" <pre><code>gcpimportd@alphaus-gcpbatch.iam.gserviceaccount.com\n</code></pre> </p> </li> </ol>"},{"location":"octo/account-registration/","title":"Account Registration","text":"<p>Octo's cost and usage data rely on the registered cloud service provider's account. In the account page, CSP's accounts are registered, listed, updated and deleted.</p> <p></p>"},{"location":"octo/account-registration/#registering-an-account","title":"Registering an account","text":"<p>Account registration enables the user to register the source of data in Octo. As of now, Octo supports AWS, Azure and GCP vendors. This is only accessible to admin users.</p> <p>After successful account registration, it will take up to a day for Octo to retrieve the data from your CSP account for them to be displayed in Octo.</p> AWSMicrosoft AzureGoogle Cloud <p>Currently we have 2 steps in registering AWS account in Octo. First is through AWS console, which requires you to sign-in to you account and involves deploying stacks or stackset in your AWS account. Second option is using Terraform module, you can use our  terraform module to deploy the necessary resources in your AWS account. </p> <p>Via AWS Console</p> <ol> <li> <p>Select Registration Method. Choose Connect via AWS Console.</p> </li> <li> <p>Basic Details. This step will save your account's Id and name if provided.</p> <p>a. Input your AWS Account Id (12 digits).</p> <p>b. Input Account Name (Optional).</p> <p>c. Click Register Account.</p> <p>d. If there is no error, then click Next.</p> </li> <li> <p>Setup API Access. In this step it will deploy a stack in your AWS account, this will setup needed permission to allow Octo to perfome API Operation in your account.</p> <p>a. Click Open AWS create stack page. This will bring you create stack page in your currently signed-in AWS account, make sure you deploy the stack in your intended account, default region would be <code>us-east-1</code>.</p> <p>b. Please check default values when creating stack:</p> <ul> <li> <p>Stack name (You can retain the value or input your desired stack name.)</p> </li> <li> <p>ExternalId (Do not change.)</p> </li> <li> <p>Principal (Do not change.)</p> </li> </ul> <p>c. Tick the checkbox to agree the I acknowledge that AWS CloudFormation might create IAM resources with custom names. message.</p> <p>d. After checking the stack details, click Create stack button. If create stack is success, go back to Octo.</p> <p>e. Click Check and Confirm to verify the deployment.</p> <p>f. If verification is success, it would check whether your account is a linked or payer account. If it is linked, you can click the Confirm and Finish button to finish the registration. If payer then click next to proceed with additional steps for payer accounts.</p> </li> <li> <p>Setup Multiple API Access - Optional (Payer Only). This step will use stackset to deploy API Access in all linked accounts under the payer account. This is useful if your organization have many linked accounts that you want to register to Octo.</p> <p>a. Click Open AWS create stackset page. This will bring you to create stackset page in your currently signed-in AWS account, make sure you deploy the stackset in your intended account.</p> <p>b. In the create stackset page, follow this guide: Setup multiple account API Access using stackset</p> <p>c. Click check and confirm. This will verify you stackset deployment.</p> <p>d. If success, you can click Next.</p> </li> <li> <p>Setup CUR and S3 bucket (Payer Only). This will deploy stacks for setting up CUR definition in your account, it will also setup a bucket to store your CUR data. You can choose whether to proceed with the default configuration or target S3 bucket in a different region. Another guide can be found here</p> <p>a. Click AWS create stack page. This will bring you create stack page in your currently signed-in AWS account, make sure you deploy the stack in your intended account.</p> <p>b. Click check and confirm. This will verify you stack deployments.</p> <p>d. If success, you can click Confirm and finish.</p> </li> </ol> <p>Via Terraform</p> <p>Note: You must have terraform installed in your local machine to proceed. You can follow this guide. (Optional) If you prefer to use AWS CLI for authenticating your AWS account, you can follow this guide.</p> <ol> <li> <p>Select Registration Methodd. Click Via other options, choose terraform.</p> </li> <li> <p>Basic Details. This step will save your account's Id and name if provided.</p> <p>a. Input your AWS Account Id (12 digit).</p> <p>b. Input Account Name (Optional).</p> <p>c. Click Register Account.</p> <p>d. If there is no error, then click Next.</p> </li> <li> <p>Check this terraform module, from there you can read it's README section for more detailed information about the module and the required inputs.</p> </li> <li> <p>Run terraform init, this initializes a working directory containing Terraform configuration files, terraform plan to check what resources will be created, and terraform apply to create those resources. You can also check here for more information about the Terraform CLI.</p> </li> <li> <p>After running those commands above, check if the deployments are successful, if so, click Check and confirm to verify. You can also check in your AWS account console to see if the resources are properly created.</p> </li> <li> <p>On Octo, you can see the status of the deployments for API Access, CUR and S3 bucket (For payer account only), and multiple account API access - optional (For payer account only).</p> </li> <li> <p>If API Access is success, you can click Confirm and Finish.</p> </li> </ol> <p>For Payer accounts, if it's registered without using stackset, you can still enable it by doing the steps above, just make sure you set the use_stackset to true in the terraform module, it will update the resources and automatically register all your linked account to Octo, there is no need to delete your payer account and register again.</p> <p>Registering Azure CSP Payer Account involves 3 steps, Basic Details, Partner Center Credentials, and Partner API Credentials.</p> <p>Note: You can only register one payer account as of now.</p> <ol> <li> <p>Basic Details</p> <p>a. Input your preferred acount name (Optional).</p> <p>b. Click Next.</p> </li> <li> <p>Partner Center Credentials</p> <p>a. Input your Client ID, Application ID, and Secret key to procceed.</p> <p>b. Click Register Credentials. This will verify your input credentials.</p> <p>c. If success, you can now click Next.</p> </li> <li> <p>Partner API Credentials</p> <p>a. On this step, you can verify your MPN ID, Directory (Tenant ID), and Application ID. </p> <p>b. Input your secret key.</p> <p>c. Click register credentials. This will open a new tab on which you will require to sign-in in to your account. The goal of this step is to obtain an authorization code which is needed on the next input.</p> <p>d. Input the code.</p> <p>e. Click confirm and register.</p> </li> </ol> <p>To register your billing account in Octo, you must follow these steps.</p> <ol> <li> <p>Basic details</p> <p>a. Input your preferred name for your billing account (Optional).</p> </li> <li> <p>Export billing data to BigQuery</p> <p>a. Follow the instructions, you can also read this guide for more detailed steps.</p> </li> <li> <p>Add BigQuery permission</p> <p>a. Follow the instructions, you can also read this guide for more detailed steps.</p> </li> <li> <p>Register Billing Account</p> <p>a. Input your billing account ID.</p> Click to view image <p></p> <p>b. Input your project ID (This is where you dataset is hosted).</p> <p>c. Input BigQuery dataset name.</p> <p>d. Input BigQuery dataset region.</p> Click to view image <p></p> <p>e. Click confirm and register.</p> </li> </ol>"},{"location":"octo/account-registration/#account-list","title":"Account List","text":"<p>All registered accounts are displayed on the account page with the status of the account registration and their account type. To see account list, click <code>More</code> on the sidebar and select <code>Account Registration</code>.</p> <p>Different account status are (Applicable to AWS accounts only):</p> <p><code>API</code> - API access is established. Applicable to Payer and Linked accounts.</p> <p><code>PAYER</code> - Payer account is set on the linked account. This is only applicable to linked accounts since payer accounts automatically sets itself as the payer account.</p> <p><code>CUR</code> - CUR and S3 bucket setup is successfuly setup. Applicable to payer accounts only.</p> <p><code>STACKSET</code> - Stackset for multiple accounts api access is successfully setup. Applicable to payer accounts only.</p>"},{"location":"octo/account-registration/#edit-settings","title":"Edit Settings","text":"<p>You can choose to edit you CSP account by clicking the account you want to edit and on the right side click the Kebab menu icon and select <code>Edit Settings</code>.</p> <ol> <li> <p>In the basic details section, you can only update the account name.</p> </li> <li> <p>Next steps are specific on what CSP account vendor you are trying to edit. It is similar process on registering an account.</p> </li> </ol>"},{"location":"octo/account-registration/#delete-account","title":"Delete Account","text":"<p>Delete account removes the account from our database. To delete an account, click the account you want to delete and on the right side click the Kebab menu icon and select <code>Delete Account</code></p>"},{"location":"octo/alerts-management/","title":"Alerts Management","text":"<p>As of this writing, Octo has three types of alerts: cost, anomaly detection, and discount expiration. We'll be discussing how to create alerts on each type. Before this, make sure you have at least one channel created in the Channel Management page.</p>"},{"location":"octo/alerts-management/#navigate-to-the-channel-management-tab","title":"Navigate to the Channel Management Tab","text":"<ul> <li>Locate the gear or cog icon on the top right corner of the app header, just beside your profile picture. You will see a curation of tabs</li> <li>Under the the <code>NOTIFICATION</code> section, click <code>Alerts Management</code></li> </ul>"},{"location":"octo/alerts-management/#creating-an-alert","title":"Creating an Alert","text":""},{"location":"octo/alerts-management/#cost-alert","title":"Cost Alert","text":"<p>Cost alerts aide in monitoring your cost groups' daily spend. You can monitor multiple cost groups and send alerts to multiple channels per alert. There are two types of threshold available: fixed cost and percentage compared to previous day. For the fixed cost, you supply the amount you want to be the limit for the cost group/s' daily spend and Octo will send an alert to the designated channel once your spend exceeds this limit. As for the percentage compared to the previous day's spend, the number you input will be used to measure if the day's spend exceeds the specific percentage of the previous day's spend.</p> <ul> <li>Navigate to the <code>COST</code> tab</li> <li>Click <code>CREATE NEW ALERT</code> and a popup dialogue box should appear</li> <li>Supply the alert name</li> <li>Choose one or multiple cost groups and click <code>NEXT</code></li> <li>Select if you would opt for the fixed or percentage type of alert</li> <li>Supply the fixed amount or percentage</li> <li>Select which channels you would like the alerts to be sent to</li> <li>Click <code>CREATE ALERT</code></li> </ul>"},{"location":"octo/alerts-management/#anomaly-detection-alert","title":"Anomaly Detection Alert","text":"<p>Anomaly detection alerts are used to monitor a cost group if there is an anomaly and alert you if there is a significant deviation from the usual spending based from your historical data. You can monitor single cost group and send alerts to multiple channels. </p> <ul> <li>Navigate to the <code>ANOMALY DETECTION</code> tab</li> <li>Click <code>CREATE NEW ALERT</code> and a popup dialogue box should appear</li> <li>Supply the alert name</li> <li>Choose one cost group and click <code>NEXT</code></li> <li>Choose the frequency of the alert (weekly,monthly)</li> <li>Select which channels you would like the alerts to be sent to</li> <li>Click <code>CREATE ALERT</code> </li> </ul>"},{"location":"octo/alerts-management/#discount-expiration-alert","title":"Discount Expiration Alert","text":"<p>The Discount Expiration Alert feature allows you to monitor the expiration dates of your purchased discounts, such as Reserved Instances and Savings Plans in AWS. Currently, this feature supports AWS only. To create a new alert, follow the steps below.</p> <ul> <li>Navigate to the <code>DISCOUNT EXPIRATION</code> tab</li> <li>Click <code>CREATE NEW ALERT</code> and a popup dialog box should appear</li> <li>Supply the alert name</li> <li>Choose one cost group. This tracks the discount plans associated with this cost group. Then, click <code>NEXT</code></li> <li>Select frequencies. You can choose as many as needed.</li> <li>Select which channels you would like the alerts to be sent to</li> <li>Click <code>CREATE ALERT</code></li> </ul>"},{"location":"octo/alerts-management/#editing-an-alert","title":"Editing an Alert","text":"<ul> <li>Editing alerts are pretty similar to creating one</li> <li>Navigate to the tab of the desired alert type</li> <li>Locate the specific alert you want to edit and click the pen icon on the far right side just beside the transh icon</li> <li>A popup dialogue box should appear and you can edit the information as you wish</li> </ul>"},{"location":"octo/alerts-management/#deleting-an-alert","title":"Deleting an Alert","text":"<ul> <li>Navigate to the tab of the desired alert type</li> <li>Locate the specific alert you want to delete and click the trash icon on the far right side</li> <li>Confirm the deletion</li> </ul>"},{"location":"octo/alerts-management/#enabledisable-an-alert-anomaly-detection-and-discount-expiration-alerts","title":"Enable/Disable an Alert (Anomaly Detection and Discount Expiration Alerts)","text":"<ul> <li>Navigate to the actions column of the specific alert</li> <li>Click the toggle switch to enable or disable the alert</li> </ul>"},{"location":"octo/channel-management/","title":"Channel Management","text":"<p>Receive alerts from Octo through three ways: email, Slack, and MS Teams. These channels can be used across your organization. We'll be discussing how to create channels on each type.</p>"},{"location":"octo/channel-management/#navigate-to-the-channel-management-tab","title":"Navigate to the Channel Management Tab","text":"<ul> <li>Locate the gear or cog icon on the top right corner of the app header, just beside your profile picture. You will see a curation of tabs</li> <li>Under the the <code>NOTIFICATION</code> section, click <code>Channel Management</code></li> </ul>"},{"location":"octo/channel-management/#creating-a-channel","title":"Creating a Channel","text":"<p>From here, you will see three cards which separate your channels per type. Click the <code>ADD CHANNEL</code> button and a popup dialogue box should appear.</p>"},{"location":"octo/channel-management/#slack","title":"Slack","text":"<ul> <li>Input a channel name to your Slack channel and click <code>SAVE</code>.</li> <li>This will take you to a new tab prompting you to select the Slack channel you want to connect to Octo.</li> <li>If you're not logged in yet, follow the prompt regarding logging in and you should be taken to the authorization page.</li> <li>To change workspaces, locate the drop-down menu on the top right corner and select your desired workspace.</li> <li>Click <code>Allow</code> and this should take you back to the previous tab.</li> </ul>"},{"location":"octo/channel-management/#ms-teams","title":"MS Teams","text":"<ul> <li>First, go to your MS Teams' channel and create a webhook. You can refer how to do so here.</li> <li>Input a channel name to your Slack channel and click <code>NEXT</code>.</li> <li>Supply your MS Teams' channel's webhook and click <code>SAVE</code>.</li> </ul>"},{"location":"octo/channel-management/#email","title":"Email","text":"<ul> <li>This is pretty straightforward. Just supply the channel name which could serve as a nickname or shorthand of your actual email.</li> <li>Click <code>NEXT</code> and supply your email address.</li> <li>Click <code>SAVE</code>.</li> </ul>"},{"location":"octo/channel-management/#editing-a-channel","title":"Editing a Channel","text":"<ul> <li>Click the channel type card to expand the list of channels you have.</li> <li>Simply click the pen icon and supply the edits. This process should be similar to creating a channel.</li> <li>Click <code>SAVE</code>.</li> </ul>"},{"location":"octo/channel-management/#deleting-a-channel","title":"Deleting a Channel","text":"<ul> <li>Click the channel type card to expand the list of channels you have.</li> <li>Simply click the trash icon and you're good to go.</li> </ul> <p>Once you've got your channels set up, you can use these in creating alerts.</p>"},{"location":"octo/costallocation/","title":"Cost Allocation","text":"<p>Octo allows the distribution of costs through cost allocation. Cost allocation covers three areas of distributing costs;</p> <ol> <li>Allocation for enterprise support and other fee item in AWS</li> <li>Allocation of specific Account usage to another accounts</li> <li>Allocation for RI and SP savings</li> </ol>"},{"location":"octo/costallocation/#allocator","title":"Allocator","text":"<p>Allocator manages the cost allocators. Cost allocators are processed daily on the batch. </p> <p>Each cost allocator is composed of a json format as below. <pre><code>{\n  \"category\": \"\",\n  \"expiration\": \"\",\n  \"startMonth\": \"\",\n  \"defaultAccount\": \"\",\n  \"criteria\": [],\n  \"allocator\": []\n}\n</code></pre></p> <p><code>category</code> - Category specifies the area of cost allocation where the cost allocator is to be applied. There are three categories for now, \"fee\", \"account\" and \"savings\".  If category is not specified, the cost allocator is automatically assigned with fee category. <pre><code>\"category\": \"fee\",\n</code></pre></p> <p><code>expiration</code> - Expiration refers to the number of months wherein the cost allocator is active.  The count starts from the time the allocator is created.  If this is not set, this means that the allocator won't expire and it is to be applied always. <pre><code>\"expiration\": \"3\",\n</code></pre></p> <p><code>startMonth</code> - StartMonth refers to the month when the allocation is started. If a fee is to be distributed to a number of months, the month it will reflects first on the account is based on the startMonth value. If this is not set, the current month will be set as the starting month. <pre><code>\"startMonth\": \"2024-01\",\n</code></pre></p> <p><code>defaultAccount</code> - In case there are still some remaining values after cost allocations, it will be applied to the account specified on the defaultAccount. If this is not set, the original or the source account will serve as the default account. <pre><code>\"defaultAccount\": \"123456789012\",\n</code></pre></p> <p><code>criteria</code> - Using the values under criteria, it will determine which items are to be allocated. If the line items in CUR matches with the items in criteria, it will automatically proceeds with the cost allocation. The key part refers to the supported columns for matching the items. The value part refers to the specific value or regex of the items that may fall on that statement. <pre><code>  \"criteria\": [\n    {\n      \"and\": {\n        \"account\": \"re:^434343434343$\",\n        \"description\": \"re:.*Fee.*\",\n        \"productCode\": \"AWSSupportBusiness\"\n      }\n    }\n  ],\n</code></pre></p>"},{"location":"octo/costallocation/#fee-supported-columns","title":"Fee supported columns","text":"<pre><code>        \"account\",\n        \"lineType\",\n        \"productCode\",\n        \"description\",\n        \"productName\",\n        \"currency\",\n</code></pre>"},{"location":"octo/costallocation/#account-usage-supported-columns","title":"Account Usage supported columns","text":"<pre><code>        \"account\",\n        \"operation\",\n        \"description\",\n        \"productCode\",\n        \"usageType\",\n        \"region\",\n</code></pre>"},{"location":"octo/costallocation/#risp-savings-supported-columns","title":"RI/SP Savings supported columns","text":"<pre><code>        \"type\",\n        \"payer\",\n        \"account\",\n        \"arn\",\n        \"productCode\",\n        \"offerClass\",\n</code></pre> <p><code>allocator</code> - Allocator controls the actual cost allocation. Each item on the allocator part determines how the allocation is to be done. <pre><code>  \"allocator\": [\n    {\n      \"type\": \"account\",\n      \"value\": \"434343434343\",\n      \"formula\": \"cost*usage\",\n      \"months\": \"3\"\n    },\n    {\n      \"type\": \"account\",\n      \"value\": \"123456789012\",\n      \"formula\": \"cost*0.2\",\n      \"months\": \"2\"\n    }\n  ],\n</code></pre></p> <p><code>Type</code> - This identifies the type of allocator. As of now, there are 3 types, \"account\", \"payer\" and \"costgroup\".</p> <p><code>Value</code> - This refers to the value of the type of allocator. If the type is set to account, the value is the account id. If the type is set to payer, the value is the payer id. If the type is set to costgroup, the value is the costGroupd id.</p> <p><code>Formula</code> - This refers how the cost allocation is to be computed. We have exposed 2 variables for the users, \"cost\" and \"usage\". Formula can also support conditional statements to determine its value.</p> <p><code>Cost</code> - This is the cost of the item to be allocated.</p> <p><code>Usage</code> -  This is the percentage of the usage of that account compared to all the listed accounts.</p> <p><code>Months</code> - This refers to the number of months the cost allocation is to be applied. If this is set to a number of months, the cost is to be divided equally to the number of months. If not set, the cost is applied to one month only.</p>"},{"location":"octo/costallocation/#simulate-calculations","title":"Simulate calculations","text":"<p>When creating a new allocator, there is an option to check if the allocator details can match with any existing data of the current month. This checks if the details are correct before saving the allocator details to the database. All possible results of the allocator are displayed.</p>"},{"location":"octo/costallocation/#allocations","title":"Allocations","text":"<p>All results after batch processing of fees and ri/sp savings are displayed under Allocations tab. Those are displayed according to the month they are generated.</p> <p>Aside from the results of the batch processing, the results of the allocations are also displayed on the Allocations tab. </p>"},{"location":"octo/costallocation/#how-this-works","title":"How this works?","text":"<ol> <li>Data are fetched from various sources and saved to database.</li> <li>Available data on the database are processed using the Calculations items. Each item is checked if a criteria matches with the details of the items. If it matches, cost allocation proceeds.</li> <li>From the list of allocators, all accounts are resolved. This means that if the type is costgroup and payer, all accounts from that group are listed. Monthly usage are fetched and corresponding formula are applied.</li> <li>Allocation takes place with the usage and cost applied. Splitted items are stored in the database.</li> <li>APIs to list all data for the specified month are called for UI display.</li> </ol>"},{"location":"octo/costallocation/#status","title":"Status","text":"<p><code>Unchecked Allocated</code> - Original item is not distributed into cost allocations.</p> <p><code>Checked Allocated</code> - Cost allocation is applied on the original item.</p> <p><code>Checked Splitted</code> - The splitted item after cost allocation has been applied.</p>"},{"location":"octo/costallocation/#restoring-a-splitted-item","title":"Restoring a splitted item","text":"<p>Restore feature is only applied on the splitted items. This means that the cost allocation has been reverted. All cost allocations or distributions are removed and the original state has been loaded.</p>"},{"location":"octo/costallocation/#cost-groups-allocation-display","title":"Cost Groups Allocation Display","text":"<p>All available data after cost allocation are fetched and displayed under that costgroup.</p> <p>Account Usage</p> <p>Cost group computation is based on the existing costusage API. This means that whatever filters are applied on that cost group are applied also to the cost allocation items.</p> <p>Fees and RI/SP Savings</p> <p>Data are computed on a monthly basis. As of now, to get the available data for the cost group, all data are still based on the accounts in that cost group. </p>"},{"location":"octo/costgroup/","title":"Cost Groups","text":""},{"location":"octo/costgroup/#overview","title":"Overview","text":"<p>A Cost Group in OCTO is a powerful feature that provides a customized view of your cloud costs and usage. They are essentially filters that allow you to break down your cloud expenses according to various dimensions, offering a granular perspective on your spending. </p> <ol> <li> <p>What are Cost Groups?</p> <p>Cost Groups in OCTO are groupings that can be defined based on specific criteria. They allow you to analyze and manage your cloud costs and usage in a way that aligns with your business needs and structure. Whether it's by cloud provider accounts, services, regions, or tags, cost groups help you understand where your money is going and how resources are being utilized.</p> </li> <li> <p>Detailed Analysis</p> <p>Cost Groups offer the flexibility to view your cloud costs and usage across a multitude of dimensions, such as specific cloud provider accounts, services, regions, or tags. This allows you to 'slice and dice' your costs, providing a granular analysis of your cloud spending. It helps you uncover hidden costs, identify trends, or spot inefficiencies, thus contributing to a more comprehensive cloud cost management strategy and in-depth analysis of your cloud spending. </p> </li> </ol> <p>Please note that this feature is only available to Admins in your OCTO organization. This is to ensure that cost data and financial information is managed and viewed by authorized personnel only, thus maintaining data integrity and security within your organization.</p> <p>In conclusion, cost groups in OCTO are a flexible and powerful tool designed to help you better understand and manage your cloud costs. By providing the ability to visualize and customize your cost analysis, cost groups empower you to make more informed decisions about your cloud expenditure. Cost Groups is a key feature in OCTO as discussed in this article. This time, we will tackle how to manage your cost groups efficiently. We shall cover how to create, edit, remove, and view cost groups.</p> <pre><code>            Only Admin accounts can create, edit, and remove cost groups.\n</code></pre>"},{"location":"octo/costgroup/#creating-a-cost-group","title":"Creating a Cost Group","text":"<p>Head to the left side panel section and select 'Cost Group'. Click the '+ CREATE COST GROUP' button and supply basic information such as cost group name and description. You might as well change the avatar and color to your liking. Then create combinations.  </p> <ul> <li> <p>Click Cost Group </p> </li> <li> <p>Click Cost Group Management </p> </li> <li> <p>Click '+ CREATE COST GROUP' </p> </li> <li> <p>Fill CostGroup Details. You might as well change the avatar and color to your liking. </p> </li> </ul>"},{"location":"octo/costgroup/#combinations-in-cost-groups-and-how-to-use-them","title":"Combinations in Cost Groups and How to Use Them","text":"<p>What are combinations and what is its role in creating cost groups? In this article, we shall discuss all about combinations: what it is, how to create one, its benefits, and how to work with them.</p> <p>With the rise of cloud computing came the rise of cloud cost management problems. Different services from different providers are utilized. As the demand for cloud resources increases, companies struggle to manage their cost which leads to unoptimized usage. All that hot mess of cloud resource tracking from different providers can take a toll on a day-to-day basis as it consumes time and effort. OCTO solves all that.</p> <p>To create a Cost Group means we need to deal with combinations. So, what are combinations? Combinations is the building block of Cost Groups. A combination enables the user to customize which accounts or services belong to a certain cost group. Users can combine different accounts from different providers as well as different services, regions, or tags. A filter in its simplest explanation.</p> <p>### Creating Combinations Make sure you are using an admin account. In the Cost Group tab, click \u201cCreate New Cost Group\u201d button. Supply the cost group name and its description. You might as well change the avatar and color to your liking.</p> <p></p> <p>In the highlighted section of the left panel, within the attributes section, there is a combination of vendor, categories, and attributes. Currently, we offer support for vendors such as AWS, Azure, and GCP. Regarding categories, you can choose from options like account, product, region, tag, and more. The chosen category determines which resources will be included in the cost group. To refine your selection, you can further specify a subject, opting for all or selecting from the available accounts, products, regions, tags, etc., depending on the chosen category and your previously registered accounts.</p> <p>Scenario 1 | The ALL subject. You want to include all your AWS accounts in the cost group.</p> <ul> <li> <p>Head to Code Snippets </p> </li> <li> <p>Copy Filter (andFilter) </p> </li> <li> <p>Paste Filter (andFilter) in the combinations under \"awsOptions\" since we're grouping all AWS accounts. </p> </li> <li> <p>Head back to code snippets and copy the account category and paste it inside the \"andFilter\".  </p> </li> <li> <p>Now add a value \"*\" which indicates that your are selecting all accounts associated with a vendor, specifically AWS, in this context. </p> </li> <li> <p>Now click \"Create Cost Group\" </p> </li> <li> <p>Now you are done creating your costgroup, you can now view it. Here it is.  </p> </li> </ul> <p>Note: This setup also applies to other vendors and categories. You also have the option to incorporate categories from various vendors simultaneously. Simply apply the filter of your choice to each vendor individually.</p> <p>Scenario 2 | Select only specific attribute. You want to select only your specific AWS account in the cost group.</p> <p>Same setup on scenario-1 except you need to specify the account you want to create as costgroup. - Head to attributes section and select account category under AWS. </p> <ul> <li> <p>Now copy the account of your choice for the cost group. </p> </li> <li> <p>Now paste it as a value of account category. </p> </li> <li> <p>Now it's done, and click the create cost group button. You can now view it in Cost Groups.</p> </li> </ul> <p>Note: This setup also applies to other vendors and categories. You also have the option to incorporate categories from various vendors simultaneously. Simply apply the filter of your choice to each vendor individually.</p> <p>Scenario 3 | The IS NOT comparison. You want to include all AWS services in your cost group excluding S3.</p> <p>Same setup on previous scenarios except you need to specify the product/service you want exclude to create as costgroup.</p> <ul> <li> <p>After you setup filter, now copy the productCode category from code snippet or simply type it.  </p> </li> <li> <p>Now add \"!re:\" as a value on productCode. This indicates as \"is not\". </p> </li> <li> <p>Head to attributes section and select service category under AWS and copy \"AmazonS3\".   </p> </li> </ul> <p>-Now it's done, and click the creat cost group button. You can now view it in Cost Groups.</p> <p>Note: This setup also applies to other vendors and categories. You also have the option to incorporate categories from various vendors simultaneously. Simply apply the filter of your choice to each vendor individually.</p> <p>Scenario 4 | Multiple Combinations | Select two or more categories Same setup on previous scenarios except you add an additional filter.</p> <ul> <li>Simply append an extra \"andFilters\" based on the number of categories you wish to incorporate in order to establish a cost group. </li> </ul> <p>Note: This setup also applies to other vendors and categories. You also have the option to incorporate categories from various vendors simultaneously. Simply apply the filter of your choice to each vendor individually.</p> <p>Scenario 5 | Multiple Combinations |  Include in the cost group AWS DynamoDB service with a specific account.</p> <p>Same setup on previous scenarios except you add an additional filter inside the \"andFilters\".</p> <p>In this scenario, it implies that you are specifically choosing only AWS DynamoDB under a particular account.</p> <ul> <li>Insert the preferred categories within the \"andFilters.\" </li> </ul> <p>Note: This setup also applies to other vendors and categories. You also have the option to incorporate categories from various vendors simultaneously. Simply apply the filter of your choice to each vendor individually.</p>"},{"location":"octo/costgroup/#edit-and-delete-cost-group","title":"Edit and Delete Cost Group","text":"<p>Only Admin OCTO accounts can edit cost groups which can then edit combinations. Access Cost Groups from the left side panel section and then click your desired cost group. On the side drawer which slides out from the right side, click the side menu on the upper right corner. You can select between editing the combination info, the combination itself, or delete it.</p> <p></p>"},{"location":"octo/curs3payer/","title":"CUR and S3 Bucket Setup for Payer Accounts","text":"<p>To pull your AWS data to Octo, there is a need to setup the CUR and S3 bucket for payer accounts.</p>"},{"location":"octo/curs3payer/#two-deployment-ways-when-setting-up-the-cur-and-s3-bucket","title":"Two deployment ways when setting up the CUR and S3 bucket:","text":""},{"location":"octo/curs3payer/#setup-cloudformation-using-default-configuration","title":"Setup CloudFormation using default configuration.","text":"<p>The CUR export settings and the target S3 bucket will be deployed to us-east-1 region.</p> <ol> <li> <p>Select <code>Default configuration</code>.</p> </li> <li> <p>Click <code>Open AWS Create Stack Page</code>.</p> </li> <li> <p>Clicking the link above will take you to your CloudFormation console.</p> </li> <li> <p>Please make sure that it is deployed on the default <code>us-east-1</code> region.</p> </li> <li> <p>Once done, come back to Octo and click <code>Check and Confirm</code> to start the verification process.</p> </li> </ol>"},{"location":"octo/curs3payer/#setup-target-s3-bucket-in-a-different-region","title":"Setup target S3 bucket in a different region.","text":"<p>S3 bucket is setup on a desired region aside from us-east-1 region.</p> <ol> <li> <p>Select <code>Target S3 bucket in a different region</code>.</p> </li> <li> <p>Under S3 Bucket, click <code>Open AWS Create Stack Page</code>.</p> </li> <li> <p>Clicking the link above will take you to your CloudFormation console.</p> </li> <li> <p>Under CUR, click <code>Open AWS Create Stack Page</code>.</p> </li> <li> <p>Clicking the link above will take you to your CloudFormation console.</p> </li> <li> <p>Set the <code>CurS3BucketOption</code> parameter to <code>USE_EXISTING</code>, then set your <code>CurS3BucketName</code> and <code>CurS3BucketRegion</code> accordingly.</p> </li> <li> <p>Please make sure that it is deployed on the <code>us-east-1</code> region.</p> </li> <li> <p>Once done, come back to this page and click <code>Check and Confirm</code> to start the verification process.</p> </li> </ol>"},{"location":"octo/multiple-account-setup/","title":"Multiple Account API Access Setup","text":"<p>Using CloudFormation StackSets, it is possible to deploy API access for all sub-accounts that the payer account sees in the same organization. This guide shows how to use this ability to onboard your accounts.</p> <p>As each linked accounts are automatically created with Alphaus IAM role, these accounts are also automatically onboarded to Octo.</p>"},{"location":"octo/multiple-account-setup/#prerequisites","title":"Prerequisites","text":"<ul> <li>User access to the payer account in your AWS Management Console</li> <li>User permissions to use StackSets in your AWS Management Console</li> <li>Activate trusted access with AWS Organizations</li> </ul> <p>Reference: AWS CloudFormation StackSets and AWS Organizations</p>"},{"location":"octo/multiple-account-setup/#procedure","title":"Procedure","text":"<ol> <li> <p>On the Octo app, you can register a new payer account or edit the existing payer account.</p> <ul> <li> <p>To register a new payer account, go to More -&gt; Account Registration -&gt; Register New Account -&gt; Amazon Web Services.</p> </li> <li> <p>To edit an existing payer account, go to More -&gt; select payer -&gt; Action -&gt; Edit Setting.</p> </li> </ul> </li> <li> <p>Under Multiple Account API Access Setup, click Open AWS Launch Page.</p> </li> <li> <p>Choose a Template</p> <ul> <li>Scroll down to Prerequisite - Prepare Template and select Template is ready.</li> <li>Under Specify template, ensure that Amazon S3 URL is selected and paste the Template URL from Step 4 into this field.</li> <li>Click Next. </li> </ul> </li> <li> <p>Specify StackSet details</p> <ul> <li>Fill in StackSet name with your desired name.</li> <li>Paste your InternalID and Principal into the relevant field under Parameters. You can check the details on the Octo app.</li> <li>Click Next. </li> </ul> </li> <li> <p>Configure StackSet options</p> <ul> <li>Under Execution configuration, select either Inactive or Active.</li> <li>Click Next. </li> </ul> </li> <li> <p>Set deployment options</p> <ul> <li>Scroll down to Specify regions and input <code>us-east-1</code>.</li> <li>Click Next.  </li> </ul> </li> <li> <p>Review</p> <ul> <li>Review your newly created StackSet and click Run.</li> <li>Your new StackSet should appear within a few moments on the main StackSets page. </li> </ul> </li> <li> <p>After successful stackset deployment, go back to Octo account registration page and click <code>Confirm</code>.</p> </li> </ol>"},{"location":"octo/samlsso/","title":"SAML SSO","text":""},{"location":"octo/samlsso/#overview","title":"Overview","text":"<p>Octo supports SAML SSO (Single-Sign-On) for user authentication. This allows users to login to Octo using their SAML IdP credentials.</p> <p>Compared to the conventional password authentication access, this function enables centralized management for the admins and enhances security.</p> <p>Terms used:</p> <ul> <li> <p>SAML: Security Assertion Markup Language</p> </li> <li> <p>IdP: Identity Provider (e.g. Okta, Google Workspace)</p> </li> <li> <p>SP: Service Provider (e.g. Octo)</p> </li> </ul> <p>Curently Octo only supports the following SAML IdPs:</p> <ul> <li>Okta</li> <li>Google workspace</li> </ul> <p>Pre-requisites:</p> <ul> <li>Sub User Id</li> </ul> <p>(Admin only) To know what is your sub user id, go to Octo -&gt; More -&gt; Member -&gt; click your account and in the right you should see the User ID.</p> <ul> <li>Org Id</li> </ul>"},{"location":"octo/samlsso/#okta-saml-sso","title":"Okta SAML SSO","text":"<p>Note: You must be a super admin to add SAML apps.</p> <p>On your Okta Admin page:</p> <ol> <li> <p>Go to Application -&gt; Create App Integration -&gt; Choose SAML 2.0 -&gt; Next</p> </li> <li> </li> </ol> <p>Name the app whatever you want, you can also put some of your custom logos, and then click next</p> <p></p> <ol> <li> </li> </ol>"},{"location":"octo/samlsso/#general-settings","title":"General Settings","text":""},{"location":"octo/samlsso/#configure-saml","title":"Configure SAML","text":"<p>Single sign-on URL and Audience URI(SP Entity ID):</p> <pre><code>            https://login.alphaus.cloud/octo/saml\n</code></pre> <p>Enable the Use this Recipient URL, and Destination URL.</p>"},{"location":"octo/samlsso/#attibutes-statements","title":"Attibutes Statements","text":"<p>Enter the following values:</p> Name Value <code>https://app.alphaus.cloud/octo/SAML/Attributes/IDPID</code> <code>user.rippleIdpd</code> <code>https://app.alphaus.cloud/octo/SAML/Attributes/Profiles</code> <code>user.rippleProfiles</code> <code>https://app.alphaus.cloud/octo/SAML/Attributes/SessionName</code> <code>user.Email</code> <code>https://app.alphaus.cloud/octo/SAML/Attributes/IsCover</code> <code>user.isCover</code> <code>https://app.alphaus.cloud/octo/SAML/Attributes/SubUserId</code> <code>user.subUserId</code> <p>leave remaining values to default, then Click Next.</p>"},{"location":"octo/samlsso/#help-okta-support-understand-how-you-configured-this-application","title":"Help Okta Support understand how you configured this application","text":"<p>Click whatever it may apply and then Finish.</p>"},{"location":"octo/samlsso/#getting-the-metadaxml","title":"Getting the metada.xml","text":"<p>On you created application, go to -&gt; Sign-on, and open the link in the Metadata URL.</p> <p>After opening, it should open another tab and right click anywhere and save as <code>metadata.xml</code></p>"},{"location":"octo/samlsso/#registering-the-idp-to-octo","title":"Registering the Idp to Octo","text":"<p>Go to Octo, in the preferences found in the top right corner beside your profile avatar. Go to Identity Provider Management Tab and register your recently saved <code>metadata.xml</code> file. Take note of the IdpId you would need it in the next steps.</p>"},{"location":"octo/samlsso/#setup-attributes-to-users","title":"Setup Attributes to Users","text":"<p>Go back to Okta admin page, under Directory -&gt; Profile Editor, choose User(default) and add these Attributes:</p> <p></p>"},{"location":"octo/samlsso/#assign-users-to-the-application","title":"Assign Users to the Application","text":"<p>There are 2 steps to assign users to the application:</p> <ol> <li> <p>On Okta admin page, go to Directory -&gt; People, and choose the user you want to assign to the application, and then go to Applications tab and assign the application you created.</p> </li> <li> <p>On Okta admin page, go to Applications -&gt; Applications, and choose the application you created, and then go to Assignments tab and assign the user you want to assign to the application.</p> </li> </ol> <p>By assigning users to the application, they will be able to see the application on their Okta dashboard.</p>"},{"location":"octo/samlsso/#update-the-user-info","title":"Update the user info","text":"<p>On Okta admin page, go to Directory -&gt; People, and choose the user you want to update their info then go to Profile and edit</p> <p>Update the values of these attributes:</p> <p></p> <p>RippleProfiles: <code>{your orgId}:{roles}</code> it safe to assume this value for now -&gt; <code>{your orgId}:user/Viewer</code></p> <p>RippleIdpId: <code>{The IdpId of the metadata.xml you regsitered in octo}</code></p> <p>SubUserId: <code>{The id of the current user's octo account}</code></p> <p>IsCover: <code>true</code></p> <p>SessionName: <code>{email of the current user}</code></p>"},{"location":"octo/samlsso/#check-and-verify-login","title":"Check and verify login","text":"<p>On you Okta dashboard, you or anyone assigned to the app should see the application you just added</p> <p></p> <p>Open the app, and you should be able to see this dialog. You can log in if it is successful.</p> <p></p>"},{"location":"octo/samlsso/#google-workspace-saml-sso","title":"Google Workspace SAML SSO","text":"<p>Note: You must be a super admin to add SAML apps to your Google Workspace account.</p>"},{"location":"octo/samlsso/#creating-custom-attributes","title":"Creating Custom attributes","text":"<ol> <li> <p>Go to Google Workspace Admin Console</p> </li> <li> <p>Go to Directory -&gt; Users -&gt; More options -&gt; Manage custom attributes -&gt; ADD CUSTOM ATTRIBUTE</p> </li> </ol> <p>Add something like this:</p> <p></p>"},{"location":"octo/samlsso/#creating-custom-saml-app","title":"Creating Custom Saml APP","text":"<ol> <li> <p>Go to Google Workspace Admin Console</p> </li> <li> <p>Go to Apps -&gt; SAML Apps -&gt; Web and mobile apps</p> </li> <li> <p>Click the plus button to add a new SAML app</p> </li> <li> <p>Click add my own custom app</p> </li> </ol>"},{"location":"octo/samlsso/#app-details","title":"App Details","text":"<p>You can name the app whatever you want, you can also put some of your custom icon, and then click continue</p> <p></p>"},{"location":"octo/samlsso/#google-identity-provider-details","title":"Google Identity Provider details","text":"<p>Click Download Metadata</p>"},{"location":"octo/samlsso/#service-provider-details","title":"Service provider details","text":"<p>After downloading the metadata, you would need to enter this:</p> <p>ACS URL: <code>https://login.alphaus.cloud/octo/saml</code></p> <p>Entity ID: <code>https://login.alphaus.cloud/octo/saml</code></p> <p>Leave remaning settings to default, then click continue.</p>"},{"location":"octo/samlsso/#attribute-mapping","title":"Attribute mapping","text":"<p>Click add mapping, then input these:</p> Google Directory attributes App attributes <code>IsCover</code> <code>https://app.alphaus.cloud/octo/SAML/Attributes/IsCover</code> <code>Profiles</code> <code>https://app.alphaus.cloud/octo/SAML/Attributes/Profiles</code> <code>IDPID</code> <code>https://app.alphaus.cloud/octo/SAML/Attributes/IDPID</code> <code>SubUserId</code> <code>https://app.alphaus.cloud/octo/SAML/Attributes/SubUserId</code> <code>Primary email</code> <code>https://app.alphaus.cloud/octo/SAML/Attributes/SessionName</code>"},{"location":"octo/samlsso/#registering-the-idp-to-octo_1","title":"Registering the Idp to Octo","text":"<p>Go to Octo, in the preferences found in the top right corner beside your profile avatar. Go to Identity Provider Management Tab and register your recently saved <code>metadata.xml</code> file. Take note of the IdpId you would need it in the next steps.</p>"},{"location":"octo/samlsso/#add-values-to-custom-attributes-to-users","title":"Add values to custom attributes to users","text":"<ol> <li>Go to directory -&gt; Users -&gt; and choose the user you want to add the custom attributes</li> <li>Go to the User information -&gt; Octo Saml Attributes, edit and add the needed values</li> </ol> <p>IsCover: <code>true</code></p> <p>Profiles: <code>{orgId}:{roles}</code> it safe to assume this value for now -&gt; <code>{orgId}:user/Viewer</code></p> <p>IDPID: <code>{The IdpId of the metadata.xml you regsitered in octo}</code></p> <p>SubUserId: <code>{The id of the current users octo account}</code></p>"},{"location":"octo/samlsso/#check-and-verify-login_1","title":"Check and verify login","text":"<p>Note: Make sure your app is set to On for everyone to make it visible to everyone. If not, go to the app you created and go to the User access tab and click to edit and set it to On for everyone.</p> <p>You can also test the app as an admin by clicking the Test SAML login button.</p> <p>For non-admin users they can found the app in the Google Apps beside their profile.</p>"},{"location":"octo/unitcost/","title":"Unit Cost Documentation","text":""},{"location":"octo/unitcost/#introduction","title":"Introduction","text":"<p>Unit cost is a critical concept in cost management, particularly in cloud environments. It refers to the cost associated with a single unit, which could be a product, a customer, an environment, or any other entity that consumes resources. Understanding unit costs helps organizations allocate expenses more accurately, identify cost-saving opportunities, and improve financial transparency.</p>"},{"location":"octo/unitcost/#purpose","title":"Purpose","text":"<p>The purpose of this documentation is to provide a comprehensive guide on unit cost, its components, and methodologies for calculating and managing unit costs in cloud environments. This will address common challenges faced by organizations in breaking down costs, especially when multiple units share services.</p>"},{"location":"octo/unitcost/#components-of-unit-cost","title":"Components of Unit Cost","text":"<p>In unit cost analysis, there are two fundamental concepts: Unit Types and Unit Items.</p>"},{"location":"octo/unitcost/#unit-types","title":"Unit Types","text":"<p>Unit Types represent the different categories or entities for which you want to break down costs. These could include:</p> <ul> <li>Products: The various products offered by the organization.</li> <li>Customers: The different customers or customer segments served.</li> <li>Environments: Distinct operational environments, such as development, testing, and production.</li> </ul> <p>Naming Conventions - Only alphanumeric characters, spaces and special characters such as  . : + = @ _ / are allowed. - Consecutive special characters or spaces are not allowed. - Name should be unique from other units.</p>"},{"location":"octo/unitcost/#unit-items","title":"Unit Items","text":"<p>Under each Unit Type, there are specific Unit Items. These are the individual entities within the Unit Type for which costs need to be divided and tracked. For example:</p> <ul> <li>Products: Individual products like \"Octo,\" \"Wave,\" and \"Ripple.\"</li> <li>Customers: Specific customers or groups of customers.</li> <li>Environments: Different operational environments such as \"Development Environment,\" \"Testing Environment,\" and \"Production Environment.\"</li> </ul> <p>Naming Conventions - Only alphanumeric characters, spaces and special characters such as  . : + = @ _ / are allowed. - Consecutive special characters or spaces are not allowed. - Name should be unique from other units.</p>"},{"location":"octo/unitcost/#dedicated-resources","title":"Dedicated Resources","text":"<p>Users can select multiple resources as Dedicated Resources. The cost of these resources is assigned solely to the specific unit item. This enables precise cost tracking and ensures that the full cost of a dedicated resource is attributed to the unit item that uses it exclusively.</p>"},{"location":"octo/unitcost/#shared-resources","title":"Shared Resources","text":"<p>Any resources not explicitly mentioned in the Dedicated Resources section are considered Shared Resources. Shared resources are distributed across multiple unit items. In this version, shared resources are allocated by default, assuming they are not dedicated to any single unit item.</p> <p>By defining Unit Types and Unit Items, organizations can more accurately allocate and track costs, ensuring a clear understanding of where resources are being utilized and how expenses are being incurred.</p>"},{"location":"octo/unitcost/#process-of-calculating-unit-cost","title":"Process of Calculating Unit Cost","text":""},{"location":"octo/unitcost/#version-1-manual-input-and-processing","title":"Version 1: Manual Input and Processing","text":"<p>Currently, this concept is in version 1 and involves a manual process. The Unit Types and Unit Items, along with their corresponding percentages, are manually input by the user. Additionally, users have the option to specify Dedicated Resources and Shared Resources for each unit item. </p> <ul> <li> <p>Dedicated Resources: Users can manually select resources (at the account and service level) that are exclusive to a specific unit item. The cost of these resources is dedicated solely to that unit item.</p> </li> <li> <p>Shared Resources: Any resources not explicitly designated as dedicated are considered Shared Resources. These resources are automatically distributed across multiple unit items. </p> </li> </ul> <p>An automated identification system for these elements, including the classification of dedicated and shared resources, is under ongoing investigation.</p>"},{"location":"octo/unitcost/#data-storage","title":"Data Storage","text":"<p>Once the user manually inputs the Unit Types and Unit Items, this data is stored in a GCP Spanner table called <code>cover_unitcost</code>. </p>"},{"location":"octo/unitcost/#sample-data","title":"Sample Data","text":"Column Name Sample Value id 35022b5d-91bb-4cd4-8fdd-5577a017f9cc orgId MSP-5aa311904d5d6 date 2024-08-02 unitType Product description Cost per product unitItems [{\"itemName\":\"octo\",\"distribution\":0.2,\"dedicatedResourcesCombinati...}] hasMetrics false createdBy Christian createTime 2024-08-01T23:17:56.92991733Z lastUpdatedAt 2024-08-01T23:17:56.9299174Z"},{"location":"octo/unitcost/#full-unititems-value","title":"Full <code>unitItems</code> Value","text":"<pre><code>[\n  {\"itemName\":\"octo\",\"distribution\":0.2,\"dedicatedResourcesCombination\":[{\"andFilters\":{\"account\":\"re:(?:^131920598436$)\",\"productCode\":\"re:(?:^AmazonEC2$)|(?:^AmazonS3$)\"}}]},\n  {\"itemName\":\"ripple\",\"distribution\":0.4,\"dedicatedResourcesCombination\":[{\"andFilters\":{\"account\":\"re:(?:^131920598436$)\",\"productCode\":\"re:(?:^AmazonDynamoDB$)\"}}]},\n  {\"itemName\":\"wave\",\"distribution\":0.3,\"dedicatedResourcesCombination\":[{\"andFilters\":{\"account\":\"388157217682\",\"productCode\":\"AmazonRDS\"}}]}\n]\n\n### Batch Processing\n\nA daily batch process reads the entries from `cover_unitcost`, processes each one, and stores the results in another GCP Spanner table called `cover_tag_management`.\n\n#### Sample Data\n\n| Column Name    | Sample Value |\n|----------------|--------------|\n| id             | 00bb3f07-eeb3-4cbd-9a92-963a791c7bca |\n| orgId          | MSP-5aa311904d5d6 |\n| date           | 2024-06-03 |\n| filter         | [{\"and\":{\"account\":\"000001000001\"}}, ...] |\n| tags           | {\"alphaus:Product\":[\"octo\",\"ripple\",\"wave\"]} |\n| unitItems      | [{\"itemName\":\"octo\",\"distribution\":0.2,\"dedicatedResourcesCombinati...}] |\n| createTime     | 2024-08-01T23:19:17.551506Z |\n| updateTime     | 2024-08-01T23:19:17.551506Z |\n| category       | Product |\n\n### Tag Generation\n\nThe batch process generates tags based on the unit items in a JSON format. The `unitType` is used as a key, but first, `alphaus:` is concatenated to the unit type. This results in a format like `alphaus:&lt;unitType&gt;`. The unit items are included as the values associated with the key.\n\nFor example, for the unit type \"Product\" with items \"octo\", \"ripple\", and \"wave\", the tag would look like this:\n\n```json\n{\"alphaus:Product\":[\"octo\",\"ripple\",\"wave\"]}\n</code></pre>"},{"location":"octo/unitcost/#applying-filters","title":"Applying Filters","text":"<p>Filters are applied to specify where the tags will be reflected. In the current version, the filter covers all accounts in AWS and GCP for the organization. </p>"},{"location":"octo/unitcost/#special-computation-for-customers","title":"Special Computation for Customers","text":"<p>For the \"Customer\" unit type, our organization has a unique process to calculate the cost percentage. This process is exclusive to our organization and is based on the size of the Cost and Usage Reports (CUR) for each customer.</p>"},{"location":"octo/unitcost/#steps-for-customer-cost-calculation","title":"Steps for Customer Cost Calculation","text":"<ol> <li>Collect CUR Sizes:</li> <li> <p>Collect the size of the CUR for each customer from tables in BigQuery.</p> </li> <li> <p>Calculate Percentages:</p> </li> <li> <p>Calculate each customer's percentage based on the size of their CUR relative to the total size of all customers' CURs.</p> </li> <li> <p>Generate Tags:</p> </li> <li> <p>Generate tags in the format <code>{\"alphaus:customer\":[\"customer1\",\"customer2\",\"customer3\"]}</code> based on these percentages.</p> </li> <li> <p>Store in <code>cover_tag_management</code>:</p> </li> <li>Store the generated tags in the <code>cover_tag_management</code> table using the same structure and process as other unit types.</li> </ol>"},{"location":"octo/unitcost/#summary","title":"Summary","text":"<p>Every day, the batch process reads all items in <code>cover_unitcost</code>, processes each, and stores the results in <code>cover_tag_management</code>. The tags are used to attribute costs accurately to the defined unit items, facilitating detailed cost tracking and management. For customers, the process involves a unique calculation based on CUR sizes, ensuring precise cost distribution among different customers.</p>"},{"location":"octo/recommendations/about/","title":"About Recommendation Feature","text":"<p>Recommendation is a cost optimization feature offered by Octo that helps users effectively manage expenses. Designed for multi-vendor environments, including AWS, GCP, and Azure, it currently supports AWS and GCP, with plans to extend to other platforms in the future. This feature also consolidates recommendations from AWS Cost Explorer, Cost Optimization Hub, and Trusted Advisor, etc providing comprehensive insights into cost-saving opportunities. It empowers users to make informed decisions and optimize their cloud expenditures efficiently.</p>"},{"location":"octo/recommendations/about/#sources","title":"Sources","text":"<p>Our recommendation data comes from three main sources: AWS, GCP, and Octo-generated recommendations. AWS recommendations are derived from services like Cost Explorer, Cost Optimization Hub, and Trusted Advisor, while GCP recommendations come from the Recommendation Hub. Octo adds another layer by generating unique recommendations that cover additional insights not addressed by AWS or GCP (though GCP insights aren't available through Octo generated). This combination gives Octo users a broader spectrum of actionable insights to improve their cloud cost management strategies.</p>"},{"location":"octo/recommendations/costexplorer/","title":"Cost Explorer","text":"<p>AWS Cost Explorer is a powerful tool that provides comprehensive insights into their AWS spending and usage. It allows users to visualize, understand, and manage their AWS costs and usage over time through customizable reports and interactive graphs. This helps organizations optimize their cloud spending by identifying cost drivers, trends, and opportunities for savings.</p> <p>AWS offers several cost optimization recommendations through tools like AWS Cost Explorer:</p> <p>Reserved Instance (RI) Recommendations: These provide guidance on purchasing Reserved Instances, which offer significant discounts on EC2, RDS, Opensearch, Elasticache, Redshift and MemoryDB instances usage compared to On-Demand pricing. RI recommendations analyze usage patterns to suggest optimal RI purchases, helping users maximize cost efficiency.</p> <p>Savings Plan (SP) Recommendations: Similar to RIs, Savings Plans offer flexibility and savings on EC2, Sagemaker isntance and Compute services including AWSFargate. SP recommendations help users choose the right Savings Plan based on their historical usage patterns, optimizing cost savings.</p> <p>When purchasing RI and SP, users need to specify several key inputs to tailor the reservation to their needs: Payment Option</p> Payment Option Description ALL UPFRONT Pay the entire cost upfront, typically yielding the highest savings. PARTIAL UPFRONT Pay a portion upfront and the rest monthly, balancing savings and cash flow. NO UPFRONT Pay nothing upfront and the entire cost is spread over the reservation term with monthly payments, providing the least savings but the most flexibility. <p>Term</p> Term Description ONE-YEAR Shorter commitment period with less savings compared to the three-year term. THREE-YEAR Longer commitment period with greater savings. <p>Rightsize EC2 Instance Recommendations: These recommendations analyze the EC2 instance usage and suggest resizing or modifying instance types to better match their workload requirements. By rightsizing instances, users can eliminate unnecessary costs and improve performance efficiency.</p> <p>Terminate EC2 Instance Recommendations: AWS Cost Explorer also provides recommendations to terminate underutilized or unnecessary EC2 instances. This helps in reducing costs by eliminating instances that are not actively contributing to workload requirements or are no longer needed.</p>"},{"location":"octo/recommendations/costexplorer/#integration-with-octo","title":"Integration with Octo","text":"<p>In Octo, we fetch and display these AWS Cost Explorer recommendations, including RI, SP, Rightsize and Terminate EC2 instance recommendations, providing actionable insights to optimize cloud spending and enhance operational efficiency across multi-vendor environments. This integration ensures that organizations can effectively manage their AWS costs while maintaining performance and scalability in their cloud infrastructure.</p> <p>Below is the list of recommendations offered by cost explorer.</p>"},{"location":"octo/recommendations/costexplorer/#reserved-instance","title":"Reserved Instance","text":"Purchase EC2 Reserved Instance Purchase RDS Reserved Instance Purchase ElastiCache Reserved Node Purchase Redshift Reserved Node Purchase Opensearch Reserved Instance Purchase MemoryDB Reserved Instance"},{"location":"octo/recommendations/costexplorer/#purchase-ec2-reserved-instance","title":"Purchase EC2 Reserved Instance","text":"<p><p> AWS Resource Type     EC2 Instance Optimization Type     Rate Category     Reserved Instance Description     An EC2 Reserved Instance recommendation provides guidance on optimizing AWS EC2 instance usage by leveraging Reserved Instances (RIs). These recommendations are tailored to help reduce costs by matching instance usage patterns with appropriate RI purchases. They analyze historical usage data and suggest Reserved Instances based on instance type, region, and utilization patterns. By committing to Reserved Instances, users can potentially achieve significant cost savings compared to On-Demand instance pricing, making it a valuable tool for cost optimization strategies in AWS environments Potential Savings     The exact savings depend on factors like instance type, region, payment option, and usage commitment. In general, savings can range from 30% to 75% compared to On-Demand pricing, making RIs a cost-effective choice for sustained usage of EC2 instances. Recommended Action     \u2022 Purchase EC2 Reserved Instance How will Octo implement the recommended action?     Not Applicable. Users can purchase RI using AWS Console/AWS CLI Is rollback possible?     Yes. AWS provides flexibility with Convertible Reserved Instances, allowing modifications to instance type, operating system, or tenancy throughout the term, ensuring adaptation to changing business needs while maintaining RI discounts. For Standard Reserved Instances, they can be sold on the AWS Reserved Instance Marketplace if no longer needed, enabling users to recover upfront costs. Additionally, AWS permits cancellation of Standard RIs within 30 days of purchase, with a prorated refund for the remaining term, minus any charges. </p></p>"},{"location":"octo/recommendations/costexplorer/#purchase-rds-reserved-instance","title":"Purchase RDS Reserved Instance","text":"<p><p> AWS Resource Type     RDS DB Instance Optimization Type     Rate Category     Reserved Instance Description     The RDS Reserved Instance (RI) Recommendation provides insights and suggestions to optimize Amazon Relational Database Service (RDS) costs. By analyzing the RDS usage patterns, AWS identifies opportunities where purchasing Reserved Instances can lead to significant savings compared to On-Demand instances. It evaluates the potential cost benefits of different reservation options, including instance types, regions, and reservation terms (one-year or three-year). This recommendation helps the user make informed decisions to reduce costs while maintaining the performance and availability of your RDS instances. Potential Savings     The potential savings from purchasing RDS Reserved Instances (RIs) can be substantial, typically ranging from 30% to 75% compared to using On-Demand instances. The exact savings depend on several factors, including the instance type, region, reservation term (one-year or three-year), and payment option (all upfront, partial upfront, or no upfront). By committing to using RDS instances over a specified term, users can take advantage of these discounted rates, leading to significant cost reductions for their database workloads. Recommended Action     \u2022 Purchase RDS Reserved Instance How will Octo implement the recommended action?     Not Applicable. Users can purchase RI using AWS Console/AWS CLI Is rollback possible?     No </p></p>"},{"location":"octo/recommendations/costexplorer/#purchase-elasticache-reserved-instance","title":"Purchase ElastiCache Reserved Instance","text":"<p><p> AWS Resource Type     ElastiCache Cache Nodes Optimization Type     Rate Category     Reserved Instance Description     The ElastiCache Reserved Instance (RI) Recommendation provides insights and suggestions to optimize users Amazon ElastiCache costs. By analyzing the ElastiCache node usage patterns, this feature identifies opportunities where purchasing Reserved Instances can lead to significant savings compared to On-Demand instances. It evaluates the potential cost benefits of different reservation options, including node/instance types, regions, and reservation terms (one-year or three-year). This recommendation helps users make informed decisions to reduce costs while maintaining the performance and availability of their ElastiCache clusters. Potential Savings     The potential savings from purchasing ElastiCache Reserved Instances (RIs) can be substantial, typically ranging from 30% to 75% compared to using On-Demand instances. The exact savings depend on several factors, including the node type, region, reservation term, and payment option Recommended Action     \u2022 Purchase ElastiCache Reserved Instance How will Octo implement the recommended action?     Not Applicable. Users can purchase RI using AWS Console/AWS CLI Is rollback possible?     No </p></p>"},{"location":"octo/recommendations/costexplorer/#purchase-redshift-reserved-instance","title":"Purchase Redshift Reserved Instance","text":"<p><p> AWS Resource Type     Redshift Nodes Optimization Type     Rate Category     Reserved Instance Description     The Redshift Reserved Instance (RI) Recommendation provides tailored insights to help optimize Amazon Redshift costs. By examining the Redshift cluster usage patterns, AWS identifies opportunities to achieve significant cost savings through Reserved Instances compared to On-Demand instances.  Potential Savings     Purchasing Redshift Reserved Instances (RIs) can result in considerable savings, often ranging from 30% to 75% compared to On-Demand pricing. The exact savings depend on the node type, region, reservation term (one-year or three-year), and payment option (all upfront, partial upfront, or no upfront). Committing to a reserved term allows users to benefit from discounted rates, leading to substantial cost reductions for their data warehousing operations. Recommended Action     \u2022 Purchase Redshift Reserved Instance How will Octo implement the recommended action?     Not Applicable. Users can purchase RI using AWS Console/AWS CLI Is rollback possible?     No </p></p>"},{"location":"octo/recommendations/costexplorer/#purchase-opensearch-reserved-instance","title":"Purchase Opensearch Reserved Instance","text":"<p><p> AWS Resource Type     OpenSearch Instance Optimization Type     Rate Category     Reserved Instance Description     The OpenSearch Reserved Instance (RI) Recommendation feature is designed to help users manage and reduce their Amazon OpenSearch Service expenses effectively. By analyzing the usage metrics and patterns, AWS identifies opportunities to transition from On-Demand instances to Reserved Instances, which can result in substantial cost savings. It evaluates various reservation configurations, including instance types, regions, and reservation terms (one-year or three-year), and recommends the most advantageous options tailored to your specific needs. This recommendation supports cost optimization while ensuring that OpenSearch clusters maintain optimal performance and availability. Potential Savings     Purchasing OpenSearch Reserved Instances (RIs) can lead to significant savings, typically ranging from 30% to 75% compared to On-Demand instance pricing, with the exact amount depending on factors such as instance type, region, reservation term (one-year or three-year), and payment option (all upfront, partial upfront, or no upfront). Recommended Action     \u2022 Purchase OpenSearch Reserved Instance How will Octo implement the recommended action?     Not Applicable. Users can purchase RI using AWS Console/AWS CLI Is rollback possible?     No </p></p>"},{"location":"octo/recommendations/costexplorer/#purchase-memorydb-reserved-instance","title":"Purchase MemoryDB Reserved Instance","text":"<p>Not available yet.</p>"},{"location":"octo/recommendations/costexplorer/#savings-plan","title":"Savings Plan","text":"Purchase Compute Savings Plan Purchase EC2 Instance Savings Plan Purchase SageMaker Savings Plan"},{"location":"octo/recommendations/costexplorer/#purchase-compute-savings-plan","title":"Purchase Compute Savings Plan","text":"<p><p> AWS Resource Type     Compute Services (EC2, Fargate, etc.) Optimization Type     Rate Category     Savings Plan Description     The Compute Savings Plan Recommendation assists users in optimizing their AWS compute costs by offering tailored advice on transitioning to Compute Savings Plans. By analyzing their usage patterns across various AWS services, AWS identifies opportunities to reduce expenses through Compute Savings Plans compared to On-Demand pricing. It evaluates different plan options, including instance class, regions, and commitment durations, to recommend the most cost-effective solutions. This recommendation helps users achieve significant savings while maintaining the flexibility to utilize a broad range of AWS compute resources. Potential Savings     Adopting Compute Savings Plans can lead to substantial savings, typically ranging from 30% to 66% compared to On-Demand pricing. The specific savings depend on factors such as the instance types used, AWS regions, and the duration of the commitment (one year or three years). Compute Savings Plans provide flexible pricing across different instance types and families, enabling users to benefit from lower rates while retaining the flexibility to switch between various compute resources as needed.      Recommended Action     \u2022 Purchase Compute Savings Plan How will Octo implement the recommended action?     Not Applicable. Users can purchase RI using AWS Console/AWS CLI Is rollback possible?     No </p></p>"},{"location":"octo/recommendations/costexplorer/#purchase-ec2-instance-savings-plan","title":"Purchase EC2 Instance Savings Plan","text":"<p><p> AWS Resource Type     EC2 Instance Optimization Type     Rate Category     Savings Plan Description     The EC2 Instance Savings Plan Recommendation helps users optimize their Amazon EC2 costs by providing tailored advice on transitioning to EC2 Instance Savings Plans. By analyzing their EC2 usage patterns, AWS identifies opportunities to achieve cost reductions through Savings Plans compared to On-Demand pricing. It assesses various options based on instance types, regions, and commitment durations (one year or three years) to recommend the most cost-effective plans. This recommendation enables users to secure significant savings while ensuring the flexibility to use a wide range of EC2 instances. Potential Savings     Adopting EC2 Instance Savings Plans can result in significant cost reductions, typically ranging from 37% to 69% compared to On-Demand pricing. The exact savings depend on factors such as the instance types used, AWS regions, and the duration of the commitment (one year or three years). EC2 Instance Savings Plans offer lower rates while providing flexibility to change instance types within the same family and region, allowing users to adjust their resources according to evolving needs while enjoying substantial cost savings.      Recommended Action     \u2022 Purchase EC2 Instance Savings Plan How will Octo implement the recommended action?     Not Applicable. Users can purchase RI using AWS Console/AWS CLI Is rollback possible?     No </p></p>"},{"location":"octo/recommendations/costexplorer/#purchase-sagemaker-savings-plan","title":"Purchase SageMaker Savings Plan","text":"<p><p> AWS Resource Type     SageMaker Instances Optimization Type     Rate Category     Savings Plan Description     The SageMaker Savings Plan Recommendation provides users with tailored guidance on optimizing their Amazon SageMaker costs by leveraging Savings Plans. By analyzing SageMaker usage patterns, AWS identifies opportunities to reduce expenses compared to On-Demand pricing. It evaluates various plan options, including instance types, regions, and commitment durations (one year or three years), to recommend the most cost-effective solutions. This recommendation helps users achieve significant savings while maintaining flexibility in their machine learning workflows. Potential Savings     Opting for SageMaker Savings Plans can lead to substantial cost reductions, typically ranging from 30% to 65% compared to On-Demand pricing. The exact savings depend on factors such as the instance types used, AWS regions, and the duration of the commitment (one year or three years). SageMaker Savings Plans offer lower rates while providing flexibility to use a variety of instance types, allowing users to benefit from reduced costs while adapting their resources to meet changing demands.      Recommended Action     \u2022 Purchase SageMaker Savings Plan How will Octo implement the recommended action?     Not Applicable. Users can purchase RI using AWS Console/AWS CLI Is rollback possible?     No </p></p>"},{"location":"octo/recommendations/costexplorer/#others","title":"Others","text":"Rightsize EC2 Instance Terminate EC2 Instance"},{"location":"octo/recommendations/costexplorer/#rightsize-ec2","title":"Rightsize EC2","text":"<p><p> AWS Resource Type     EC2 Instance Optimization Type     Usage Category     Rightsize Description     EC2 Rightsizing recommendations in AWS Cost Explorer help users optimize their EC2 fleet by identifying instances that are over-provisioned relative to their actual usage. The system analyzes historical usage data, including CPU, memory, and network metrics, to identify underutilized instances. It then suggests more cost-effective instance types or sizes that better match current performance needs and provides cost comparisons to highlight potential savings. Potential Savings     By implementing EC2 Rightsizing recommendations, users can achieve cost reductions of 20-50% by resizing over-provisioned instances to smaller, more efficient types. For large EC2 deployments, this can lead to significant annual savings, as aligning instance types with actual usage reduces waste and avoids paying for unused capacity, resulting in more efficient spending and better cost management.      Recommended Action     \u2022 Rightsize EC2 Instance How will Octo implement the recommended action?     To modify the instance type of an EC2 instance, it must first be stopped. Octo handles this process as follows: it begins by calling the StopInstances API to stop the instance and waits until the instance status is updated to \"Stopped.\" Once the instance is in the \"Stopped\" state, Octo uses the ModifyInstanceAttribute API to update the instance type. After the type modification is complete, Octo then uses the StartInstances API to restart the instance. Is rollback possible?     Yes. </p></p>"},{"location":"octo/recommendations/costexplorer/#terminate-ec2","title":"Terminate EC2","text":"<p><p> AWS Resource Type     EC2 Instance Optimization Type     Usage Category     Delete Description     The Terminate EC2 Instance recommendation in AWS Cost Explorer identifies EC2 instances that are candidates for termination based on factors such as low utilization or inactivity. This recommendation helps users reduce unnecessary costs by pinpointing instances that are either no longer needed or are not being used effectively. By terminating these instances, users can stop incurring charges for idle or underutilized resources, optimizing overall cloud expenditure. Potential Savings     Following the Terminate EC2 Instance recommendation can lead to significant cost savings. By removing instances that are not providing value or are underutilized, users can reduce their EC2 expenses by up to 100% for those specific instances. This can result in substantial savings, especially for organizations with many instances running without a clear purpose. Termination of these instances ensures that users are only paying for resources that are actively contributing to their operations, leading to a more efficient and cost-effective cloud environment.      Recommended Action     \u2022 Terminate EC2 Instance How will Octo implement the recommended action?     Octo uses TerminateInstances API to terminate instance. Is rollback possible?     Yes. </p></p>"},{"location":"octo/recommendations/costoptimizationhub/","title":"Cost Optimization Hub","text":"<p> Cost Optimization Hub is a feature within AWS Billing and Cost Management that assists users in identifying and prioritizing ways to reduce their AWS expenses. It consolidates recommendations from various AWS services, such as Compute Optimizer, into a single dashboard. Octo retrieves all the data from the Cost Optimization Hub using an AWS API and displays it within Octo to eliminate the need for users to access their AWS console </p> <p>Note</p> <p>To receive recommendations from cost optimization hub, this feature needs to be enabled first. Octo will automatically enable it once API access is set up. After activation, AWS typically takes 1 to 3 days to generate recommendations. If you have previously enabled the Cost Optimization Hub, recommendations should already be available.</p> <p>Below are the recommendations offered by cost optimization hub</p>"},{"location":"octo/recommendations/costoptimizationhub/#amazonrds","title":"AmazonRDS","text":"Stop Amazon RDS Idle DB Instances Rightsize RDS DB Instance Rightsize RDS DB Instance Storage Upgrade RDS DB Instance Upgrade RDS DB Instance Storage Migrate RDS DB Instance to Graviton"},{"location":"octo/recommendations/costoptimizationhub/#stop-amazon-rds-idle-db-instances","title":"Stop Amazon RDS Idle DB Instances","text":"<p><p> AWS Resource Type     RDS DB Instance Optimization Type     Usage Category     Stop Description     Identifies Amazon RDS DB instances that are potentially idle. Potential Savings     100% savings based on the db instance cost. Recommended Action     \u2022   Stop RDS DB Instance How will Octo implement the recommended action?     Octo uses StopDBInstance API in stopping the db instance. Is rollback possible?     Yes. You can restart the instance through AWS Console/AWS CLI </p></p>"},{"location":"octo/recommendations/costoptimizationhub/#rightsize-rds-db-instance","title":"Rightsize RDS DB Instance","text":"<p><p> AWS Resource Type     RDS DB Instance Optimization Type     Usage Category     Rightsize Description     Adjust the size of the RDS DB instance to better match your workload requirements. This recommendation involves analyzing the past usage patterns, CPU utilization, memory usage, and I/O operations to determine if the instance is over-provisioned or under-provisioned. Potential Savings     Rightsizing RDS DB instance can lead to savings ranging from 20% to 50% of the current RDS costs, depending on how significantly over-provisioned the current instance is. Recommended Action     \u2022   Rightsize RDS DB Instance How will Octo implement the recommended action?     Not implemented yet. Is rollback possible?     Not implemented yet. </p></p>"},{"location":"octo/recommendations/costoptimizationhub/#rightsize-rds-db-instance-storage","title":"Rightsize RDS DB Instance Storage","text":"<p><p> AWS Resource Type     RDS DB Instance Storage Optimization Type     Usage Category     Rightsize Description     Rightsizing RDS DB instance storage involves adjusting the storage capacity to match the actual needs of the workload. This process ensures that the allocated storage is neither underutilized nor overprovisioned, optimizing the cost and performance balance. By carefully analyzing storage usage patterns and adjusting the storage size accordingly, businesses can achieve efficient resource utilization and maintain optimal database performance. Potential Savings     Rightsizing RDS DB instance storage can lead to significant cost savings by eliminating unnecessary storage overhead and reducing the expenses associated with overprovisioned resources. Depending on the initial storage configuration and the extent of optimization, potential savings can range from 10% to 30%. These savings stem from better-aligned storage capacity with actual usage, leading to more efficient and cost-effective database operations. Recommended Action     \u2022   Rightsize RDS DB Instance storage How will Octo implement the recommended action?     Not implemented yet. Is rollback possible?     Not implemented yet. </p></p>"},{"location":"octo/recommendations/costoptimizationhub/#upgrade-rds-db-instance","title":"Upgrade RDS DB Instance","text":"<p><p> AWS Resource Type     RDS DB Instance Optimization Type     Usage Category     Upgrade Description     Upgrading the generation of RDS DB instances involves transitioning from older to newer instance types within Amazon's Relational Database Service (RDS). Newer generation instances typically offer improved performance, increased storage efficiency, and enhanced network capabilities at a lower cost. This process optimizes the database environment, leading to better resource utilization and reliability. Potential Savings     By upgrading to the latest generation of RDS DB instances, organizations can achieve cost savings ranging from 10% to 30%, depending on the specific instance types and workload requirements. The improved performance and efficiency of newer instances also contribute to indirect savings by reducing the need for additional resources and minimizing downtime.. Recommended Action     \u2022   Upgrade RDS DB Instance to newer generation How will Octo implement the recommended action?     Not implemented yet. Is rollback possible?     Not implemented yet. </p></p>"},{"location":"octo/recommendations/costoptimizationhub/#upgrade-rds-db-instance-storage","title":"Upgrade RDS DB Instance Storage","text":"<p><p> AWS Resource Type     RDS DB Instance Storage Optimization Type     Usage Category     Upgrade Description     Upgrading the storage for RDS DB instances involves increasing the storage capacity or transitioning to a more performant storage type. This enhancement addresses issues related to insufficient storage space, improving read/write performance, and ensuring database operations remain smooth and uninterrupted. Enhanced storage options, such as General Purpose SSD (gp3) or Provisioned IOPS SSD (io2), provide increased throughput and lower latency, leading to better overall database performance and reliability. Potential Savings     While upgrading RDS DB instance storage might involve an initial cost increase, it can lead to significant long-term savings by preventing costly downtime, reducing the need for frequent manual interventions, and improving application performance. Depending on the specific upgrade and workload characteristics, potential savings can range from 10% to 30%. This range reflects improved storage efficiency, better resource utilization, and cost-effective scaling options, which contribute to more efficient and economical database operations. Recommended Action     \u2022   Upgrade RDS DB Instance storage How will Octo implement the recommended action?     Not implemented yet. Is rollback possible?     Not implemented yet. </p></p>"},{"location":"octo/recommendations/costoptimizationhub/#migrate-rds-db-instance-to-graviton","title":"Migrate RDS DB Instance to Graviton","text":"<p><p> AWS Resource Type     RDS DB Instance Optimization Type     Usage Category     Migrate Description     Migrating RDS DB instances to Graviton processors can significantly enhance the performance and cost-efficiency of database operations. Graviton processors, designed by AWS, deliver superior price-performance compared to traditional x86-based instances. By leveraging Graviton-based instances, businesses can achieve better throughput, reduced latency, and overall improved database performance. Potential Savings     Switching to Graviton processors can result in substantial cost savings, typically ranging from 20% to 30% compared to comparable x86-based instances. The exact savings will vary depending on the instance type and workload characteristics, but businesses can expect a notable reduction in their RDS costs while maintaining or even enhancing database performance.ts Recommended Action     \u2022   Rightsize RDS DB Instance storage How will Octo implement the recommended action?     Not implemented yet. Is rollback possible?     Not implemented yet. </p></p>"},{"location":"octo/recommendations/costoptimizationhub/#amazonec2","title":"AmazonEC2","text":"Stop EC2 Instance Rightsize EC2 Auto Scaling Group Upgrade EC2 Auto Scaling Group Migrate EC2 Auto Scaling Group to Graviton Upgrade EC2 Instance Migrate EC2 Instance to Graviton"},{"location":"octo/recommendations/costoptimizationhub/#stop-ec2-instance","title":"Stop EC2 Instance","text":"<p><p> AWS Resource Type     EC2 Instance Optimization Type     Usage Category     Stop Description     This recommendation advises users to stop EC2 instances that are either underutilized or not in use to optimize cloud costs. Instances that are running but not actively contributing to business processes can incur unnecessary expenses. By stopping these instances, users can avoid charges for compute resources that are not being fully utilized. Potential Savings     Stopping an EC2 instance can result in savings of up to 100% of the instance's total cost. However, additional costs may still apply for associated resources such as EBS volumes. Recommended Action     \u2022   Stop EC2 Instance How will Octo implement the recommended action?     Octo uses StopInstances API to temporarily stop the instance. Is rollback possible?     Yes, users can restart the instance. </p></p>"},{"location":"octo/recommendations/costoptimizationhub/#rightsize-ec2-auto-scaling-group","title":"Rightsize EC2 Auto Scaling Group","text":"<p><p> AWS Resource Type     EC2 Auto Scaling Group Optimization Type     Usage Category     Rightsize Description     The Rightsize EC2 Auto Scaling Group recommendation advises adjusting the instance types and sizes within an Auto Scaling Group to better match the application's resource requirements. By analyzing current usage patterns and performance metrics, this recommendation suggests more appropriate instance types that could lead to better performance or lower costs. Potential Savings     Implementing this recommendation can lead to significant cost savings by ensuring that resources are optimized for the application's needs. Users can expect reductions in monthly EC2 costs ranging from 20% to 50%, depending on the degree of over-provisioning. Recommended Action     \u2022   Rightsize EC2 Auto Scaling Group How will Octo implement the recommended action?     Not implemented yet. Is rollback possible?     Not implemented yet. </p></p>"},{"location":"octo/recommendations/costoptimizationhub/#upgrade-ec2-auto-scaling-group","title":"Upgrade EC2 Auto Scaling Group","text":"<p><p> AWS Resource Type     EC2 Auto Scaling Group Optimization Type     Usage Category     Upgrade Description     The Upgrade EC2 Auto Scaling Group recommendation suggests moving to newer generation EC2 instances within the Auto Scaling Group. Newer instance types often offer better performance, enhanced features, and cost-efficiency compared to older generations. Potential Savings     Upgrading to more recent instance types can lead to improved performance and cost savings. Users may see reductions in monthly EC2 costs of up to 30%, alongside gains in computational power and efficiency. Recommended Action     \u2022  Upgrade EC2 Auto Scaling Group How will Octo implement the recommended action?     Not implemented yet. Is rollback possible?     Not implemented yet. </p></p>"},{"location":"octo/recommendations/costoptimizationhub/#migrate-ec2-auto-scaling-group-to-graviton","title":"Migrate EC2 Auto Scaling Group to Graviton","text":"<p><p> AWS Resource Type     EC2 Auto Scaling Group Optimization Type     Usage Category     Migrate Description     The Migrate EC2 Auto Scaling Group to Graviton recommendation encourages transitioning from traditional x86-based EC2 instances to ARM-based Graviton instances. Graviton instances are designed to deliver significant cost savings and performance improvements for certain workloads. Potential Savings     Migrating to Graviton instances can result in cost reductions of up to 40% compared to traditional x86 instances, while also providing enhanced performance for specific applications optimized for ARM architecture. Recommended Action     \u2022  Migrate EC2 Auto Scaling Group to Graviton How will Octo implement the recommended action?     Not implemented yet. Is rollback possible?     Not implemented yet. </p></p>"},{"location":"octo/recommendations/costoptimizationhub/#upgrade-ec2-instance","title":"Upgrade EC2 Instance","text":"<p><p> AWS Resource Type     EC2 Instance Optimization Type     Usage Category     Upgrade Description     This recommendation involves upgrading existing Amazon EC2 instances to newer, more efficient instance types to better match the performance needs of applications. It identifies instances that could benefit from transitioning to newer generations or different instance families, which can offer enhanced performance, better resource utilization, and improved cost-efficiency. Potential Savings     Upgrading EC2 instances can result in cost savings ranging from 10% to 25% of total instance costs. The savings depend on the extent to which performance and resource utilization are optimized through the upgrade. Newer instance types often provide better price-performance ratios, leading to reduced overall costs. Recommended Action     \u2022   Upgrade EC2 Instance How will Octo implement the recommended action?     Not implemented yet. Is rollback possible?     Not implemented yet. </p></p>"},{"location":"octo/recommendations/costoptimizationhub/#migrate-ec2-instance-to-graviton","title":"Migrate EC2 Instance to Graviton","text":"<p><p> AWS Resource Type     EC2 Instance Optimization Type     Usage Category     Migrate Description     This recommendation focuses on migrating existing EC2 instances to AWS Graviton processors. AWS identifies instances that could benefit from a transition to Graviton-based instances to leverage their cost-efficiency and performance advantages. Graviton processors offer improved price-performance ratios and can provide significant cost savings while maintaining or enhancing application performance. Potential Savings     Migrating to Graviton instances can lead to cost savings ranging from 20% to 40% compared to instances using Intel or AMD processors. The exact savings depend on the specific instance types being replaced and the workload requirements. Graviton instances provide a more cost-effective option without compromising performance. Recommended Action     \u2022   Migrate EC2 Instance to Graviton How will Octo implement the recommended action?     Not implemented yet. Is rollback possible?     Not implemented yet. </p></p>"},{"location":"octo/recommendations/costoptimizationhub/#amazonebs","title":"AmazonEBS","text":"Upgrade EBS Volume Rightsize EBS Volume"},{"location":"octo/recommendations/costoptimizationhub/#upgrade-ebs-volume","title":"Upgrade EBS Volume","text":"<p><p> AWS Resource Type     EBS Volume Optimization Type     Usage Category     Upgrade Description     This recommendation suggests upgrading the type of Amazon Elastic Block Store (EBS) volumes to better align with the performance requirements of applications. It identifies volumes that could benefit from a transition to a higher-performance volume type, such as moving from standard SSD to provisioned IOPS SSD. Upgrading the volume type can enhance I/O performance and throughput, leading to more efficient application operations. Potential Savings     Upgrading EBS volume types can lead to cost savings by improving performance and efficiency, which can reduce the need for additional resources or mitigate performance-related issues. Potential savings typically range from 5% to 20% of total storage costs, depending on the performance improvements achieved and the volume types being compared. Recommended Action     \u2022   Upgrade EBS Volume How will Octo implement the recommended action?     Octo begins by using the CreateSnapshot API to create a backup snapshot. Subsequently, it calls the ModifyVolume API to adjust the volume configuration. Is rollback possible?     Yes, users can revert to the previous state of the volume by restoring it from the snapshot created during the rightsizing operation. </p></p>"},{"location":"octo/recommendations/costoptimizationhub/#rightsize-ebs-volume","title":"Rightsize EBS Volume","text":"<p><p> AWS Resource Type     EBS Volume Optimization Type     Usage Category     Rightsize Description     This recommendation focuses on optimizing the size of Amazon Elastic Block Store (EBS) volumes to better match the actual storage needs of applications. It identifies volumes that are either underutilized or over-provisioned, suggesting adjustments to their size to improve cost-efficiency. By rightsizing EBS volumes, users can enhance storage performance and reduce unnecessary costs associated with unused capacity. Potential Savings     Rightsizing EBS volumes can result in cost savings ranging from 10% to 30% of the total storage costs. The exact savings depend on the extent of over-provisioning and the adjustment in volume size. Recommended Action     \u2022   Rightsize EBS Volume How will Octo implement the recommended action?     Not implemented yet. Is rollback possible?     Not implemented yet. </p></p>"},{"location":"octo/recommendations/costoptimizationhub/#awslambda","title":"AWSLambda","text":"Rightsize Lambda Function"},{"location":"octo/recommendations/costoptimizationhub/#rightsize-lambda-function","title":"Rightsize Lambda Function","text":"<p><p> AWS Resource Type     Lambda Function Optimization Type     Usage Category     Rightsize Description     This recommendation aims to optimize the configuration of AWS Lambda functions to ensure they are appropriately sized for their workload. It identifies functions that could benefit from adjustments to their memory allocation or timeout settings to enhance performance and reduce costs. By implementing Lambda rightsizing, organizations can achieve more efficient execution and potentially lower operational expenses. Potential Savings     Rightsizing AWS Lambda functions can lead to potential savings ranging from 20% to 50% by adjusting memory and timeout settings to match actual usage, thereby reducing over-provisioning and optimizing cost efficiency. Recommended Action     \u2022   Rightsize Lambda Function How will Octo implement the recommended action?     Octo uses UpdatetFunctionConfiguration to modify the version-specific settings of a Lambda function Is rollback possible?     Yes, rollback is possible after updating an AWS Lambda function configuration. AWS Lambda maintains a version history of the function code and configuration. Users can use this version history to roll back to a previous configuration or code version if the update does not work as intended. Rollback is done through AWSConsole/AWSCLI. </p></p>"},{"location":"octo/recommendations/costoptimizationhub/#amazonecs","title":"AmazonECS","text":"Rightsize ECS Service"},{"location":"octo/recommendations/costoptimizationhub/#rightsize-ecs-service","title":"Rightsize ECS Service","text":"<p><p> AWS Resource Type     ECS Service Optimization Type     Usage Category     Rightsize Description     AWS recommends rightsizing the ECS service to optimize resource usage and cost efficiency. By analyzing the current task definitions and their resource allocations, AWS identifies opportunities to adjust CPU and memory settings to better match the actual usage patterns of your services. This ensures that users are not over-provisioning or under-provisioning resources, leading to more efficient operations and potential cost savings. Potential Savings     Rightsizing Amazon ECS services can lead to potential savings ranging from 10% to 40% by aligning resource allocation more closely with actual usage, reducing over-provisioning, and minimizing unnecessary costs.      Recommended Action     \u2022   Rightsize ECS Service How will Octo implement the recommended action?     Octo utilizes the DescribeServices API to retrieve task definitions linked to the ECS service. It then invokes the DescribeTaskDefinition API to obtain detailed information about the task definitions. Subsequently, the RegisterTaskDefinition API is called to create a new version with the recommended data. Finally, the UpdateService API is used to update the ECS service with the newly created task definition.. Is rollback possible?     Yes, after rightsizing an ECS service, a rollback is possible. If the new resource configuration does not perform as expected, users can revert to the previous configuration by updating the service with the previous task definition using AWSConsole/AWSCLI. </p></p>"},{"location":"octo/recommendations/executerecommendation/","title":"Execute Recommendation","text":"<p>In addition to providing users with recommendations for optimizing their cloud costs, Octo enables users to execute or apply these recommendations directly within its interface. This streamlined approach empowers users to take immediate action on cost-saving suggestions, enhancing efficiency and simplifying the management of AWS resources. By integrating actionable insights and execution capabilities, Octo ensures a seamless experience for users, facilitating quicker responses to optimize their cloud expenditure.</p> <p>As of now, Octo support executing recommendations exclusively for AWS, with plans to expand this functionality to include GCP and Azure in the future.</p>"},{"location":"octo/recommendations/executerecommendation/#amazon-web-services-recommendations","title":"Amazon Web Services Recommendations","text":"<p>Octo leverages AWS Change Manager, a feature within AWS Systems Manager, to handle the execution of recommendations. AWS Change Manager provides a structured and secure way to implement changes by requiring user approval before execution. This process ensures that all actions are reviewed and authorized, reducing the risk of unintended changes and maintaining compliance with organizational policies.</p> <p>By integrating AWS Change Manager, Octo automates the implementation of cost-saving recommendations while incorporating a critical layer of governance. This enables organizations to act on recommendations efficiently while adhering to best practices and approval workflows.</p>"},{"location":"octo/recommendations/executerecommendation/#prerequisite","title":"Prerequisite","text":"<ol> <li>Ensure that the AWS account linked to the recommendation has already set up API access, as Octo requires specific permissions to perform the execution.</li> </ol>"},{"location":"octo/recommendations/executerecommendation/#key-elements-in-execution","title":"Key elements in execution","text":"<ol> <li> <p>Change template - A predefined framework that specifies the steps, approval workflows, and permissions required for executing a change. Octo automatically creates a change template for each recommendation, ensuring that the execution process aligns with the specifics of the recommendation and its associated region. If a change template for the same recommendation and region already exists, Octo reuses the existing template to avoid duplication and maintain consistency across executions.</p> </li> <li> <p>Change request - A specific request created based on a change template to execute a particular recommendation. Each recommendation has its own unique change request, which captures the details of the intended action, tracks the approval process, and logs the status and results of the execution. Change requests act as a traceable record for managing and auditing the implementation of recommendations.</p> </li> <li> <p>Assume role - Octo programmatically assigns the <code>OctoChangeTemplateApproverRole</code> as the designated approver for the change template. This role is specifically designed for the AWS account and can only be assumed by the AWS account to approve the change template. Octo itself cannot assume this role, ensuring that the approval process remains secure and under the control of the account owner. By using this role, the AWS account gains the necessary permissions to review and approve the change template, maintaining the integrity and security of the process while adhering to AWS's role-based access control best practices.</p> </li> </ol>"},{"location":"octo/recommendations/executerecommendation/#execution-statuses","title":"Execution Statuses","text":"<p>The execution statuses provide a clear overview of the current state of a recommendation's lifecycle. These statuses help users track the progress from availability through approval, execution, and potential errors. Users are encouraged to monitor these statuses closely to ensure timely execution and to address any issues promptly, particularly when encountering execution errors.</p> Execution Status Description <code>Available</code> The recommendation is available for review and action. It has been identified but has not yet progressed further. <code>Pending approval</code> The change template associated with the recommendation is awaiting user approval. Execution cannot proceed until the template is approved. <code>Approved</code> The change template has been approved by the user, and the recommendation is ready to be executed as per the defined steps. <code>Executing</code> The recommendation is actively being implemented. This status indicates that the execution process is in progress. <code>Execution error</code> An error occurred during the execution process. Users can review the error details and retry execution after addressing the issue."},{"location":"octo/recommendations/executerecommendation/#how-to-execute-recommendation-in-octo","title":"How to execute recommendation in Octo?","text":""},{"location":"octo/recommendations/executerecommendation/#1-create-and-approving-change-templates","title":"1. Create and Approving change templates","text":"<p>Select the recommendation to execute. For recommendations with the status <code>Available</code>, a change template will be created first. To do so, click the three vertical dots.</p> <p></p> <p>Alternatively, user can click the recommendation to view its details. </p> <p></p> <p>Then, click the <code>Approve Change Template</code> button. An Approve Change Template modal will appear.</p> <p></p> <p>Note</p> <p>Octo utilizes the Assume Role mechanism to manage the approval of change templates. During account registration, Octo creates an IAM role called OctoChangeTemplateApproverRole to facilitate the approval process. Only the associated AWS account is authorized to assume this role, ensuring that Octo itself cannot assume it. This ensures the approval process remains secure and is controlled exclusively by the AWS account.</p> <p>Click the <code>Open Switch Role Link</code> to proceed. Once clicked, there will be a brief loading period as Octo creates the change template. After the loading finishes, users will be redirected to the AWS Switch Role page. Octo will automatically populate the necessary fields, allowing users to simply click the \"Switch Role\" button to complete the process.</p> <p></p> <p>After clicking \"Switch Role,\" the user will be redirected to the details page of the created change template, as shown below. This page provides detailed information about the change template, including its purpose and specifics. If the user decides to approve the template, they can do so by clicking the \"Approve\" button located in the upper-right corner of the page.</p> <p></p> <p>A modal again will be displayed to confirm the approval. Users can put some comments about the template. However, octo doesn't record this data so users can leave it as blank. Then click <code>Approve</code></p> <p></p>"},{"location":"octo/recommendations/executerecommendation/#2-execute-recommendation","title":"2. Execute Recommendation","text":"<p>After following the instructions in the Step 1, user must go back to octo.</p> <p>Note</p> <p>Octo delays updating the recommendation status to <code>approved</code> as it relies on a cron job that processes approved templates in bulk at scheduled intervals, ensuring efficient handling of multiple updates.</p> <p>Here\u2019s how Octo manages or updates recommendation statuses through Cron tasks</p> <p>As part of the beta testing, the following interval is used for updating statuses. Octo plans to modify this in the future. 1. Every 6 hours, Octo verifies if any change templates have received approval. 2. At 30-minute intervals within each 6-hour period, Octo creates Change Requests for Recommendations that have approved change templates. After the Change Request is generated, the recommendation status is updated to <code>Approved</code>\"</p> <p>After a while, the status of the recommendation has changed to \"Approved.\"</p> <p>Note</p> <p>Recommendations with the same combinations, such as stopping an EC2 instance in account ID 123456789012 and region ap-northeast-1, will also have their status updated to <code>approved</code>. As mentioned in the key elements, change templates can be shared across these combinations.</p> <p></p> <p>To execute, click the 3 vertical dots or open the recommendation details modal and select <code>Execute recommendation</code></p> <p></p> <p>Type <code>execute</code> and click <code>Execute</code></p> <p></p> <p></p>"},{"location":"octo/recommendations/executerecommendation/#what-happens-after-the-execution","title":"What happens after the execution?","text":""},{"location":"octo/recommendations/executerecommendation/#successful-execution","title":"Successful Execution","text":"<p>If the execution is successful, the recommendation will be moved to the Optimization History. This ensures completed recommendations are properly archived, allowing users to track past optimizations and assess their impact over time. The Optimization History provides a consolidated view of all successfully executed recommendations, making it easier to review and analyze previous actions.</p> <p></p>"},{"location":"octo/recommendations/executerecommendation/#execution-error","title":"Execution error","text":"<p>If an error occurs during execution, the status will update to <code>Execution Error</code>. Users can troubleshoot the issue by opening the recommendation's details modal, which provides a comprehensive error message. This message explains the nature of the error and helps users diagnose the root cause.</p> <p></p> <p></p>"},{"location":"octo/recommendations/executerecommendation/#re-try-execution","title":"Re-try execution","text":"<p>Octo also allows users to retry execution only when the state is marked as an <code>Execution error</code>. This feature provides an easy way to handle failures and ensure tasks are completed successfully. To retry, click the three vertical dots or open the recommendation details modal and click <code>Re-try execution</code> This action will trigger a new attempt, allowing users to resolve any issues without needing to manually reconfigure the recommendation.</p> <p></p> <p>Once the error is resolved and the execution is retried successfully, the recommendation will be moved to the Optimization History, ensuring it is tracked and recorded for future reference.</p>"},{"location":"octo/recommendations/executerecommendation/#current-recommendations-that-support-execution","title":"Current recommendations that support execution","text":"<p>Currently, Octo supports the following recommendations below. More recommendations will be supported in the future.</p> Current recommendations that support execution Recommendation Source Category Stop EC2 instance Cost Optimization Hub Stop Stop RDS DB instance Cost Optimization Hub Stop Low Utilization instance Amazon EC2 Instances Trusted Advisor Stop Rightsize EC2 instance Cost Explorer Rightsize Rightsize RDS DB instance Cost Optimization Hub Rightsize Rightsize ECS service Cost Optimization Hub Rightsize Rightsize Lambda function Cost Optimization Hub Rightsize Rightsize EC2 Auto Scaling group Cost Optimization Hub Rightsize"},{"location":"octo/recommendations/recommendationhub/","title":"Recommendation Hub","text":"<p>Google Cloud Platform also offers a recommendation system that provides actionable insights to help users optimize their cloud infrastructure.  Leveraging analyses of resource utilization, configurations, and established best practices, it generates personalized recommendations tailored to each environment. Like AWS Trusted Advisor, GCP\u2019s recommendations are categorized into cost optimization, performance, reliability, security, and sustainability, giving users a comprehensive view of potential improvements.</p> <p>In Octo, all cost optimization recommendations from GCP Recommendation Hub will be collected and displayed in a centralized view. This allows users to quickly identify opportunities for savings and more efficient resource allocation, aligning with their financial and operational goals.</p>"},{"location":"octo/recommendations/recommendationhub/#compute-engine","title":"Compute Engine","text":"Idle Virtual Machine Idle IP Address Idle Persistent Disk Idle Custom Image"},{"location":"octo/recommendations/recommendationhub/#idle-virtual-machine","title":"Idle Virtual Machine","text":"<p>GCP Resource Type Virtual Machine Optimization Type Usage Category Stop Description Compute Engine provides idle VM recommendations to help users identify virtual machine (VM) instances that have not been used over the previous 1 to 14 days. Users can use idle VM recommendations to find and stop idle VM instances to reduce wasting resources and reduce your compute bill. Criteria \u2022   Compute Engine generates recommendations about idle VM instances based on historical usage metrics. By default, the historical observation period is 14 days, or, for new VMs, starting one day after VM creation. By changing the default observation period, users can customize the recommendations that they receive. For more information, see Configure idle VM recommendations Potential savings Save 100% of the cost of that vm. For more information, see VM pricing. Recommended Action Stop Vitrual Machine How will Octo implement the recommended action? Not implemented yet. </p>"},{"location":"octo/recommendations/recommendationhub/#idle-ip-address","title":"Idle IP Address","text":"<p><p> GCP Resource Type Compute Engine IP Address Optimization Type Usage Category Delete Description This recommendation identifies IP addresses that are allocated but not actively in use within your Google Cloud environment. Idle IP addresses can incur unnecessary costs without providing any value to your infrastructure. Releasing or deleting these addresses can help reduce expenses and optimize resource allocation. Criterias The IP address hasn't been attached to any resource for at least 15 days. Potential savings Save 100% of the cost of that IP address. For more information, see External IP address pricing. Recommended Action Release or delete IP Address. How will Octo implement the recommended action? Not implemented yet. </p></p>"},{"location":"octo/recommendations/recommendationhub/#idle-persistent-disk","title":"Idle Persistent Disk","text":"<p><p> GCP Resource Type Compute Engine Disk Optimization Type Usage Category Delete Description This recommendation highlights persistent disks in Google Cloud that are provisioned but not currently attached to any virtual machine. Unused disks continue to incur storage charges, adding to overall costs without delivering value. Criterias There are two approaches to address this recommendation effectively. First criteria:  \u2022   The Persistent Disk was created at least 15 days ago. \u2022   The Persistent Disk was never attached to a VM. \u2022   The Persistent Disk is blank. \u2022   The Persistent Disk isn't bound to GKE Pods. Second criteria: \u2022   The Persistent Disk was detached for at least 15 days. \u2022   The Persistent Disk isn't bound to GKE Pods.  Potential savings If the first criteria are met, users can save 100% of the cost of that disk. If the second criteria are met, maintenance costs can be reduced by 35% to 92%. Recommended Action For the first option, users should proceed with the permanent deletion of the disk. For the second criteria, users are advised to create a snapshot of the persistent disk before deleting it. This approach allows users to incur a lower cost, as they will be charged for the snapshot rather than the disk itself. How will Octo implement the recommended action? Not yet implemented. Is rollback possible? Users cannot restore the disk for the first option, as it is permanently deleted. However, for the second option, users can restore it using the snapshot created. </p></p>"},{"location":"octo/recommendations/recommendationhub/#idle-custom-image","title":"Idle Custom Image","text":"<p><p> GCP Resource Type Compute Engine Custom Image Optimization Type Usage Category Delete Description This recommendation identifies custom images stored in Google Cloud that are not actively in use. Retaining unused images can lead to unnecessary storage costs over time. Removing idle custom images helps reduce storage expenses and ensures that only relevant resources are maintained. Criteria \u2022   The image wasn't used to create a disk for at least 15 days. \u2022   The image isn't used in any instance template.  Potential savings Save 100% of the cost of that image. For more information, see Disk and image pricing. Recommended Action Release or delete IP Address. How will Octo implement the recommended action? Not implemented yet. </p></p>"},{"location":"octo/recommendations/recommendationhub/#kubernetes-engine","title":"Kubernetes Engine","text":"Idle GKE Cluter"},{"location":"octo/recommendations/recommendationhub/#idle-gke-cluster","title":"Idle GKE Cluster","text":"<p><p> GCP Resource Type GKE Cluster Optimization Type Usage Category Delete Description This recommendation identifies Google Kubernetes Engine (GKE) clusters that are currently not being utilized. Idle GKE clusters can lead to unnecessary operational costs, as they incur charges even when no workloads are running. Criterias \u2022   There are zero Pods in the Running state outside of the kube-system and gmp-system namespace in the cluster metrics events logs for the cluster during the last 30 days. \u2022   There are zero nodes or zero node pools in the cluster metrics events logs for the cluster during the last 30 days \u2022   CPU utilization (averaged over 1 hour) is below 7% and there has been no change in object count during the last 30 days.  Potential savings Save 100% of the cost of that cluster. For more information, see Kubernetes Engine pricing. Recommended Action Delete GKE Cluster</p> <p>Considerations when deleting idle clusters</p> <p>Before you delete an idle cluster recommended by the Idle Cluster Recommender, consider the following possibilities: 1. Does anyone use the cluster? For example, a cluster might be intentionally idle if its purpose is to maintain failover capacity. 2. Should the cluster be scaled down instead of deleted? For example, a cluster running a useful workload might have low utilization and be identified as idle because more resources were provisioned than necessary.</p> <p>How will Octo implement the recommended action? Not implemented yet. </p></p>"},{"location":"octo/recommendations/trustedadvisor/","title":"Trusted Advisor","text":"<p> AWS Trusted Advisor, a service from Amazon Web Services (AWS), offers real-time guidance to assist users in provisioning their resources according to AWS best practices. It provides recommendations across categories like cost optimization, performance, security, and fault tolerance. Octo leverages its API to fetch and display recommendations specifically from the cost optimization category.</p> <p>Trusted Advisor Recommendations are accessible exclusively to users subscribed to the Business, Enterprise On-Ramp, or Enterprise Support plans.</p> <p>Below is the list of recommendations under cost optimization category that are supported by octo. </p>"},{"location":"octo/recommendations/trustedadvisor/#amazonebs","title":"AmazonEBS","text":"Underutilized Amazon EBS Volumes"},{"location":"octo/recommendations/trustedadvisor/#underutilized-amazon-ebs-volumes","title":"Underutilized Amazon EBS Volumes","text":"<p><p> AWS Resource Type     EBS Volume Optimization Type     Usage Category     Delete Description     Checks Amazon Elastic Block Store (Amazon EBS) volume configurations and warns when volumes appear to be underutilized.     Charges begin when a volume is created. If a volume remains unattached or has very low write activity (excluding boot volumes) for a period of time, the volume is underutilized. We recommend that you remove underutilized volumes to reduce costs. Criteria     \u2022   A volume is unattached or had less than 1 IOPS per day for the past 7 days. Potential Savings     Deleting detached EBS volumes results in savings, calculated by subtracting the volume's cost from the snapshot's overall cost Recommended Action     Create snapshot and delete the volume How will Octo implement the recommended action?     Octo uses CreateSnapshot API to create a snapshot of the volume.     If the EBS volume is currently attached to an EC2 instance, Octo invokes DetachVolume API to detach it. Following detachment, Octo proceeds to use DeleteVolume to delete the volume. Is rollback possible?     Yes. Use the snapshot created to restore the volume using AWS Console/AWS CLI </p></p>"},{"location":"octo/recommendations/trustedadvisor/#amazonec2","title":"AmazonEC2","text":"Amazon EC2 Instances Stopped Low Utilization Amazon EC2 Instances Unassociated Elastic IP Addresses Amazon EC2 Reserved Instance Lease Expiration Amazon EC2 instances consolidation for Microsoft SQL Server Amazon EC2 instances over-provisioned for Microsoft SQL Server Inactive NAT Gateways"},{"location":"octo/recommendations/trustedadvisor/#amazon-ec2-instances-stopped","title":"Amazon EC2 Instances Stopped","text":"<p><p> AWS Resource Type     EC2 Instance Optimization Type     Usage Category     Delete Description     Checks if there are Amazon EC2 instances that have been stopped for more than 30 days. Criteria     \u2022  There are Amazon EC2 instances stopped for more than the allowed number of days.  Potential Savings     It can lead to savings by eliminating storage costs for associated EBS volumes and avoiding unnecessary charges if the instance is covered by a Reserved Instance or Savings Plan.  Recommended Action     Terminate EC2 instance How will Octo implement the recommended action?     Octo uses TerminateInstances API to terminate the EC2 instance. Is rollback possible?     No </p></p>"},{"location":"octo/recommendations/trustedadvisor/#low-utilization-amazon-ec2-instances","title":"Low Utilization Amazon EC2 Instances","text":"<p><p> AWS Resource Type     EC2 Instance Optimization Type     Usage Category     Stop Description     Checks the Amazon Elastic Compute Cloud (Amazon EC2) instances that were running at any time during the last 14 days. This check alerts if the daily CPU utilization was 10% or less and network I/O was 5 MB or less for at least 4 days.     Running instances generate hourly usage charges. Although some scenarios can result in low utilization by design, you can often lower your costs by managing the number and size of your instances. Criteria     \u2022   An instance had 10% or less daily average CPU utilization and 5 MB or less network I/O on at least 4 of the previous 14 days.  Potential Savings     Estimated monthly savings are calculated by using the current usage rate for On-Demand Instances and the estimated number of days the instance might be underutilized. Actual savings will vary if you are using Reserved Instances or Spot Instances, or if the instance is not running for a full day.  Recommended Action     Stop EC2 instance How will Octo implement the recommended action?     Octo uses StopInstances API to stop the EC2 instance. Is rollback possible?     Yes. You can manually start the instance again through AWS console or AWS CLI. </p></p>"},{"location":"octo/recommendations/trustedadvisor/#unassociated-elastic-ip-addresses","title":"Unassociated Elastic IP Addresses","text":"<p><p> AWS Resource Type     Elastic IP Address Optimization Type     Usage Category     Delete Description     Checks for Elastic IP addresses (EIPs) that are not associated with a running Amazon Elastic Compute Cloud (Amazon EC2) instance.     EIPs are static IP addresses designed for dynamic cloud computing. Unlike traditional static IP addresses, EIPs mask the failure of an instance or Availability Zone by remapping a public IP address to another instance in your account. A nominal charge is imposed for an EIP that is not associated with a running instance. Criteria     \u2022   An allocated Elastic IP address (EIP) is not associated with a running Amazon EC2 instance. Recommended Action     \u2022   Release/Delete Elastic IP Address     \u2022   Associate EIP to EC2 instance How will Octo implement the recommended action?     Octo only supports releasing the Elastic IP Address. You can associate EIP to instance using AWS Console/AWS CLI.     For Releasing EIP:     Octo uses ReleaseAddress API. Is rollback possible?     No </p></p>"},{"location":"octo/recommendations/trustedadvisor/#amazon-ec2-reserved-instance-lease-expiration","title":"Amazon EC2 Reserved Instance Lease Expiration","text":"<p><p> AWS Resource Type     EC2 Reserved Instances Optimization Type     Rate Category     Reserved Instance Description     Checks for Amazon EC2 Reserved Instances that are scheduled to expire within the next 30 days, or have expired in the preceding 30 days.     Reserved Instances don't renew automatically. You can continue using an Amazon EC2 instance covered by the reservation without interruption, but you will be charged On-Demand rates. New Reserved Instances can have the same parameters as the expired ones, or you can purchase Reserved Instances with different parameters. Criteria     \u2022   The Reserved Instance lease expires in less than 30 days.     \u2022   The Reserved Instance lease expired in the preceding 30 days. Recommended Action     Consider purchasing a new Reserved Instance to replace the one that is nearing the end of its term. How will Octo implement the recommended action?     Not applicable      Is rollback possible?     Not applicable </p></p>"},{"location":"octo/recommendations/trustedadvisor/#amazon-ec2-instances-consolidation-for-microsoft-sql-server","title":"Amazon EC2 instances consolidation for Microsoft SQL Server","text":"<p><p> AWS Resource Type     EC2 Instance Optimization Type     Usage Category     Rightsize Description     Checks your Amazon Elastic Compute Cloud (Amazon EC2) instances that are running SQL Server in the past 24 hours. This check alerts you if your instance has less than the minimum number of SQL Server licenses. From the Microsoft SQL Server Licensing Guide, you are paying 4 vCPU licenses even if an instance has only 1 or 2 vCPUs. You can consolidate smaller SQL Server instances to help lower costs. Criteria     \u2022   An instance with SQL Server has less than 4 vCPUs. Recommended Action     Consider consolidating smaller SQL Server workloads into instances with at least 4 vCPUs. How will Octo implement the recommended action?     Not applicable      Is rollback possible?     Not applicable </p></p>"},{"location":"octo/recommendations/trustedadvisor/#amazon-ec2-instances-over-provisioned-for-microsoft-sql-server","title":"Amazon EC2 instances over-provisioned for Microsoft SQL Server","text":"<p><p> AWS Resource Type     EC2 Instance Optimization Type     Usage Category     Rightsize Description     Checks your Amazon Elastic Compute Cloud (Amazon EC2) instances that are running SQL Server in the past 24 hours. An SQL Server database has a compute capacity limit for each instance. An instance with SQL Server Standard edition can use up to 48 vCPUs. An instance with SQL Server Web can use up to 32 vCPUs. This check alerts you if an instance exceeds this vCPU limit.     If your instance is over-provisioned, you pay full price without realizing an improvement in performance. You can manage the number and size of your instances to help lower costs. Criteria     \u2022   An instance with SQL Server Standard edition has more than 48 vCPUs.     \u2022   An instance with SQL Server Web edition has more than 32 vCPUs. Recommended Action     For SQL Server Standard edition, consider changing to an instance in the same instance family with 48 vCPUs. For SQL Server Web edition, consider changing to an instance in the same instance family with 32 vCPUs. If it is memory intensive, consider changing to memory optimized R5 instances How will Octo implement the recommended action?     Not applicable      Is rollback possible?     Not applicable </p></p>"},{"location":"octo/recommendations/trustedadvisor/#inactive-nat-gateways","title":"Inactive NAT Gateways","text":"<p><p> AWS Resource Type     NAT Gateway Optimization Type     Usage Category     Delete Description     Checks your NAT Gateways for inactive gateways. A NAT Gateway is considered to be inactive if no data (0 bytes) was processed in the last 30 days. NAT Gateways have hourly charges and data processed charges. Criteria     \u2022   The NAT Gateway processed 0 bytes in the last 30 days Recommended Action     Consider deleting any NAT Gateways that weren\u2019t used in the last 30 days and that aren\u2019t required for external network access outside the VPC.     If a Transit Gateway is used for inter-VPC communication, then consider deploying a centralized NAT Gateway for egress to internet architecture. This can reduce the hourly cost from inactive NAT Gateways. How will Octo implement the recommended action?     Not applicable      Is rollback possible?     Not applicable </p></p>"},{"location":"octo/recommendations/trustedadvisor/#amazoncomprehend","title":"AmazonComprehend","text":"Amazon Comprehend Underutilized Endpoints"},{"location":"octo/recommendations/trustedadvisor/#amazon-comprehend-underutilized-endpoints","title":"Amazon Comprehend Underutilized Endpoints","text":"<p><p> AWS Resource Type     Comprehend Endpoints Optimization Type     Usage Category     Delete Description     Checks the throughput configuration of your endpoints. This check alerts you when endpoints are not actively used for real-time inference requests. An endpoint that isn\u2019t used for more than 15 consecutive days is considered underutilized. All endpoints accrue charges based on both the throughput set, and the length of time that the endpoint is active. Criteria     \u2022   The endpoint is active, but hasn\u2019t been used for real-time inference requests in the past 15 days.      Recommended Action     If the endpoint has a scaling policy defined and hasn\u2019t been used in the past 30 days, consider deleting the endpoint and using asynchronous inference.  How will Octo implement the recommended action?     Not implemented yet. Is rollback possible?     Not implemented yet. </p></p>"},{"location":"octo/recommendations/trustedadvisor/#amazonecr","title":"AmazonECR","text":"Amazon ECR Repository Without Lifecycle Policy Configured"},{"location":"octo/recommendations/trustedadvisor/#amazon-ecr-repository-without-lifecycle-policy-configured","title":"Amazon ECR Repository Without Lifecycle Policy Configured","text":"<p><p> AWS Resource Type     ECR Repository Optimization Type     Others Category     Others Description     Checks if a private Amazon ECR repository has at least one lifecycle policy configured. Lifecycle policies allow you to define a set of rules to automatically clean up old or unused container images. This gives you control over the lifecycle management of the images, allows Amazon ECR repositories to be better organized, and helps to lower overall storage costs. Criteria     \u2022   An Amazon ECR private repository doesn\u2019t have any lifecycle policies configured. Recommended Action     Consider creating at least one lifecycle policy for your private Amazon ECR repository. How will Octo implement the recommended action?     Not applicable Is rollback possible?     Not applicable </p></p>"},{"location":"octo/recommendations/trustedadvisor/#awselb","title":"AWSELB","text":"Idle Load Balancers"},{"location":"octo/recommendations/trustedadvisor/#idle-load-balancers","title":"Idle Load Balancers","text":"<p><p> AWS Resource Type     Elastic Load Balancer Optimization Type     Usage Category     Delete Description     Checks your Elastic Load Balancing configuration for load balancers that are idle.     Any load balancer that is configured accrues charges. If a load balancer has no associated back-end instances, or if network traffic is severely limited, the load balancer is not being used effectively. This check currently only checks for Classic Load Balancer type within ELB service. It does not include other ELB types (Application Load Balancer, Network Load Balancer). Criterias     \u2022   A load balancer has no active back-end instances.     \u2022   A load balancer has no healthy back-end instances.     \u2022   A load balancer has had less than 100 requests per day for the last 7 days. Potential Savings     Keeping an idle ELB costs around $200 per year. Removing the ELB avoids incurring this expense. Recommended Action     If load balancer has had a low request count, consider deleting the load balancer. How will Octo implement the recommended action?     Octo uses DeleteLoadBalancer API to delete the load balancer. Is rollback possible?     No </p></p>"},{"location":"octo/recommendations/trustedadvisor/#amazonnetworkfirewall","title":"AmazonNetworkFirewall","text":"Inactive AWS Network Firewall Network Firewall endpoint AZ Independence"},{"location":"octo/recommendations/trustedadvisor/#inactive-aws-network-firewall","title":"Inactive AWS Network Firewall","text":"<p><p> AWS Resource Type     Network Firewall Optimization Type     Usage Category     Delete Description     Checks your AWS Network Firewall endpoints and alerts you when the Network Firewall appears to be inactive.     A Network Firewall is considered to be inactive if all its endpoints have no data processed the last 30 days. Network Firewall endpoints incur hourly charges. This check alerts you to Network Firewall with no data processed in the last 30 days. It\u2019s a best practice to either remove unused Network Firewalls or update your architecture. Criteria     \u2022   The Network Firewall processed 0 bytes in the last 30 days. Recommended Action     If the Network Firewall wasn\u2019t used in the last 30 days, then consider deleting the Network Firewall.     If a Transit Gateway is used for inter-VPC communication, then consider deploying your Network Firewalls in a centralized network inspection architectures. This can reduce the hourly charges on inactive Network Firewalls. How will Octo implement the recommended action?     Not applicable Is rollback possible?     Not applicable </p></p>"},{"location":"octo/recommendations/trustedadvisor/#network-firewall-endpoint-az-independence","title":"Network Firewall endpoint AZ Independence","text":"<p><p> AWS Resource Type     Network Firewall Optimization Type     Usage Category     Others Description     Check the AZ of your subnet and route traffic through a Network Firewall endpoint in the same AZ.     If there is no Network Firewall endpoint in the AZ, then create a new Network Firewall and route your subnet traffic through it.     If the same route table is associated across multiple subnets in different AZs, then keep this route table associated to the subnets that reside in the same AZ as the Network Firewall endpoint. For subnets in other AZs, associate a separate route table with a route to a Network Firewall endpoint in that AZ.     It\u2019s a best practice to choose a maintenance window for architecture changes in your Amazon VPC. Criteria     \u2022   Traffic from a subnet in one AZ is being routed through a Network Firewall endpoint in a different AZ. Recommended Action     If the Network Firewall wasn\u2019t used in the last 30 days, then consider deleting the Network Firewall.     If a Transit Gateway is used for inter-VPC communication, then consider deploying your Network Firewalls in a centralized network inspection architectures. This can reduce the hourly charges on inactive Network Firewalls. How will Octo implement the recommended action?     Not applicable Is rollback possible?     Not applicable </p></p>"},{"location":"octo/recommendations/trustedadvisor/#amazonroute53","title":"AmazonRoute53","text":"Amazon Route 53 Latency Resource Record Sets"},{"location":"octo/recommendations/trustedadvisor/#amazon-route-53-latency-resource-record-sets","title":"Amazon Route 53 Latency Resource Record Sets","text":"<p><p> AWS Resource Type     Route53 Latency Record Set Optimization Type     Others Category     Others Description     Checks for Amazon Route 53 latency record sets that are configured inefficiently.     To allow Amazon Route 53 to route queries to the AWS Region with the lowest network latency, you should create latency resource record sets for a particular domain name (such as example.com) in different Regions. If you create only one latency resource record set for a domain name, all queries are routed to one Region, and you pay extra for latency-based routing without getting the benefits.     Hosted zones created by AWS services won\u2019t appear in your check results. Criteria     \u2022   Only one latency resource record set is configured for a particular domain name.. Recommended Action     If you have resources in multiple regions, be sure to define a latency resource record set for each region. See Latency-Based Routing.     If you have resources in only one AWS Region, consider creating resources in more than one AWS Region and define latency resource record sets for each; see Latency-Based Routing.     If you don't want to use multiple AWS Regions, you should use a simple resource record set. See Working with Resource Record Sets. How will Octo implement the recommended action?     Not applicable Is rollback possible?     Not applicable </p></p>"},{"location":"octo/recommendations/trustedadvisor/#amazonrds","title":"AmazonRDS","text":"Amazon RDS Idle DB Instances"},{"location":"octo/recommendations/trustedadvisor/#amazon-rds-idle-db-instances","title":"Amazon RDS Idle DB Instances","text":"<p><p> AWS Resource Type     RDS DB Instance Optimization Type     Usage Category     Delete Description     Checks the configuration of your Amazon Relational Database Service (Amazon RDS) for any database (DB) instances that appear to be idle. Criteria     \u2022   An active DB instance has not had a connection in the last 7 days. Potential Savings     Savings are calculated as [Cost of RDS running hours] + [Cost of storage] - [Cost of snapshot] Recommended Action     Delete RDS DB Instance with Final Snapshot How will Octo implement the recommended action?     Octo uses DeleteDBInstance API. A snapshot is taken first before deleting the RDS Instance. Is rollback possible?     Yes. Use the snapshot taken during the deletion process to restore the instance with its original configuration through AWS Console/AWS CLI. </p></p>"},{"location":"octo/recommendations/trustedadvisor/#amazons3","title":"AmazonS3","text":"Amazon S3 Incomplete Multipart Upload Abort Configuration Amazon S3 Bucket Lifecycle Policy Configured Amazon S3 version-enabled buckets without lifecycle policies configured"},{"location":"octo/recommendations/trustedadvisor/#amazon-s3-incomplete-multipart-upload-abort-configuration","title":"Amazon S3 Incomplete Multipart Upload Abort Configuration","text":"<p><p> AWS Resource Type     S3 Object Optimization Type     Usage Category     Others Description     Checks that each Amazon S3 bucket is configured with a lifecycle rule to abort multipart uploads that remain incomplete after 7 days. Using a lifecycle rule to abort these incomplete uploads and delete the associated storage is recommended. Criteria     \u2022   The lifecycle configuration bucket does not contain a lifecycle rule to abort all multipart uploads that remain incomplete after 7 days. Recommended Action     Configure Lifecycle Rule that would cleanup all incomplete multipart uploads. How will Octo implement the recommended action?     Octo uses PutBucketLifecycleConfiguration to create lifecycle configuration named <code>Amazon S3 Incomplete Multipart Upload Abort Configuration</code> Is rollback possible?     Yes. Delete <code>Amazon S3 Incomplete Multipart Upload Abort Configuration</code> lifecycle configuration. </p></p>"},{"location":"octo/recommendations/trustedadvisor/#amazon-s3-bucket-lifecycle-policy-configured","title":"Amazon S3 Bucket Lifecycle Policy Configured","text":"<p><p> AWS Resource Type     S3 Bucket Optimization Type     Others Category     Others Description     Checks if an Amazon S3 bucket has a lifecycle policy configured. An Amazon S3 lifecycle policy ensures that Amazon S3 objects inside the bucket are stored cost-effectively throughout their lifecycle. This is important for meeting regulatory requirements for data retention and storage. The policy configuration is a set of rules that define actions applied by the Amazon S3 service to a group of objects. A lifecycle policy allows you to automate transitioning objects to lower-cost storage classes or deleting them as they age. For example, you can transition an object to Amazon S3 Standard-IA storage 30 days after creation, or to Amazon S3 Glacier after 1 year. Criteria     \u2022 Amazon S3 bucket has no lifecycle policy configured.      Recommended Action     Make sure that you have a lifecycle policy configured in your Amazon S3 bucket.     If your organization does not have a retention policy in place, consider using Amazon S3 Intelligent-Tiering to optimize cost. How will Octo implement the recommended action?     Not applicable. Is rollback possible?     Not applicable. </p></p>"},{"location":"octo/recommendations/trustedadvisor/#amazon-s3-version-enabled-buckets-without-lifecycle-policies-configured","title":"Amazon S3 version-enabled buckets without lifecycle policies configured","text":"<p><p> AWS Resource Type     S3 Bucket Optimization Type     Others Category     Others Description     Checks if Amazon S3 version-enabled buckets have a lifecycle policy configured. Criteria     \u2022 An Amazon S3 version-enabled bucket with doesn't have a lifecycle policy configured.      Recommended Action     Configure lifecycle policies for your Amazon S3 buckets to manage your objects so that they are stored cost effectively throughout their lifecycle.  How will Octo implement the recommended action?     Not applicable. Is rollback possible?     Not applicable. </p></p>"},{"location":"octo/recommendations/trustedadvisor/#awslambda","title":"AWSLambda","text":"AWS Lambda Functions with High Error Rates AWS Lambda Functions with Excessive Timeouts"},{"location":"octo/recommendations/trustedadvisor/#aws-lambda-functions-with-high-error-rates","title":"AWS Lambda Functions with High Error Rates","text":"<p><p> AWS Resource Type     Lambda Function Optimization Type     Usage Category     Others Description     Checks for Lambda functions with high error rates that might result in higher costs.     Lambda charges are based on the number of requests and aggregate run time for your function. Function errors may cause retries that incur additional charges. Criteria     \u2022   Functions where &gt; 10% of invocations end in error on any given day within the last 7 days. Recommended Action     Integrate Lambda functions with Amazon CloudWatch and AWS X-Ray to leverage logs, metrics, alarms, and X-Ray tracing for rapid issue detection and identification.  How will Octo implement the recommended action?     Not applicable Is rollback possible?     Not applicable </p></p>"},{"location":"octo/recommendations/trustedadvisor/#aws-lambda-functions-with-excessive-timeouts","title":"AWS Lambda Functions with Excessive Timeouts","text":"<p><p> AWS Resource Type     Lambda Function Optimization Type     Usage Category     Others Description     Checks for Lambda functions with high timeout rates that might result in high cost.     Lambda charges based on run time and number of requests for your function. Function timeouts result in errors that may cause retries. Retrying functions will incur additionally request and run time charges. Criteria     \u2022   Functions where &gt; 10% of invocations end in an error due to a timeout on any given day within the last 7 days. Recommended Action     Inspect function logging and X-ray traces to determine the contributor to the high function duration. Implement logging in your code at relevant parts, such as before or after API calls or database connections. By default, AWS SDK clients timeouts may be longer than the configured function duration. Adjust API and SDK connection clients to retry or fail within the function timeout. If the expected duration is longer than the configured timeout, you can increase the timeout setting for the function.  How will Octo implement the recommended action?     Not applicable Is rollback possible?     Not applicable </p></p>"},{"location":"octo/recommendations/trustedadvisor/#amazonredshift","title":"AmazonRedshift","text":"Underutilized Amazon Redshift Clusters"},{"location":"octo/recommendations/trustedadvisor/#underutilized-amazon-redshift-clusters","title":"Underutilized Amazon Redshift Clusters","text":"<p><p> AWS Resource Type     Redshift Cluster Optimization Type     Usage Category     Delete Description     Checks your Amazon Redshift configuration for clusters that appear to be underutilized.     If an Amazon Redshift cluster has not had a connection for a prolonged period of time, or is using a low amount of CPU, you can use lower-cost options such as downsizing the cluster, or shutting down the cluster and taking a final snapshot. Final snapshots are retained even after you delete your cluster. Criteria     \u2022   A running cluster has not had a connection in the last 7 days.     \u2022   A running cluster had less than 5% cluster-wide average CPU utilization for 99% of the last 7 days.      Recommended Action     Consider shutting down the cluster and taking a final snapshot.  How will Octo implement the recommended action?     Not implemented yet. Is rollback possible?     Not implemented yet. </p></p>"},{"location":"octo/recommendations/trustedadvisor/#others","title":"Others","text":"AWS Account Not Part of AWS Organizations AWS Well-Architected high risk issues for cost optimization"},{"location":"octo/recommendations/trustedadvisor/#aws-account-not-part-of-aws-organizations","title":"AWS Account Not Part of AWS Organizations","text":"<p><p> AWS Resource Type     AWS Accounts Optimization Type     Others Category     Others Description     Checks if an AWS account is part of AWS Organizations under the appropriate management account.     AWS Organizations is an account management service for consolidating multiple AWS accounts into a centrally-managed organization. This enables you to centrally structure accounts for billing consolidation and implement ownership and security policies as your workloads scale on AWS.     You can specify the management account id using the MasterAccountId parameter of the AWS Config rules. Criteria     \u2022 This AWS account is not part of AWS Organizations.      Recommended Action     Add this AWS account as part of AWS Organizations.  How will Octo implement the recommended action?     Not applicable. Is rollback possible?     Not applicable. </p></p>"},{"location":"octo/recommendations/trustedadvisor/#aws-well-architected-high-risk-issues-for-cost-optimization","title":"AWS Well-Architected high risk issues for cost optimization","text":"<p><p> Optimization Type     Others Category     Others Description     Checks for high risk issues (HRIs) for your workloads in the cost optimization pillar. This check is based on your AWS-Well Architected reviews. Your check results depend on whether you completed the workload evaluation with AWS Well-Architected. Criteria     \u2022 At least one active high risk issue was identified in the cost optimization pillar for AWS Well-Architected.      Recommended Action     AWS Well-Architected detected high risk issues during your workload evaluation. These issues present opportunities to reduce risk and save money. Sign in to the AWS Well-Architected tool to review your answers and take action to resolve your active issues.  How will Octo implement the recommended action?     Not applicable. Is rollback possible?     Not applicable. </p></p>"},{"location":"octo/recommendations/octo/aws/","title":"AWS","text":"<p>Octo offers a powerful cost optimization recommendation feature designed to help AWS users reduce cloud spending. Our proprietary logic and criteria analyze your AWS resources to identify optimization opportunities, such as rightsizing, migrating, and eliminating underutilized resources. Unlike standard tools, Octo provides tailored recommendations based on your unique usage patterns and business needs. The feature supports a wide range of AWS services, ensuring comprehensive cost-saving insights. With Octo, users can easily take actionable steps to maximize their cloud cost efficiency.</p> <p>There are more recommendations to come, enhancing Octo\u2019s ability to help users optimize their AWS costs effectively.</p>"},{"location":"octo/recommendations/octo/aws/#amazonec2","title":"AmazonEC2","text":"Change EC2 instance type from Intel to AMD"},{"location":"octo/recommendations/octo/aws/#change-ec2-instance-type-from-intel-to-amd","title":"Change EC2 Instance Type from Intel to AMD","text":"<p><p> AWS Resource Type     EC2 instance Optimization Type     Usage Category     Migrate Description     Migrating an EC2 instance from Intel to AMD processors can help reduce costs without compromising performance. AMD-based instances offer a cost-effective alternative, typically providing similar compute power at a lower price compared to Intel-based instances. This migration is suitable for workloads that do not have processor-specific dependencies. By switching to AMD instances, users can optimize their cloud expenditure while maintaining workload efficiency, making it an effective strategy for overall cost reduction. Criterias     \u2022   Instance families deemed safe for migration from Intel to AMD include: T3, C5, M5, R5, C6i, M6i, and R6i.     \u2022   Instance types that have reservations are excluded.     \u2022   Instance types that are not long-lived are excluded (e.g., part of Auto Scaling Group or EMR).     \u2022   Instances with measured peak EBS throughput in the last 30 days that exceed the EBS bandwidth of the AMD counterpart are excluded.     \u2022   Instances for which we do not have at least 30 days of CPU and IO throughput data are excluded.     \u2022   For instance, types T3, C5, M5, and R5 make sure CPU utilization in the last 30 days was less than 80% (due to a lower clock frequency of the AMD counterpart). Potential Savings     The AMD-based EC2 instances that AWS offers are typically about 10% cheaper than the equivalent Intel EC2 instances. Recommended Action     Change EC2 Intel instance type to AMD How will Octo implement the recommended action?     Not implemented yet. Is rollback possible?     Not implemented yet. </p></p>"},{"location":"ripple/","title":"Overview","text":"<p>Welcome to Alphaus documentation. Find user guides, developer guides, API references, tutorials, sample codes, and more.</p>"},{"location":"ripple/concepts/","title":"Concepts and terms","text":""},{"location":"ripple/concepts/#trueunblended","title":"TrueUnblended","text":"<p>TrueUnblended is the term we use at Alphaus to refer to some of the corrective recalculations we do specific to AWS billing data in relation to how RI/SP discounts are applied. You can check here to understand more what it is about.</p>"},{"location":"ripple/concepts/#billing-group","title":"Billing group","text":"<p>Billing group is one of the main grouping mechanisms available in Ripple. With billing groups, you can group cloud accounts; linked/member accounts in AWS, subscription IDs in Azure, and project IDs in GCP. You can also create tag-based billing groups. As a cloud reseller, you calculate invoices at the billing group level. Your clients' WavePro access is also rooted at the billing group level, although WavePro also supports access at the access group level. Most Ripple features center around the billing group.</p>"},{"location":"ripple/concepts/#access-group","title":"Access group","text":"<p>Access group is a collection of billing groups.</p>"},{"location":"ripple/trueunblended/","title":"About our TrueUnblended calculations for AWS","text":"<p>Note</p> <p>TrueUnblended only applies to your AWS cost calculations.</p> <p>In AWS consolidated billing, unless configured otherwise, all the usages of all member accounts of an organization, including the payer, are combined in order to share volume discounts, and RI/SP discounts. This is beneficial from a cloud reseller and an enterprise CCOE's point of view as they can share RI/SP discounts purchased at the payer level across the organization.</p> <p></p> <p>However, from a client's perspective, there are cases, depending on how the billing group is configured, where knowing the real costs is required. Real costs here simply means the true costs accrued by a member account or a billing group with only its own RI/SP discounts applied. Therefore, external discounts, such as payer-level discounts, and discounts from other member accounts, need to be reverted and recalculated. This is one of the corrective recalculations covered by TrueUnblended.</p> <p></p> <p>Another area where TrueUnblended does corrective recalculations is with zonal RIs. Zonal RI discounts are applied first before regional RI discounts. As a member account, you might have usages that were already covered by external zonal RI discounts (i.e. from another member account) before your regional RI discounts were being applied. Instead of these usages showing up in your bill as usages using the ondemand rates, TrueUnblended will make sure that your regional RI discounts are applied to these usages as well using AWS RI application rules.</p> <p></p> <p>Another area where TrueUnblended does corrective recalculations is with SavingsPlans<sup>1</sup>. RI discounts are applied first before SP discounts. As a member account, you might have usages that were already covered by external RI discounts (i.e. from another member account) before your SP discounts were being applied. Instead of these usages showing up in your bill as usages using the ondemand rates, TrueUnblended will make sure that your SP discounts are applied to these usages as well using AWS SP application rules.</p> <p></p> <ol> <li> <p>Support is expected to be released by Q2, 2022.\u00a0\u21a9</p> </li> </ol>"},{"location":"ripple/apiref/","title":"Overview","text":"Description Link API Base URL <code>https://api.alphaus.cloud/m/ripple/</code>"},{"location":"ripple/apiref/account/","title":"Account","text":"<p>\u30a2\u30ab\u30a6\u30f3\u30c8\u306eAPI\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002</p>"},{"location":"ripple/apiref/account/#create","title":"Create","text":"<p>\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u4f5c\u6210</p> <p>Role actions</p> <ul> <li><code>ModifyAccount</code></li> </ul> <p>Request</p> <pre><code>POST /accts HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n    \"vendor\":\"aws\",\n    \"customer_id\":\"012345678912\",\n    \"account_id\":\"919999618919\"\n    \"company_id\":\"AJfdivbDjhvbpE\",\n    \"name\":\"ripple customer1\",\n    \"note\":null\n}\n</code></pre> <p>{request body} description</p> Field Type Required Validation Description customer_id string Yes - AWS 12\u6841   - Azure 16~36\u6841 - AWS AccountID   - Azure SubscriptionID account_id string Yes - AWS 12\u6841   - AZURE 7\u6841 - AWS PayerAccountID   - Azure BillingID company_id string Yes - \u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u5185\u90e8ID vendor string Yes - \u30b5\u30dd\u30fc\u30c8: <code>aws</code>,<code>azure</code> name string Yes - \u9577\u3055: 3 ~ 100 \u767b\u9332\u3059\u308b\u9867\u5ba2\u540d note string No - \u5099\u8003\u6b04 <p>Response</p> <pre><code>HTTP 200\n\n{\"status\":\"success\"}\n\nHTTP 400 customer id \u304c\u65e2\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u5834\u5408\n\n{\n  \"code\":\"5005\",\n  \"message\":\"account function exception\",\n  \"description\":\"Customer id already exists.\"\n}\n</code></pre> <p>Python\u3067\u306e\u30b5\u30f3\u30d7\u30eb</p> <pre><code>import requests\nimport json\n\ndef get_token():\n    # Note: you can see details on:\n    #   https://labs.alphaus.cloud/docs/apiref/authentication/\n    # Assign generated values for client_id and client_secret\n    params={\n        \"grant_type\": \"client_credentials\",\n        \"client_id\": \"{client_id}\",\n        \"client_secret\": \"{client_secret}\",\n        \"scope\": \"openid\",\n    }\n    try:\n        response = requests.post(\n            url=\"https://login.alphaus.cloud/ripple/access_token\",\n            headers={\n            },\n            params=params,\n            files=params,\n        )\n    except requests.exceptions.RequestException:\n        print('HTTP Request failed')\n\n    r = response.json()\n    return r['access_token'], r[\"token_type\"]\n\ndef send_request(type, token):\n    # Authorization header\n    auth = type + \" \" + token\n    try:\n        response = requests.post(\n            url=\"https://api.alphaus.cloud/m/ripple/accts\",\n            headers={\n                \"Content-Type\": \"application/json;\",\n                \"Authorization\": auth\n            },\n            data=json.dumps({\n                \"account_id\": \"{account_id}\",\n                \"vendor\": \"{vendor}\",\n                \"customer_id\": \"{customer_id}\",\n                \"note\": None,\n                \"company_id\": \"{company_id}\",\n                \"name\": \"customer_name\"\n            })\n        )\n        print('Response HTTP Status Code: {status_code}'.format(\n            status_code=response.status_code))\n        print('Response HTTP Response Body: {content}'.format(\n            content=response.content))\n    except requests.exceptions.RequestException:\n        print('HTTP Request failed')\n\naccess_token, token_type = get_token()\nsend_request(token_type, access_token)\n</code></pre>"},{"location":"ripple/apiref/account/#list","title":"List","text":"<p>\u30a2\u30ab\u30a6\u30f3\u30c8\u30ea\u30b9\u30c8\u306e\u53d6\u5f97</p> <p>Role actions</p> <ul> <li><code>ReadAccount</code> </li> <li><code>ModifyAccount</code></li> </ul> <p>Request</p> <pre><code>GET /accts?vendor={vendor} HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>\u4ee5\u4e0b\u306b<code>{vendor}</code>\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{vendor}</p> <ul> <li>aws</li> <li>azure</li> </ul> <p>Response</p> <pre><code>HTTP 200\n\n[\n  {\n    \"billinggroup_id\":\"Billing1\",\n    \"billinggroup_name\":\"Billing1\",\n    \"company_id\":\"AJfdivbDjhvbpE\",\n    \"customer_id\":\"012345678912\",\n    \"customer_name\":\"ripple customer1\",\n    \"account_id\":\"919999618919\",\n    \"vendor\":\"aws\",\n    \"note\":null,\n    \"payer\":false,\n    \"service_discount\":null,\n    \"project_id\":null,\n    \"azure_customer_id\":null\n  },\n  ...\n]\n</code></pre>"},{"location":"ripple/apiref/account/#update","title":"Update","text":"<p>\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u66f4\u65b0</p> <p>Role actions</p> <ul> <li><code>ModifyAccount</code></li> </ul> <p>Request</p> <pre><code>PUT /accts/{customer_id}/edit HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u4ee5\u4e0b\u306b<code>{customer_id}</code>\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{customer_id}</p> <p>AWS AccountID or Azure SubscriptionID</p> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n    \"vendor\":\"aws\",\n    \"account_id\":\"919999618919\"\n    \"company_id\":\"AJfdivbDjhvbpE\",\n    \"name\":\"ripple customer1\",\n    \"note\":null\n}\n</code></pre> <p>{request body} description</p> Field Type Required Validation Description account_id string Yes - AWS 12\u6841   - AZURE 7\u6841 - AWS PayerAccountID   - Azure BillingID company_id string Yes - \u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u5185\u90e8ID vendor string Yes - \u30b5\u30dd\u30fc\u30c8: <code>aws</code>,<code>azure</code> name string Yes - \u9577\u3055: 3 ~ 100 \u767b\u9332\u3059\u308b\u9867\u5ba2\u540d note string No - \u5099\u8003\u6b04 <p>Response</p> <pre><code>HTTP 200\n\n{\"status\":\"success\"}\n\nHTTP 400 customer id \u304c\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\n\n{\n  \"code\":\"5005\",\n  \"message\":\"account function exception\",\n  \"description\":\"Customer id is not exists.\"\n}\n</code></pre>"},{"location":"ripple/apiref/account/#delete","title":"Delete","text":"<p>\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u524a\u9664</p> <p>Role actions</p> <ul> <li><code>ModifyAccount</code></li> </ul> <p>Request</p> <pre><code>DELETE /accts/{vendor}/{id} HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>\u4ee5\u4e0b\u306b<code>{vendor}</code>\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{vendor}</p> <ul> <li>aws</li> <li>azure</li> </ul> <p>\u4ee5\u4e0b\u306b<code>{id}</code>\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{id}</p> <p><code>{customer_id}|{account_id}</code>\u3002 \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u4f8b: <code>/accts/aws/012345678912|919999618919</code></p> <p>Response</p> <pre><code>HTTP 200\n\n{\"status\":\"success\"}\n\nHTTP 400 customer id \u304c\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\n\n{\n  \"code\":\"5005\",\n  \"message\":\"account function exception\",\n  \"description\":\"Customer id is not exists.\"\n}\n</code></pre>"},{"location":"ripple/apiref/billinggroup/","title":"BillingGroup","text":"<p>\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u306eAPI\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002</p>"},{"location":"ripple/apiref/billinggroup/#create","title":"Create","text":"<p>\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u306e\u4f5c\u6210</p> <p>Role actions</p> <ul> <li><code>ModifyBillingGroup</code> </li> </ul> <p>Request</p> <pre><code>POST /billinggroup HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n    \"billinggroup_id\":\"Billing1\",\n    \"billinggroup_name\":\"Billing1\",\n    \"company_name\":\"Billing1 company\",\n    \"phone\":\"03\u20101234\u20105678\",\n    \"postal\":\"12345\",\n    \"address\":\"123 street\",\n    \"billing_title\":\"billing title\",\n    \"personal\":\"personal name\",\n    \"remarks\":\"test automation\",\n    \"inv_aggregate\":false,\n    \"language\":\"ja\",\n    \"invoices\": {\n        \"aws\": {\n            \"calc_type\":\"account\",\n            \"currency\":\"jpy\",\n            \"discount_calc_logic\":\"usageamount\",\n            \"discount_rate\":0,\n            \"discount_target_usage\":\"cloudpaywithfee\",\n            \"substitution_fee\":\"percent\",\n            \"substitution_fee_calc_target\":\"nondiscount\",\n            \"substitution_fee_calc_type\":\"allsum\",\n            \"substitution_fee_target_usage\":\"cloudpaywithfee\",\n            \"substitution_fix\":0,\n            \"substitution_rate\":0,\n            \"support_amount_target\":\"allusage\",\n            \"support_fee\":\"fix\",\n            \"support_fee_calc_target\":\"nondiscount\",\n            \"support_fix\":0,\n            \"support_rate\":0,\n            \"tax_rate\":0\n        }\n  }\n}\n</code></pre> <p>{request body} description</p> Field Type Required Validation Description billinggroup_id string Yes - Billing group ID billinggroup_name string Yes - Billimg group name company_name string Yes - Company name phone string No - Tel postal string No - Postal address string No - Address billing_title string No - Invoice title personal string No - Personal name remarks string No - Memo inv_aggregate boolean Yes - Displaying invoice in bulk or by vendor project_id string No - Project id invoice_template_id string No - Invoice template id invoices [object] No - Invoice setting language string No \u30b5\u30dd\u30fc\u30c8: <code>ja</code>, <code>en</code> Display invoice language setting <p>invoices object description</p> Field Type Required Validation Description calc_type string Yes - account   - tag Invoice calculation type currency string Yes - jpy   - usd Currency discount_calc_logic string Yes - usageamount - discount_rate double Yes 0.00 ~ 1.00 - discount_target_usage string Yes - cloudpaywithfee   - cloudpayonly - substitution_fee string Yes - percent   - fix   - automatic   - usagetable - substitution_fee_calc_target string Yes - nondiscount   - discounted - substitution_fee_calc_type string Yes - allsum   - account - substitution_fee_target_usage string Yes - cloudpaywithfee   - cloudpayonly - substitution_fix double Yes 00 ~ 1000000 - substitution_rate double Yes 0.00 ~ 1.00 - support_amount_target string Yes - allusage - support_fee string Yes - fix   - percent   - aws_developer   - aws_business   - aws_enterprise - support_fee_calc_target string Yes - nondiscount   - discounted - support_fix double Yes 0.00 ~ 1000000 - support_rate double Yes 0.00 ~ 1.00 - tax_rate double Yes 0.00 ~ 0.10 Tax <p>Response</p> <pre><code>HTTP 200\n\n{\n    \"status\":\"success\",\n    \"company_id\":\"RomwoEjdjhws\",\n    \"billinggroup_id\":\"Billing1\"\n}\n</code></pre> <p>Python\u3067\u306e\u30b5\u30f3\u30d7\u30eb</p> <pre><code>import requests\nimport json\n\ndef get_token():\n    # Note: you can see details on:\n    #   https://labs.alphaus.cloud/docs/apiref/authentication/\n    # Assign generated values for client_id and client_secret\n    params={\n        \"grant_type\": \"client_credentials\",\n        \"client_id\": \"{client_id}\",\n        \"client_secret\": \"{client_secret}\",\n        \"scope\": \"openid\",\n    }\n    try:\n        response = requests.post(\n            url=\"https://login.alphaus.cloud/ripple/access_token\",\n            headers={\n            },\n            params=params,\n            files=params,\n        )\n    except requests.exceptions.RequestException:\n        print('HTTP Request failed')\n\n    r = response.json()\n    return r['access_token'], r[\"token_type\"]\n\ndef send_request(type, token):\n    # Authorization header\n    auth = type + \" \" + token\n    try:\n        response = requests.post(\n            url=\"https://api.alphaus.cloud/m/ripple/billinggroup\",\n            headers={\n                \"Content-Type\": \"application/json;\",\n                \"Authorization\": auth\n            },\n            data=json.dumps({\n                \"display_cost\": \"true_unblended_cost\",\n                \"phone\": None,\n                \"billinggroup_id\": \"BG-SAMPLE-01\",\n                \"billinggroup_name\": \"BG-SAMPLE-01\",\n                \"inv_aggregate\": True,\n                \"personal\": None,\n                \"exchange_rate_type\": None,\n                \"company_name\": \"BG-SAMPLE-01\",\n                \"postal\": None,\n                \"address\": None,\n                \"billing_title\": None,\n                \"remarks\": None\n            })\n        )\n        print('Response HTTP Status Code: {status_code}'.format(\n            status_code=response.status_code))\n        print('Response HTTP Response Body: {content}'.format(\n            content=response.content))\n    except requests.exceptions.RequestException:\n        print('HTTP Request failed')\n\naccess_token, token_type = get_token()\nsend_request(token_type, access_token)\n</code></pre>"},{"location":"ripple/apiref/billinggroup/#list","title":"List","text":"<p>\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u30ea\u30b9\u30c8\u306e\u53d6\u5f97</p> <p>Role actions</p> <ul> <li><code>ReadBillingGroup</code> </li> <li><code>ModifyBillingGroup</code> </li> </ul> <p>Request</p> <pre><code>GET /billinggroup HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>Response</p> <pre><code>HTTP 200\n\n[\n    {\n    \"company_id\":\"RomwoEjdjhws\",\n    \"billinggroup_id\":\"Billing1\",\n    \"billinggroup_name\":\"Billing1\",\n    \"name\":\"Billing1 Company\",\n    \"invoices\":{\n        \"aws\": {\n            \"calc_type\":\"account\",\n            \"currency\":\"jpy\",\n            \"discount_calc_logic\":\"usageamount\",\n            \"discount_rate\":0,\n            \"discount_target_usage\":\"cloudpaywithfee\",\n            \"substitution_fee\":\"percent\",\n            \"substitution_fee_calc_target\":\"nondiscount\",\n            \"substitution_fee_calc_type\":\"allsum\",\n            \"substitution_fee_target_usage\":\"cloudpaywithfee\",\n            \"substitution_fix\":0,\n            \"substitution_rate\":0,\n            \"support_amount_target\":\"allusage\",\n            \"support_fee\":\"fix\",\n            \"support_fee_calc_target\":\"nondiscount\",\n            \"support_fix\":0,\n            \"support_rate\":0,\n            \"tax_rate\":0\n        }\n        \"azure\": {\n            \"calc_type\":\"account\",\n            \"currency\":\"jpy\",\n            \"discount_calc_logic\":\"usageamount\",\n            \"discount_rate\":0,\n            \"discount_target_usage\":\"cloudpaywithfee\",\n            \"substitution_fee\":\"percent\",\n            \"substitution_fee_calc_target\":\"nondiscount\",\n            \"substitution_fee_calc_type\":\"allsum\",\n            \"substitution_fee_target_usage\":\"cloudpaywithfee\",\n            \"substitution_fix\":0,\n            \"substitution_rate\":0,\n            \"support_amount_target\":\"allusage\",\n            \"support_fee\":\"fix\",\n            \"support_fee_calc_target\":\"nondiscount\",\n            \"support_fix\":0,\n            \"support_rate\":0,\n            \"tax_rate\":0\n        }\n    },\n    \"contact\":\"personal name\",\n    \"address\":\"123 street\",\n    \"postal\":\"12345\",\n    \"phone\":\"03\u20101234\u20105678\",\n    \"title\":null,\n    \"req_generate\":null,\n    \"remarks\":null,\n    \"inv_aggregate\":null,\n    \"project_id\":null,\n    \"project_code\":null,\n    \"project_label\":null,\n    \"project_currency\":null,\n    \"language\":\"ja\",\n    \"qrcode\":false,\n    \"invoice_template_id\":null,\n    \"custom_fields\":null,\n    \"untagged_groups\":null,\n    \"account\":[],\n    \"tag\":[]\n    },\n    ...\n]\n</code></pre>"},{"location":"ripple/apiref/billinggroup/#list-details","title":"List details","text":"<p>\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u8a73\u7d30\u306e\u53d6\u5f97</p> <p>Role actions</p> <ul> <li><code>ReadBillingGroup</code> </li> <li><code>ModifyBillingGroup</code> </li> </ul> <p>Request</p> <pre><code>GET /billinggroup/{id}/resource HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{id}</code>\u306f\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u5185\u90e8ID<code>{company_id}</code>\u3067\u3059</p> <p>Response</p> <pre><code>HTTP 200\n\n{\n    \"company_id\":\"RomwoEjdjhws\",\n    \"billinggroup_id\":\"Billing1\",\n    \"billinggroup_name\":\"Billing1\",\n    \"name\":\"Billing1 Company\",\n    \"invoices\":{\n        \"aws\": {\n            \"calc_type\":\"account\",\n            \"currency\":\"jpy\",\n            \"discount_calc_logic\":\"usageamount\",\n            \"discount_rate\":0,\n            \"discount_target_usage\":\"cloudpaywithfee\",\n            \"substitution_fee\":\"percent\",\n            \"substitution_fee_calc_target\":\"nondiscount\",\n            \"substitution_fee_calc_type\":\"allsum\",\n            \"substitution_fee_target_usage\":\"cloudpaywithfee\",\n            \"substitution_fix\":0,\n            \"substitution_rate\":0,\n            \"support_amount_target\":\"allusage\",\n            \"support_fee\":\"fix\",\n            \"support_fee_calc_target\":\"nondiscount\",\n            \"support_fix\":0,\n            \"support_rate\":0,\n            \"tax_rate\":0\n        }\n        \"azure\": {\n            \"calc_type\":\"account\",\n            \"currency\":\"jpy\",\n            \"discount_calc_logic\":\"usageamount\",\n            \"discount_rate\":0,\n            \"discount_target_usage\":\"cloudpaywithfee\",\n            \"substitution_fee\":\"percent\",\n            \"substitution_fee_calc_target\":\"nondiscount\",\n            \"substitution_fee_calc_type\":\"allsum\",\n            \"substitution_fee_target_usage\":\"cloudpaywithfee\",\n            \"substitution_fix\":0,\n            \"substitution_rate\":0,\n            \"support_amount_target\":\"allusage\",\n            \"support_fee\":\"fix\",\n            \"support_fee_calc_target\":\"nondiscount\",\n            \"support_fix\":0,\n            \"support_rate\":0,\n            \"tax_rate\":0\n        }\n    },\n    \"contact\":\"personal name\",\n    \"address\":\"123 street\",\n    \"postal\":\"12345\",\n    \"phone\":\"03\u20101234\u20105678\",\n    \"title\":null,\n    \"req_generate\":null,\n    \"remarks\":null,\n    \"inv_aggregate\":null,\n    \"project_id\":null,\n    \"project_code\":null,\n    \"project_label\":null,\n    \"project_currency\":null,\n    \"language\":\"ja\",\n    \"qrcode\":false,\n    \"invoice_template_id\":null,\n    \"custom_fields\":null,\n    \"untagged_groups\":null,\n    \"account\":[],\n    \"tag\":[]\n}\n</code></pre>"},{"location":"ripple/apiref/billinggroup/#update","title":"Update","text":"<p>\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u60c5\u5831\u306e\u66f4\u65b0</p> <p>Role actions</p> <ul> <li><code>ModifyBillingGroup</code> </li> </ul> <p>Request</p> <pre><code>POST /billinggroup/{id} HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n    \"billinggroup_id\":\"Billing1\",\n    \"billinggroup_name\":\"Billing1\",\n    \"company_name\":\"Billing1 Company\",\n    \"phone\":\"03-123-4567\",\n    \"postal\":\"1243\",\n    \"address\":\"updateed address\",\n    \"billing_title\":null,\n    \"personal\":\"Personal name\",\n    \"remarks\":\"Some remarks data\",\n    \"inv_aggregate\":false,\n    \"project_id\":\"{created_project_id}\",\n    \"language\": \"ja\"\n}\n</code></pre> Field Type Required Validation Description billinggroup_id string Yes - Billing group ID billinggroup_name string Yes \u9577\u3055 1 ~ 100 Billing group Name company_name string Yes \u9577\u3055 1 ~ 100 Company name phone string No \u9577\u3055 12 ~ 16 Tel postal string No \u9577\u3055 4 ~ 10 Postal address string No \u9577\u3055 1 ~ 100 Address billing_title string No \u9577\u3055 1 ~ 100 Invoice title personal string No \u9577\u3055 1 ~ 100 Personal name remarks string No \u9577\u3055 1 ~ 100 Memo inv_aggregate boolean No Displaying invoice in bulk or by vendor project_id string No Project id language string No \u30b5\u30dd\u30fc\u30c8: <code>ja</code>, <code>en</code> Display invoice language setting <p>Response</p> <pre><code>HTTP 200\n\n{\"status\":\"success\"}\n</code></pre>"},{"location":"ripple/apiref/billinggroup/#update-invoice-setting","title":"Update invoice setting","text":"<p>\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u8acb\u6c42\u66f8\u8a2d\u5b9a\u306e\u66f4\u65b0</p> <p>Role actions</p> <ul> <li><code>ModifyBillingGroup</code> </li> </ul> <p>Request</p> <pre><code>POST /billinggroup/{id}/invoices HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n  \"invoices\": {\n    \"calc_type\":\"account\",\n    \"currency\":\"jpy\",\n    \"discount_calc_logic\":\"usageamount\",\n    \"discount_rate\":0,\n    \"discount_target_usage\":\"cloudpaywithfee\",\n    \"substitution_fee\":\"percent\",\n    \"substitution_fee_calc_target\":\"nondiscount\",\n    \"substitution_fee_calc_type\":\"allsum\",\n    \"substitution_fee_target_usage\":\"cloudpaywithfee\",\n    \"substitution_fix\":0,\n    \"substitution_rate\":0,\n    \"support_amount_target\":\"allusage\",\n    \"support_fee\":\"fix\",\n    \"support_fee_calc_target\":\"nondiscount\",\n    \"support_fix\":0,\n    \"support_rate\":0,\n    \"tax_rate\":0.10\n  },\n  \"vendor\":\"{vendor}\"\n}\n</code></pre> Field Type Required Validation Description calc_type string Yes account,tag \u8a08\u7b97\u30bf\u30a4\u30d7 currency string Yes jpy,usd \u901a\u8ca8 discount_calc_logic string Yes usageamount,allamount \u5024\u5f15\u304d\u5bfe\u8c61 discount_rate double Yes 0 ~ 1 \u5024\u5f15\u7387 discount_target_usage string Yes cloudpayonly ,cloudpaywithfee \u5024\u5f15\u304d\u8a08\u7b97\u65b9\u6cd5 substitution_fee string Yes percent, fix, automatic, usagetable \u4ee3\u884c\u624b\u6570\u6599\u8acb\u6c42\u65b9\u6cd5 substitution_fee_calc_target string Yes cloudpayonly, cloudpaywithfee \u4ee3\u884c\u624b\u6570\u6599\u8a08\u7b97\u5bfe\u8c61 substitution_fee_calc_type string Yes allsum, account \u8acb\u6c42\u4ee3\u884c\u30b5\u30fc\u30d3\u30b9\u8a08\u7b97\u65b9\u6cd5 substitution_fee_target_usage string Yes nondiscount, discounted \u8acb\u6c42\u4ee3\u884c\u624b\u6570\u6599\u5bfe\u8c61 substitution_fix double Yes 0 ~ 1,000,000 \u4ee3\u884c\u624b\u6570\u6599 \u56fa\u5b9a substitution_rate double Yes 0 ~ 1 \u4ee3\u884c\u624b\u6570\u6599 (%) support_amount_target string Yes allusage, cloudpayonlywithfee \u8868\u793a\u306a\u3057 support_fee string Yes - aws percent, aws_developer, aws_business, aws_enterprise, fix   - azure percent, fix \u30b5\u30dd\u30fc\u30c8\u6599\u8acb\u6c42\u65b9\u6cd5 support_fee_calc_target string Yes cloudpayonly, cloudpaywithfee \u30b5\u30dd\u30fc\u30c8\u6599\u8a08\u7b97\u5bfe\u8c61 support_fix double Yes 0 ~ 1,000,000 \u30b5\u30dd\u30fc\u30c8\u6599 \u56fa\u5b9a support_rate double Yes 0 ~ 1 \u30b5\u30dd\u30fc\u30c8\u6599 % tax_rate double Yes 0 ~ 0.08 \u6d88\u8cbb\u7a0e\u7387 % <p>Response</p> <pre><code>HTTP 200\n\n{\"status\":\"success\"}\n</code></pre>"},{"location":"ripple/apiref/billinggroup/#update-free-format","title":"Update free format","text":"<p>\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u305d\u306e\u4ed6\u8cbb\u7528\u306e\u8ffd\u52a0\u30fb\u66f4\u65b0</p> <p>Role actions</p> <ul> <li><code>ModifyBillingGroup</code> </li> </ul> <p>Request</p> <pre><code>POST /billinggroup/{id}/freeformat/{vendor} HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{id}</code>\u306f\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u5185\u90e8ID<code>{company_id}</code>\u3067\u3059\u3002</p> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n    \"additional_items\":[\n    {\n        \"enabled\":true,\n        \"label\":\"testlabel\",\n        \"unit_cost\":1,\n        \"quantity\":10000,\n        \"total\":10000\n    }\n]\n}\n</code></pre> <p>additional_items object description</p> Field Type Required Validation Description enabled boolean Yes - \u6709\u52b9\u3001\u7121\u52b9 label string Yes \u9577\u3055 1 ~ 60 \u30bf\u30a4\u30c8\u30eb unit_cost double Yes - \u5358\u4fa1 quantity double Yes - \u6570\u91cf total double Yes - \u91d1\u984d <p>Response</p> <pre><code>HTTP 200\n\n{\"status\":\"success\"}\n</code></pre>"},{"location":"ripple/apiref/billinggroup/#delete-free-format","title":"Delete free format","text":"<p>\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u305d\u306e\u4ed6\u8cbb\u7528\u306e\u524a\u9664</p> <p>Role actions</p> <ul> <li><code>ModifyBillingGroup</code> </li> </ul> <p>Request</p> <pre><code>DELETE /billinggroup/{id}/freeformat/{vendor} HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{id}</code>\u306f\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u5185\u90e8ID<code>{company_id}</code>\u3067\u3059\u3002</p> <p>\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u306b\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u305d\u306e\u4ed6\u8cbb\u7528\u3092\u5168\u3066\u524a\u9664\u3057\u307e\u3059\u3002</p> <p>Response</p> <pre><code>HTTP 200\n\n{\"status\":\"success\"}\n</code></pre>"},{"location":"ripple/apiref/billinggroup/#update-invoice-template","title":"Update Invoice Template","text":"<p>\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u8acb\u6c42\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u66f4\u65b0</p> <p>Role actions</p> <ul> <li><code>ModifyBillingGroup</code> </li> </ul> <p>Request</p> <pre><code>POST /billinggroup/{id}/invoicetemplate HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{id}</code>\u306f\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u5185\u90e8ID<code>{company_id}</code>\u3067\u3059</p> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n    \"invoice_template_id\": \"abcdefg\"\n}\n</code></pre> <p>Response</p> <pre><code>HTTP 200\n\n{\"status\":\"success\"}\n</code></pre>"},{"location":"ripple/apiref/billinggroup/#delete","title":"Delete","text":"<p>\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u306e\u524a\u9664</p> <p>Role actions</p> <ul> <li><code>ModifyBillingGroup</code> </li> </ul> <p>Request</p> <pre><code>DELETE /billinggroup/{id} HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>Response</p> <pre><code>HTTP 200\n\n{\"status\":\"success\"}\n</code></pre>"},{"location":"ripple/apiref/exchangerate/","title":"ExchangeRate","text":"<p>\u70ba\u66ff\u30ec\u30fc\u30c8\u306eAPI\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002</p>"},{"location":"ripple/apiref/exchangerate/#set-exchange-rate-per-month","title":"Set exchange rate per month","text":"<p>\u6708\u3054\u3068\u306e\u70ba\u66ff\u30ec\u30fc\u30c8\u306e\u66f4\u65b0</p> <p>Role actions</p> <ul> <li><code>ModifySettings</code></li> </ul> <p>Request</p> <pre><code>POST /user/exchange HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n    \"exchange_rate\":\n        {\n            \"rate\":110,\n            \"month\":\"2020-01\"\n        }\n}\n</code></pre> <p>exchange_rate object description</p> Field Type Required Validation Description rate double Yes - \u70ba\u66ff\u30ec\u30fc\u30c8 month string Yes - \u5bfe\u8c61\u6708 <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\": \"success\"\n}\n</code></pre>"},{"location":"ripple/apiref/exchangerate/#list-exchange-rate","title":"List exchange rate","text":"<p>\u6708\u3054\u3068\u306e\u70ba\u66ff\u30ec\u30fc\u30c8\u306e\u53d6\u5f97\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8<code>get:/user</code> \u30ec\u30b9\u30dd\u30f3\u30b9<code>{exchange_rate}</code>\u304b\u3089\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ripple/apiref/exchangerate/#list-invoice-id-exchange-rate-per-month","title":"List invoice id exchange rate per month","text":"<p>\u6708\u3054\u3068\u306eInvoiceID\u70ba\u66ff\u30ec\u30fc\u30c8\u306e\u53d6\u5f97</p> <p>Role actions</p> <ul> <li><code>ModifySettings</code></li> <li><code>ReadSettings</code></li> </ul> <p>Request</p> <pre><code>GET /invoiceid/exchangerate/{vendor}/{month} HTTP1.1\nAuthorization: Bearer {token}\n\n{request body}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01 \u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{vendor}</code>\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30f3\u30c0\u30fc: <code>aws</code>,<code>azure</code></p> <p>Response</p> <pre><code>HTTP 200\n\n[\n  {\n    \"invoice_id\":\"738676530\",\n    \"account_id\":\"128347567789\",\n    \"exchange_rate\":107.302\n  },\n  {\n    \"invoice_id\":\"123656789\",\n    \"account_id\":\"987655467321\",\n    \"exchange_rate\": null\n  }\n]\n</code></pre>"},{"location":"ripple/apiref/exchangerate/#set-invoice-id-exchange-rate-per-month","title":"Set invoice id exchange rate per month","text":"<p>\u6708\u3054\u3068\u306eInvoiceID\u70ba\u66ff\u30ec\u30fc\u30c8\u306e\u8a2d\u5b9a</p> <p>Role actions</p> <ul> <li><code>ModifySettings</code></li> </ul> <p>Request</p> <pre><code>POST /invoiceid/exchangerate/{vendor}/{month} HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01 \u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{vendor}</code>\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30f3\u30c0\u30fc: <code>aws</code>,<code>azure</code></p> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n  \"settings\": [\n    {\n      \"account_id\":\"987655467321\",\n      \"invoice_id\":\"123656789\",\n      \"exchange_rate\":101.07\n    }\n  ]\n}\n</code></pre> Field Type Required Validation Description account_id string Yes - \u652f\u6255\u3044\u30a2\u30ab\u30a6\u30f3\u30c8 invoice_id string Yes - \u652f\u6255\u3044\u30a2\u30ab\u30a6\u30f3\u30c8\u306eInvoiceID exchange_rate double Yes - \u70ba\u66ff\u30ec\u30fc\u30c8 <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\":\"success\",\n  \"error_data\": []\n}\n</code></pre>"},{"location":"ripple/apiref/exchangerate/#list-payer-account-id-exchange-rate-per-month","title":"List payer account id exchange rate per month","text":"<p>\u6708\u3054\u3068\u306ePayerAccountID\u70ba\u66ff\u30ec\u30fc\u30c8\u306e\u53d6\u5f97</p> <p>Role actions</p> <ul> <li><code>ModifySettings</code></li> <li><code>ReadSettings</code></li> </ul> <p>Request</p> <pre><code>GET /payer/exchange_rate/{month} HTTP1.1\nAuthorization: Bearer {token}\n\n{request body}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01</p> <p>Response</p> <pre><code>HTTP 200\n\n[\n  {\n    \"id\":\"128347567789\",\n    \"vendor\":\"aws\",\n    \"name\":\"Payer Account\",\n    \"exchange_rate\":109.154\n  },\n  {\n    \"id\":\"111345678911\",\n    \"vendor\":\"aws\",\n    \"name\":\"Payer Account2\",\n    \"exchange_rate\":108.02\n  }\n]\n</code></pre>"},{"location":"ripple/apiref/exchangerate/#set-payer-account-id-exchange-rate-per-month","title":"Set payer account id exchange rate per month","text":"<p>\u6708\u3054\u3068\u306ePayerAccountID\u70ba\u66ff\u30ec\u30fc\u30c8\u306e\u8a2d\u5b9a</p> <p>Role actions</p> <ul> <li><code>ModifySettings</code></li> </ul> <p>Request</p> <pre><code>POST /payer/exchange_rate/{month} HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01</p> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n  \"settings\": [\n    {\n      \"vendor\":\"aws\",\n      \"account_id\":\"128347567789\",\n      \"exchange_rate\":109.154\n    }\n  ]\n}\n</code></pre> Field Type Required Validation Description vendor string Yes <code>aws</code>,<code>azure</code> \u30d9\u30f3\u30c0\u30fc account_id string Yes - \u652f\u6255\u3044\u30a2\u30ab\u30a6\u30f3\u30c8 exchange_rate double Yes - \u70ba\u66ff\u30ec\u30fc\u30c8 <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\":\"success\"\n}\n</code></pre>"},{"location":"ripple/apiref/exchangerate/#set-invoice-exchange-rate-per-month","title":"Set invoice exchange rate per month","text":"<p>\u6708\u3054\u3068\u306e\u8acb\u6c42\u66f8\u8a2d\u5b9a\u306e\u70ba\u66ff\u30ec\u30fc\u30c8\u306e\u66f4\u65b0</p> <p>Role actions</p> <ul> <li><code>ModifyInvoice</code></li> </ul> <p>Request</p> <pre><code>POST /invoices/exchangerate/{month} HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01</p> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n  \"vendor\":\"aws\",\n  \"billing_groups\": [\n    \"abcdfeg\",\n    \"hijklmn\"\n  ],\n  \"exchange_rate\":105.076\n}\n</code></pre> Field Type Required Validation Description vendor string Yes \u30b5\u30dd\u30fc\u30c8: <code>aws</code>, <code>azure</code> \u30d9\u30f3\u30c0\u30fc billing_groups object Yes - \u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u4e00\u89a7 exchange_rate double Yes - \u70ba\u66ff\u30ec\u30fc\u30c8 <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\":\"success\"\n}\n</code></pre>"},{"location":"ripple/apiref/export/","title":"Export","text":"<p>CSV\u51fa\u529b\u306b\u95a2\u3059\u308bAPI\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002</p>"},{"location":"ripple/apiref/export/#get-invoice-csvaccount","title":"Get invoice csv(account)","text":"<p>\u8acb\u6c42\u66f8CSV(account)\u306e\u51fa\u529b</p> <p>Role actions</p> <ul> <li><code>ReadInvoice</code></li> <li><code>ModifyInvoice</code></li> </ul> <p>Request</p> <pre><code>POST /export/csv/invoice_account/{month} HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01</p> <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\":\"success\",\n  \"url\":\"csv link\"\n}\n</code></pre> <p>CSV\u306e\u5185\u5bb9</p> Field Description BillingGroupID \u8acb\u6c42\u30b0\u30eb\u30fc\u30d7ID BillingGroupName \u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u540d CompanyName \u4f1a\u793e\u540d Vendor \u30d9\u30f3\u30c0\u30fc CustomerID \u9867\u5ba2ID CustomerName \u9867\u5ba2\u540d ServiceType \u30b5\u30fc\u30d3\u30b9\u30bf\u30a4\u30d7 ServiceName \u30b5\u30fc\u30d3\u30b9\u540d Charge \u91d1\u984d DiscountCharge \u5272\u5f15\u5f8c\u984d DiscountCharge - TaxFree \u5272\u5f15\u5f8c\u984d - \u514d\u7a0e\u91d1\u984d FreeFormat \u30d5\u30ea\u30fc\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u91d1\u984d CustomService \u8acb\u6c42\u30b5\u30fc\u30d3\u30b9\u91d1\u984d Tax \u6d88\u8cbb\u7a0e Total \u632f\u8fbc\u91d1\u984d"},{"location":"ripple/apiref/export/#get-invoice-csvtag","title":"Get invoice csv(tag)","text":"<p>\u8acb\u6c42\u66f8CSV(tag)\u306e\u51fa\u529b</p> <p>Role actions</p> <ul> <li><code>ReadInvoice</code></li> <li><code>ModifyInvoice</code></li> </ul> <p>Request</p> <pre><code>POST /export/csv/invoice_tag/{month} HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01</p> <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\":\"success\",\n  \"url\":\"csv link\"\n}\n</code></pre> <p>CSV\u306e\u5185\u5bb9</p> Field Description BillingGroupID \u8acb\u6c42\u30b0\u30eb\u30fc\u30d7ID BillingGroupName \u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u540d CompanyName \u4f1a\u793e\u540d Vendor \u30d9\u30f3\u30c0\u30fc Tag \u30bf\u30b0\u8a73\u7d30 ServiceType \u30b5\u30fc\u30d3\u30b9\u30bf\u30a4\u30d7 ServiceName \u30b5\u30fc\u30d3\u30b9\u540d Charge \u91d1\u984d DiscountCharge \u5272\u5f15\u5f8c\u984d DiscountCharge - TaxFree \u5272\u5f15\u5f8c\u984d - \u514d\u7a0e\u91d1\u984d FreeFormat \u30d5\u30ea\u30fc\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u91d1\u984d CustomService \u8acb\u6c42\u30b5\u30fc\u30d3\u30b9\u91d1\u984d Tax \u6d88\u8cbb\u7a0e Total \u632f\u8fbc\u91d1\u984d"},{"location":"ripple/apiref/export/#get-billing-group-csv","title":"Get billing group csv","text":"<p>\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7CSV\u306e\u51fa\u529b</p> <p>Role actions</p> <ul> <li><code>ReadBillingGroup</code></li> <li><code>ModifyBillingGroup</code></li> </ul> <p>Request</p> <pre><code>POST /exportcsv/billing-group HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n  \"redo\":false\n}\n</code></pre> Field Type Required Validation Description redo boolean Yes - true:\u4f5c\u6210\u6e08\u307f\u306e\u306eCSV\u3092\u51fa\u529b\u3002CSV\u304c\u306a\u3044\u5834\u5408\u306fCSV\u3092\u751f\u6210\u3059\u308b\u3002 false:\u65b0\u3057\u3044CSV\u3092\u751f\u6210\u3057\u3066\u51fa\u529b\u3002 <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\":\"success\",\n  \"path\":\"csv link\"\n}\n</code></pre> <p>CSV\u306e\u5185\u5bb9</p> Field Description \u8acb\u6c42\u30b0\u30eb\u30fc\u30d7ID - \u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u540d - \u4f01\u696d\u540d - \u90f5\u4fbf\u756a\u53f7 - \u4f4f\u6240 - \u96fb\u8a71\u756a\u53f7 - \u5b9b\u540d - \u8acb\u6c42\u66f8\u30bf\u30a4\u30c8\u30eb - \u30b3\u30b9\u30c8 - \u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9 -"},{"location":"ripple/apiref/export/#get-billing-group-setting-csv","title":"Get billing group setting csv","text":"<p>\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u8a2d\u5b9aCSV\u306e\u51fa\u529b</p> <p>Role actions</p> <ul> <li><code>ReadBillingGroup</code></li> <li><code>ModifyBillingGroup</code></li> </ul> <p>Request</p> <pre><code>POST /exportcsv/billing-group-setting HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n  \"redo\":false\n}\n</code></pre> Field Type Required Validation Description redo boolean Yes - true:\u4f5c\u6210\u6e08\u307f\u306e\u306eCSV\u3092\u51fa\u529b\u3002CSV\u304c\u306a\u3044\u5834\u5408\u306fCSV\u3092\u751f\u6210\u3059\u308b\u3002 false:\u65b0\u3057\u3044CSV\u3092\u751f\u6210\u3057\u3066\u51fa\u529b\u3002 <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\":\"success\",\n  \"path\":\"csv link\"\n}\n</code></pre> <p>CSV\u306e\u5185\u5bb9</p> Field Description \u8acb\u6c42\u30b0\u30eb\u30fc\u30d7ID - \u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u540d - \u30d9\u30f3\u30c0\u30fc - \u5024\u5f15\u7387 - \u6d88\u8cbb\u7a0e - AWS\u30b5\u30dd\u30fc\u30c8\u8acb\u6c42\u65b9\u6cd5 - AWS\u30b5\u30dd\u30fc\u30c8\uff08\u4e00\u5f8b%\u306e\u5834\u5408\uff09 - AWS\u30b5\u30dd\u30fc\u30c8\uff08\u56fa\u5b9a\uff09 - \u4ee3\u884c\u624b\u6570\u6599\u8acb\u6c42\u65b9\u6cd5 - \u4ee3\u884c\u624b\u6570\u6599\uff08\uff05\uff09 - \u4ee3\u884c\u624b\u6570\u6599\uff08\u56fa\u5b9a\uff09 - \u96c6\u8a08\u30bf\u30a4\u30d7 - \u5024\u5f15\u304d\u5bfe\u8c61 - \u8acb\u6c42\u4ee3\u884c\u30b5\u30fc\u30d3\u30b9\u8a08\u7b97\u5bfe\u8c61 -"},{"location":"ripple/apiref/invoice/","title":"Invoice","text":"<p>\u8acb\u6c42\u95a2\u9023\u306eAPI\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002</p>"},{"location":"ripple/apiref/invoice/#get-account-total-cost-list","title":"Get Account total cost list","text":"<p>\u30a2\u30ab\u30a6\u30f3\u30c8\u5408\u8a08\u4e00\u89a7\u306e\u53d6\u5f97</p> <p>Role actions</p> <ul> <li><code>ReadInvoice</code></li> <li><code>ModifyInvoice</code></li> </ul> <p>Request</p> <pre><code>GET /invoice/{month}/details HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01</p> <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"accounts\": [\n    {\n      \"customer_id\": \"012345678987\",\n      \"customer_name\": \"customer 1\",\n      \"total\": 431,\n      \"total_exchanged\": 43100,\n      \"adjustment_entries\": [\n        {\n          \"name\": \"upfront - Sign up charge for subscription: 000000000, planId: 000000000\",\n          \"amount\": 2,\n          \"amount_exchanged\": 200\n        }\n      ]\n    },\n    {\n      \"customer_id\": \"123456789875\",\n      \"customer_name\": \"customer 2\",\n      \"total\": 6,\n      \"total_exchanged\": 600,\n      \"adjustment_entries\": [\n        {\n          \"name\": \"upfront - one-time fee for 1 year All Upfront ap-southeast-1 EC2 Savings Plan ID:0000000000 \",\n          \"amount\": 1,\n          \"amount_exchanged\": 100\n        }\n      ]\n    }\n  ],\n  \"billing_groups\": [\n    {\n      \"billing_group_id\": \"bgid1\",\n      \"billing_group_name\": \"bg1\",\n      \"vendor\": \"aws\",\n      \"tax_excluded_amount\": 0,\n      \"tax_excluded_amount_exchanged\": 0,\n      \"tax\": 0,\n      \"total_amount_exchanged\": 0\n    },\n    {\n      \"billing_group_id\": \"bgid2\",\n      \"billing_group_name\": \"bg2\",\n      \"vendor\": \"aws\",\n      \"tax_excluded_amount\": 437,\n      \"tax_excluded_amount_exchanged\": 43700,\n      \"tax\": 4370,\n      \"total_amount_exchanged\": 48070\n    }\n  ]\n}\n</code></pre> <p>accounts\u306e\u8a73\u7d30</p> Field Type Description customer_id string \u9867\u5ba2ID customer_name string \u9867\u5ba2\u540d total double $\u91d1\u984d(\u7a0e\u629c) total_exchanged double \u63db\u7b97\u5f8c\u91d1\u984d(\u7a0e\u629c) adjustment_entries list \u8acb\u6c42\u66f8\u306b\u542b\u3093\u3060\u518d\u8a08\u7b97\u8acb\u6c42\u30c7\u30fc\u30bf\u306e\u4e00\u89a7 <p>billing_groups\u306e\u8a73\u7d30</p> Field Type Description billing_group_id string \u8acb\u6c42\u30b0\u30eb\u30fc\u30d7ID billing_group_name string \u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u540d vendor string \u30d9\u30f3\u30c0\u30fc tax_excluded_amount double $\u5408\u8a08\u91d1\u984d(\u7a0e\u629c) tax_excluded_amount_exchanged double $\u63db\u7b97\u5f8c\u5408\u8a08\u91d1\u984d(\u7a0e\u629c) tax double \u6d88\u8cbb\u7a0e\u91d1\u984d total_amount_exchanged double \u5408\u8a08\u8acb\u6c42\u91d1\u984d"},{"location":"ripple/apiref/invoice/#get-invoice-list","title":"Get Invoice list","text":"<p>\u8acb\u6c42\u66f8\u4e00\u89a7\u306e\u53d6\u5f97</p> <p>Role actions</p> <ul> <li><code>ReadInvoice</code></li> <li><code>ModifyInvoice</code></li> </ul> <p>Request</p> <pre><code>GET /invoices/{month} HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01</p> <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"total\": {\n    \"stock\":108850,\n    \"sales\":108850,\n    \"azure_stock\":0,\n    \"azure_sales\":0\n  },\n  \"billinggroup\": [\n    {\n      \"company_id\":\"company1\",\n      \"name\":\"company1\",\n      \"billinggroup_id\":\"billinggroup1\",\n      \"billinggroup_name\":\"billinggroup1\",\n      \"project_id\":null,\n      \"project_code\":null,\n      \"project_label\":null,\n      \"project_currency\":null,\n      \"month\":\"2020-12\",\n      \"invoice_no\":\"2020-12billing1\",\n      \"created_data\": {\n        \"aws\": {\n          \"invoice_no\":\"2020-12billing1\",\n          \"calc_type\":\"account\",\n          \"currency\":\"jpy\",\n          \"discount_rate\":0.02,\n          \"discount_target_usage\":\"cloudpaywithfee\",\n          \"discount_calc_logic\":\"usageamount\",\n          \"tax_rate\":0.10,\n          \"support_fee\":\"fix\",\n          \"support_rate\":0,\n          \"support_fee_calc_target\":\"nondiscount\",\n          \"support_fix\": 0,\n          \"substitution_fee\":\"percent\",\n          \"substitution_rate\":0,\n          \"substitution_fix\":0,\n          \"substitution_fee_calc_target\":\"nondiscount\",\n          \"substitution_fee_target_usage\":\"cloudpaywithfee\",\n          \"substitution_fee_calc_type\":\"allsum\",\n          \"exchange_rate\":102.45,\n          \"memo\":null,\n          \"additional_items\": []\n        },\n        \"azure\":null\n      },\n      \"saved_data\": {\n        \"aws\": {\n          \"invoice_no\":null,\n          \"calc_type\":\"account\",\n          \"currency\":\"jpy\",\n          \"discount_rate\":0.02,\n          \"discount_target_usage\":\"cloudpaywithfee\",\n          \"discount_calc_logic\":\"usageamount\",\n          \"tax_rate\":0.10,\n          \"support_fee\":\"fix\",\n          \"support_rate\":0,\n          \"support_fee_calc_target\":\"nondiscount\",\n          \"support_fix\":0,\n          \"substitution_fee\":\"percent\",\n          \"substitution_rate\":0,\n          \"substitution_fix\":0,\n          \"substitution_fee_calc_target\":\"nondiscount\",\n          \"substitution_fee_target_usage\":\"cloudpaywithfee\",\n          \"substitution_fee_calc_type\":\"allsum\",\n          \"exchange_rate\":102.45,\n          \"memo\":null,\n          \"additional_items\": []\n        },\n        \"azure\":null\n      },\n      \"default_data\": {\n        \"aws\": {\n          \"invoice_no\":null,\n          \"calc_type\":\"account\",\n          \"currency\":\"jpy\",\n          \"discount_rate\":0.02,\n          \"discount_target_usage\":\"cloudpaywithfee\",\n          \"discount_calc_logic\":\"usageamount\",\n          \"tax_rate\":0.10,\n          \"support_fee\":\"fix\",\n          \"support_rate\":0,\n          \"support_fee_calc_target\":\"nondiscount\",\n          \"support_fix\":0,\n          \"substitution_fee\":\"percent\",\n          \"substitution_rate\":0,\n          \"substitution_fix\":0,\n          \"substitution_fee_calc_target\":\"nondiscount\",\n          \"substitution_fee_target_usage\":\"cloudpaywithfee\",\n          \"substitution_fee_calc_type\":\"allsum\",\n          \"exchange_rate\":null,\n          \"memo\":null,\n          \"additional_items\": []\n        },\n        \"azure\": {\n          \"invoice_no\":null,\n          \"calc_type\":\"account\",\n          \"currency\":\"jpy\",\n          \"discount_rate\":0,\n          \"discount_target_usage\":\"cloudpaywithfee\",\n          \"discount_calc_logic\":\"usageamount\",\n          \"tax_rate\":0.10,\n          \"support_fee\":\"fix\",\n          \"support_rate\":0,\n          \"support_fee_calc_target\":\"nondiscount\",\n          \"support_fix\":0,\n          \"substitution_fee\":\"percent\",\n          \"substitution_rate\":0,\n          \"substitution_fix\":0,\n          \"substitution_fee_calc_target\":\"nondiscount\",\n          \"substitution_fee_target_usage\":\"cloudpaywithfee\",\n          \"substitution_fee_calc_type\":\"allsum\",\n          \"exchange_rate\":null,\n          \"memo\":null,\n          \"additional_items\": []\n        }\n      },\n      \"accounts\": [\n        {\n          \"account_id\":\"012345678912\",\n          \"customer_id\":\"012345678912\",\n          \"customer_name\":\"customer1\",\n          \"vendor\":\"aws\",\n          \"service_discount\":null\n        },\n        ...\n      ],\n      \"create_time\":\"2020-12-21T11:26:55+09:00\",\n      \"update_time\":null,\n      \"total\": {\n        \"aws\":108850,\n        \"azure\":0\n      },\n      \"language\":\"ja\"\n    },\n    ...\n  ]\n}\n</code></pre>"},{"location":"ripple/apiref/invoice/#_1","title":"\u8acb\u6c42\u66f8\u8a2d\u5b9a\u306e\u4fdd\u5b58","text":"<p>Role actions</p> <ul> <li><code>ModifyInvoice</code></li> </ul> <p>Request</p> <pre><code>PUT /invoices/save/{month} HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01</p> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n  \"settings\":[],\n  \"internal\":true\n}\n</code></pre> Field Type Required Validation Description settings _object_ Yes - \u8acb\u6c42\u66f8\u8a2d\u5b9a internal _boolean_ Yes - True: \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a2d\u5b9a\u3092\u8acb\u6c42\u66f8\u8a2d\u5b9a\u3068\u3057\u3066\u4e00\u62ec\u3067\u4fdd\u5b58\u3057\u307e\u3059\u3002 False: settings\u3092\u53c2\u7167\u3057\u307e\u3059\u3002 <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\": \"success\"\n}\n</code></pre>"},{"location":"ripple/apiref/invoice/#_2","title":"\u8acb\u6c42\u66f8\u70ba\u66ff\u30ec\u30fc\u30c8\u306e\u4fdd\u5b58","text":"<p>Role actions</p> <ul> <li><code>ModifyInvoice</code></li> </ul> <pre><code>PUT /invoices/exchangerate/{month} HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01</p> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n  \"vendor\":\"aws\",\n  \"billing_groups\":[\"company id value1\",\"company id value2\"...],\n  \"exchange_rate\":100\n}\n</code></pre> Field Type Required Validation Description vendor _string_ Yes \u30b5\u30dd\u30fc\u30c8: <code>aws</code>, <code>azure</code> \u30d9\u30f3\u30c0\u30fc billing_groups _object_ Yes - \u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u4e00\u89a7\u3002 company_id\u3092\u8a2d\u5b9a exchange_rate _double_ Yes - \u70ba\u66ff\u30ec\u30fc\u30c8 <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\": \"success\"\n}\n</code></pre>"},{"location":"ripple/apiref/invoice/#_3","title":"\u8acb\u6c42\u66f8\u306e\u4f5c\u6210","text":"<p>\u8acb\u6c42\u66f8\u306e\u4f5c\u6210\u3092\u884c\u3046\u524d\u306b\u4ee5\u4e0b\u306eAPI\u3067\u8acb\u6c42\u66f8\u306e\u8a2d\u5b9a\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>1. [<code>\u8acb\u6c42\u66f8\u8a2d\u5b9a\u306e\u4fdd\u5b58</code>]</p> <p>2. [<code>\u8acb\u6c42\u66f8\u70ba\u66ff\u30ec\u30fc\u30c8\u306e\u4fdd\u5b58</code>]</p> <p>Role actions</p> <ul> <li><code>ModifyInvoice</code></li> </ul> <pre><code>POST /invoices/calculation/{month} HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code>\u4f8b: 2020-01</p> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n  \"vendor\":\"aws\",\n  \"group\":[\"company id value1\",\"company id value2\"...],\n  \"bulk\":false\n}\n</code></pre> Field Type Required Validation Description vendor _string_ Yes \u30b5\u30dd\u30fc\u30c8: <code>aws</code>, <code>azure</code>, <code>gcp</code> \u30d9\u30f3\u30c0\u30fc group _object_ Yes - \u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u4e00\u89a7\u3002 company_id\u3092\u8a2d\u5b9a bulk _boolean_ Yes - <p>\u4e00\u62ec\u8a2d\u5b9a\u3002True:\u4e00\u62ec\u3067\u8acb\u6c42\u66f8\u3092\u4f5c\u6210\u3002 </p><p>False: group\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u306e\u8acb\u6c42\u66f8\u3092\u4f5c\u6210\u3002</p> <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\": \"success\"\n}\n</code></pre>"},{"location":"ripple/apiref/original-cost/","title":"OriginalCost","text":"<p>\u539f\u4fa1\u30c7\u30fc\u30bf\u306eAPI\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002</p>"},{"location":"ripple/apiref/original-cost/#set-exchange-rate-per-invoiceid","title":"Set exchange rate per InvoiceID","text":"<p>InvoiceID\u306e\u70ba\u66ff\u30ec\u30fc\u30c8\u8a2d\u5b9a</p> <p>Role actions</p> <ul> <li><code>ModifyOriginalCost</code></li> </ul> <p>Request</p> <pre><code>POST /invoiceid/:vendor/:month HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01 \u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{vendor}</code>\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30f3\u30c0\u30fc: <code>aws</code></p> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n  \"data\":[\n      {\n        \"invoice_id\":\"123456789\",\n        \"exchange_rate\":101.051\n      },\n      {\n        \"invoice_id\":\"468215697\",\n        \"exchange_rate\":100.02\n      }\n  ]\n}\n</code></pre> <p>request body description</p> Field Type Required Validation Description invoice_id string Yes - InvoiceID exchange_rate double Yes - \u767b\u9332\u3059\u308b\u70ba\u66ff\u30ec\u30fc\u30c8 <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\":\"success\"\n}\n</code></pre>"},{"location":"ripple/apiref/original-cost/#get-invoiceid-list","title":"Get InvoiceID list","text":"<p>InvoiceID\u306e\u53d6\u5f97</p> <p>Role actions</p> <ul> <li><code>ReadOriginalCost</code></li> <li><code>ModifyOriginalCost</code></li> </ul> <p>Request</p> <pre><code>GET /invoiceid/:vendor/:month HTTP1.1\nAuthorization: Bearer {token}\n\n{request body}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01 \u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{vendor}</code>\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30f3\u30c0\u30fc: <code>aws</code></p> <p>Response</p> <pre><code>HTTP 200\n\n[\n  {\n    \"invoice_id\":\"123456789\",\n    \"exchange_rate\":101.051\n  },\n  {\n    \"invoice_id\":\"468215697\",\n    \"exchange_rate\":100.02\n  }\n]\n</code></pre>"},{"location":"ripple/apiref/original-cost/#export-invoiceid-csv","title":"Export InvoiceID CSV","text":"<p>InvoiceID CSV\u306e\u51fa\u529b</p> <p>Role actions</p> <ul> <li><code>ModifyOriginalCost</code></li> </ul> <p>Request</p> <pre><code>POST /export/invoiceidcsv/:month HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01</p> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n  \"vendor\":\"aws\",\n  \"exchange\":true,\n  \"digit\":\"up\"\n}\n</code></pre> <p>request body description</p> Field Type Required Validation Description vendor string Yes \u30b5\u30dd\u30fc\u30c8: <code>aws</code> \u30d9\u30f3\u30c0\u30fc exchange boolean Yes - USD\u3067\u51fa\u529b\u307e\u305f\u306f\u70ba\u66ff\u5f8c(JPY)\u3092\u51fa\u529b digit double Yes \u30b5\u30dd\u30fc\u30c8: <code>up</code>,<code>down</code>,<code>rounding</code> \u5c0f\u6570\u70b9\u4e38\u3081\u8a2d\u5b9a <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\":\"success\",\n  \"url\":\"csv link\"\n}\n</code></pre>"},{"location":"ripple/apiref/project/","title":"Project","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eAPI\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002</p>"},{"location":"ripple/apiref/project/#create-project","title":"Create project","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210</p> <p>Role actions</p> <ul> <li><code>ModifyProject</code></li> </ul> <p>Request</p> <pre><code>POST /project HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n    \"project_code\":\"project 1\",\n    \"project_label\":\"project 1 description\",\n    \"project_currency\":\"jpy\"\n}\n</code></pre> <p>{request body} description</p> Field Type Required Validation Description project_code string Yes 1 ~ 40 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30b3\u30fc\u30c9 project_label string Yes 1 ~ 40 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30e9\u30d9\u30eb project_currency string Yes support:['jpy','usd'] \u8868\u793a\u901a\u8ca8 <p>Response</p> <pre><code>HTTP 200\n\n{\"status\":\"success\"}\n</code></pre>"},{"location":"ripple/apiref/project/#edit-project","title":"Edit project","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u66f4\u65b0</p> <p>Role actions</p> <ul> <li><code>ModifyProject</code></li> </ul> <p>Request</p> <pre><code>POST /project/{project_id} HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <pre><code>{\n    \"project_code\":\"project 1\",\n    \"project_label\":\"project 1 description\",\n    \"project_currency\":\"jpy\"\n}\n</code></pre> <p>{request body} description</p> Field Type Required Validation Description project_code string Yes 1 ~ 40 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30b3\u30fc\u30c9 project_label string Yes 1 ~ 40 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30e9\u30d9\u30eb project_currency string Yes support:['jpy','usd'] \u8868\u793a\u901a\u8ca8"},{"location":"ripple/apiref/project/#delete-project","title":"Delete project","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u524a\u9664</p> <p>Role actions</p> <ul> <li><code>ModifyProject</code></li> </ul> <p>Request</p> <pre><code>DELETE /project/{project_id} HTTP1.1\nAuthorization: Bearer {token}\n</code></pre>"},{"location":"ripple/apiref/project/#get-project-list","title":"Get project list","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4e00\u89a7\u306e\u53d6\u5f97</p> <p>Role actions</p> <ul> <li><code>ReadProject</code></li> <li><code>ModifyProject</code></li> </ul> <p>Request</p> <pre><code>GET /project HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>Response</p> <pre><code>HTTP 200\n\n[\n  {\n    \"project_id\": \"prj-ad413e7b2006f3746r790a\",\n    \"project_code\": \"\u30d7\u30ed\u30b8\u30a7\u30af\u30c81\",\n    \"project_label\": \"\u30d7\u30ed\u30b8\u30a7\u30af\u30c81\u306e\u30e9\u30d9\u30eb\",\n    \"project_currency\": \"jpy\"\n  },\n  {\n    \"project_id\": \"prj-fdf13fvf7vb61h0llr6519\",\n    \"project_code\": \"\u30d7\u30ed\u30b8\u30a7\u30af\u30c82\",\n    \"project_label\": \"\u30d7\u30ed\u30b8\u30a7\u30af\u30c82\u306e\u30e9\u30d9\u30eb\",\n    \"project_currency\": \"jpy\"\n  },...\n]\n</code></pre>"},{"location":"ripple/apiref/project/#get-project-list-per-month","title":"Get project list per month","text":"<p>\u6708\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30fc\u30bf\u306e\u53d6\u5f97</p> <p>Role actions</p> <ul> <li><code>ReadProject</code></li> <li><code>ModifyProject</code></li> </ul> <p>Request</p> <pre><code>GET /project/{month} HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01</p> <p>Response</p> <pre><code>HTTP 200\n\n[\n  {\n    \"project_id\": \"prj-ad413e7b2006f3746r790a\",\n    \"project_code\": \"\u30d7\u30ed\u30b8\u30a7\u30af\u30c81\",\n    \"project_label\": \"\u30d7\u30ed\u30b8\u30a7\u30af\u30c81\u306e\u30e9\u30d9\u30eb\",\n    \"project_currency\": \"jpy\",\n    \"amount\": {\n      \"aws\": {\n        \"profit\": 0,\n        \"profit_exchanged\": 0,\n        \"profit_exchanged_rate\": 0,\n        \"profit_rate\": 0,\n        \"sales\": 0,\n        \"sales_exchanged\": 0,\n        \"stock\": 0,\n        \"stock_exchanged\": 0\n      },\n      \"total\": {\n        \"profit\": 0,\n        \"profit_exchanged\": 0,\n        \"profit_exchanged_rate\": 0,\n        \"profit_rate\": 0,\n        \"sales\": 0,\n        \"sales_exchanged\": 0,\n        \"stock\": 0,\n        \"stock_exchanged\": 0\n      }\n    }\n  },...\n]\n</code></pre>"},{"location":"ripple/apiref/project/#export-project-list-per-month","title":"Export project list per month","text":"<p>\u6708\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30fc\u30bfCSV\u306e\u51fa\u529b</p> <p>Role actions</p> <ul> <li><code>ReadProject</code></li> <li><code>ModifyProject</code></li> </ul> <p>Request</p> <pre><code>GET /project/{month}/csv HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01</p> <p>Response</p> <pre><code>HTTP 200\n\n{\n    \"status\":\"success\",\n    \"data\":\"csv url\"\n}\n</code></pre>"},{"location":"ripple/apiref/recalculation/","title":"Recalculation","text":"<p>\u518d\u8a08\u7b97\u8acb\u6c42\u30c7\u30fc\u30bf\u306eAPI\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002</p>"},{"location":"ripple/apiref/recalculation/#get-recalculation-list","title":"Get recalculation list","text":"<p>\u518d\u8a08\u7b97\u8acb\u6c42\u30c7\u30fc\u30bf\u306e\u53d6\u5f97</p> <p>Role actions</p> <ul> <li><code>ReadBillingGroup</code></li> <li><code>ModifyBillingGroup</code></li> </ul> <p>Request</p> <pre><code>GET /billinggroup/recalculation/{month}?vendor={vendor} HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{month}</code>\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: <code>yyyy-mm</code> \u4f8b: 2020-01 \u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{vendor}</code>\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30f3\u30c0\u30fc: <code>aws</code>,<code>azure</code></p> <p>Response</p> <pre><code>HTTP 200\n\n[\n  {\n    \"customer_id\":\"012345678912\",\n    \"customer_name\":\"customer1\",\n    \"company_id\":\"company1\",\n    \"billinggroup_id\":\"billing1\",\n    \"billinggroup_name\":\"billing1\",\n    \"project_code\":null,\n    \"id\": \"recalculationid1\",\n    \"calc_type\":\"Fee\",\n    \"mobingi_type\":\"REGISTRAR\",\n    \"description\":\"[OP-n4GB] Renewal\",\n    \"product_name\":\"Amazon Registrar\",\n    \"account_id\":\"012345678912\",\n    \"currency_code\":\"USD\",\n    \"product_code\":\"AmazonRegistrar\",\n    \"unblended_cost\":\"90.0000000000\",\n    \"time_interval\":\"2020-05-27T15:00:00Z\\/2021-05-26T15:00:01Z\",\n    \"usage_start\":\"2020-05-27T15:00:00Z\",\n    \"apply\":false,\n    \"exchange_rate\":null,\n    \"tax_free\":false,\n    \"vendor\":\"aws\"\n  },\n  ...\n]\n</code></pre>"},{"location":"ripple/apiref/recalculation/#apply-recalculation","title":"Apply recalculation","text":"<p>\u518d\u8a08\u7b97\u8acb\u6c42\u30c7\u30fc\u30bf\u306e\u9069\u7528\u30fb\u672a\u9069\u7528\u306e\u5272\u5f53</p> <p>Role actions</p> <ul> <li><code>ModifyBillingGroup</code></li> </ul> <p>Request</p> <pre><code>POST /billinggroup/recalculation HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n    \"data\": [\n        \"recalculationid1\",\n        \"recalculationid2\",\n        \"recalculationid3\"\n    ],\n    \"month\": \"2021-01\",\n    \"exchange_rate\":104.02,\n    \"tax_free\":true,\n    \"apply\":true,\n    \"vendor\":\"aws\"\n}\n</code></pre> <p>{request body} description</p> Field Type Required Validation Description data array Yes [id1,id2,id3...] \u518d\u8a08\u7b97\u8acb\u6c42\u30c7\u30fc\u30bfID\u306e\u4e00\u89a7 month string Yes - \u9069\u7528\u30fb\u672a\u9069\u7528\u3059\u308b\u5bfe\u8c61\u6708 exchange_rate double Yes - \u9069\u7528\u30fb\u672a\u9069\u7528\u3059\u308b\u70ba\u66ff\u30ec\u30fc\u30c8 tax_free boolean Yes - \u514d\u7a0e\u8a2d\u5b9a apply boolean Yes - \u9069\u7528\u30fb\u672a\u9069\u7528\u8a2d\u5b9a vendor string Yes - \u30d9\u30f3\u30c0\u30fc <p>Response</p> <pre><code>HTTP 200\n\n{\"status\":\"success\"}\n</code></pre>"},{"location":"ripple/apiref/reseller/","title":"Wave for Reseller","text":"<p>\u30ea\u30bb\u30e9\u30fc\u306eAPI\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002</p>"},{"location":"ripple/apiref/reseller/#create-reseller-account","title":"Create reseller account","text":"<p>\u30ea\u30bb\u30e9\u30fc\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u767a\u884c</p> <p>Role actions</p> <ul> <li><code>ModifyReseller</code></li> </ul> <p>Request</p> <pre><code>POST /reseller HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n  \"email\":\"alphaus-cloud@alphaus.cloud\",\n  \"company_id\":\"company1\",\n  \"input_type\":\"Auto\",\n  \"notification\":true,\n  \"password\":null\n}\n</code></pre> <p>request body description</p> Field Type Required Validation Description email string Yes - E\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9 company_id string Yes - \u8acb\u6c42\u30b0\u30eb\u30fc\u30d7\u5185\u90e8ID input_type string Yes - Auto / Custom Auto: \u30d1\u30b9\u30ef\u30fc\u30c9\u81ea\u52d5\u751f\u6210 Custom: password\u3092\u5165\u529b notification boolean Yes - \u4f5c\u6210\u6642\u306b\u901a\u77e5\u3092\u3059\u308b/\u3057\u306a\u3044 password string No - \u30d1\u30b9\u30ef\u30fc\u30c9 meta [object] Yes - Wave\u6a5f\u80fd\u8868\u793a\u8a2d\u5b9a\u3002meta\u306b\u3064\u3044\u3066 <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\":\"success\"\n}\n</code></pre> <p>Python\u3067\u306e\u30b5\u30f3\u30d7\u30eb</p> <pre><code>import requests\nimport json\n\ndef get_token():\n    # Note: you can see details on:\n    #   https://labs.alphaus.cloud/docs/apiref/authentication/\n    # Assign generated values for client_id and client_secret\n    params={\n        \"grant_type\": \"client_credentials\",\n        \"client_id\": \"{client_id}\",\n        \"client_secret\": \"{client_secret}\",\n        \"scope\": \"openid\",\n    }\n    try:\n        response = requests.post(\n            url=\"https://login.alphaus.cloud/ripple/access_token\",\n            headers={\n            },\n            params=params,\n            files=params,\n        )\n    except requests.exceptions.RequestException:\n        print('HTTP Request failed')\n\n    r = response.json()\n    return r['access_token'], r[\"token_type\"]\n\ndef send_request(type, token):\n    # Authorization header\n    auth = type + \" \" + token\n    try:\n        response = requests.post(\n            url=\"https://api.alphaus.cloud/m/ripple/reseller\",\n            headers={\n                \"Content-Type\": \"application/json;\",\n                \"Authorization\": auth\n            },\n            data=json.dumps({\n                \"email\": \"reseller@waveresellersample.cloud\",\n                \"notification\": True,\n                \"meta\": {\n                    \"usage_report_download\": True,\n                    \"usage_account_menu_fees_fee\": False,\n                    \"ri_utilization\": False,\n                    \"usage_account_menu_account_edit\": False,\n                    \"usage_account\": True,\n                    \"usage_account_graph\": True,\n                    \"usage_tag_graph\": True,\n                    \"usage_account_menu_fees_refund\": False,\n                    \"invoice_download_csv_merged\": False,\n                    \"invoice_download_csv_discount\": False,\n                    \"usage_account_menu_fees_other_fees\": False,\n                    \"usage_account_menu_fees_credit\": False,\n                    \"ri_purchased\": False,\n                    \"open_api\": False,\n                    \"dashboard_graph\": True,\n                    \"usage_group\": True,\n                    \"report_filters\": False,\n                    \"usage_tag\": True,\n                    \"ri_recommendation\": False,\n                    \"invoice\": False,\n                    \"usage_crosstag_graph\": True,\n                    \"users_management\": False,\n                    \"usage_account_menu_budget\": False,\n                    \"usage_account_menu_budget_edit\": False,\n                    \"usage_group_graph\": True,\n                    \"usage_crosstag\": True,\n                    \"aq_coverage_ratio\": False,\n                    \"aq_sp_management\": False,\n                    \"aq_right_sizing\": False,\n                    \"aq_ri_sp_instances\": False,\n                    \"aq_ri_management\": False,\n                    \"sp_purchased\": False,\n                    \"aq_scheduling\": False,\n                    \"aqua_link\": False\n                },\n                \"company_id\": \"{company_id}\",\n                \"input_type\": \"Auto\"\n            })\n        )\n        print('Response HTTP Status Code: {status_code}'.format(\n            status_code=response.status_code))\n        print('Response HTTP Response Body: {content}'.format(\n            content=response.content))\n    except requests.exceptions.RequestException:\n        print('HTTP Request failed')\n\naccess_token, token_type = get_token()\nsend_request(token_type, access_token)\n</code></pre>"},{"location":"ripple/apiref/reseller/#get-reseller-account-list","title":"Get reseller account list","text":"<p>\u30ea\u30bb\u30e9\u30fc\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u53d6\u5f97</p> <p>Role actions</p> <ul> <li><code>ReadReseller</code></li> <li><code>ModifyReseller</code></li> </ul> <p>Request</p> <pre><code>POST /reseller HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>Response</p> <pre><code>HTTP 200\n\n[\n  {\n    \"user_id\":\"userid1\",\n    \"billinggroup_id\":\"billing1\",\n    \"billinggroup_name\":\"billingname1\",\n    \"email\":\"alphaus-cloud@alphaus.cloud\",\n    \"company_id\":\"company1\",\n    \"update_time\":null,\n    \"password_update_time\":null,\n    \"wave_registered\":\"2020-01-01T10:00:00+09:00\",\n    \"meta\": {\n      \"aq_coverage_ratio\":false\n      \"aq_ri_management\":false\n      \"aq_ri_sp_instances\":false\n      \"aq_right_sizing\":false\n      \"aq_scheduling\":false\n      \"aq_sp_management\":false\n      \"dashboard_graph\":true\n      \"usage_account\":true\n      \"usage_account_graph\":true\n      \"usage_account_menu_account_edit\":false\n      \"usage_account_menu_budget\":false\n      \"usage_account_menu_budget_edit\":false\n      \"usage_account_menu_fees_fee\":false\n      \"usage_account_menu_fees_credit\":false\n      \"usage_account_menu_fees_refund\":false\n      \"usage_account_menu_fees_other_fees\":false\n      \"usage_report_download\":true\n      \"usage_group\":true\n      \"usage_group_graph\":true\n      \"usage_tag\":true\n      \"usage_tag_graph\":true\n      \"usage_crosstag\":true\n      \"usage_crosstag_graph\":true\n      \"ri_purchased\":true\n      \"ri_utilization\":false\n      \"ri_recommendation\":false\n      \"sp_purchased\":false\n      \"invoice\":false\n      \"invoice_download_csv_discount\":false\n      \"invoice_download_csv_merged\":false\n      \"open_api\":false\n      \"users_management\":false\n      \"report_filters\":false\n    }\n  },\n  ...\n]\n</code></pre>"},{"location":"ripple/apiref/reseller/#delete-reseller-account","title":"Delete reseller account","text":"<p>\u30ea\u30bb\u30e9\u30fc\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u524a\u9664</p> <p>Role actions</p> <ul> <li><code>ModifyReseller</code></li> </ul> <p>Request</p> <pre><code>DELETE /reseller/{user_id} HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>{user_id}</p> <p>\u30ea\u30bb\u30e9\u30fc\u30a2\u30ab\u30a6\u30f3\u30c8\u306eid\u3092\u6307\u5b9a\u3059\u308b</p> <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\":\"success\"\n}\n</code></pre>"},{"location":"ripple/apiref/reseller/#update-password-for-reseller-account","title":"Update password for reseller account","text":"<p>\u30ea\u30bb\u30e9\u30fc\u30a2\u30ab\u30a6\u30f3\u30c8\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u5909\u66f4</p> <p>Role actions</p> <ul> <li><code>ModifyReseller</code></li> </ul> <p>Request</p> <pre><code>PUT /reseller/{user_id}/password HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>{user_id}</p> <p>\u30ea\u30bb\u30e9\u30fc\u30a2\u30ab\u30a6\u30f3\u30c8\u306eid\u3092\u6307\u5b9a\u3059\u308b</p> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n  \"input_type\":\"Auto\",\n  \"notification\":true,\n  \"password\":null\n}\n</code></pre> <p>request body description</p> Field Type Required Validation Description input_type string Yes - Auto / Custom Auto: \u30d1\u30b9\u30ef\u30fc\u30c9\u81ea\u52d5\u751f\u6210 Custom: password\u3092\u5165\u529b notification boolean Yes - \u5909\u66f4\u6642\u306b\u901a\u77e5\u3092\u3059\u308b/\u3057\u306a\u3044 password string No - \u30d1\u30b9\u30ef\u30fc\u30c9 <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\":\"success\"\n}\n</code></pre>"},{"location":"ripple/apiref/reseller/#update-meta-for-reseller-account","title":"Update meta for reseller account","text":"<p>\u30ea\u30bb\u30e9\u30fc\u30a2\u30ab\u30a6\u30f3\u30c8\u30e1\u30bf\u60c5\u5831\u306e\u5909\u66f4</p> <p>Role actions</p> <ul> <li><code>ModifyReseller</code></li> </ul> <p>Request</p> <pre><code>PUT /reseller/{user_id}/meta HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>{user_id}</p> <p>\u30ea\u30bb\u30e9\u30fc\u30a2\u30ab\u30a6\u30f3\u30c8\u306eid\u3092\u6307\u5b9a\u3059\u308b</p> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n  \"meta\": {\n      \"aq_coverage_ratio\":false\n      \"aq_ri_management\":false\n      \"aq_ri_sp_instances\":false\n      \"aq_right_sizing\":false\n      \"aq_scheduling\":false\n      \"aq_sp_management\":false\n      \"dashboard_graph\":true\n      \"usage_account\":true\n      \"usage_account_graph\":true\n      \"usage_account_menu_account_edit\":false\n      \"usage_account_menu_budget\":false\n      \"usage_account_menu_budget_edit\":false\n      \"usage_account_menu_fees_fee\":false\n      \"usage_account_menu_fees_credit\":false\n      \"usage_account_menu_fees_refund\":false\n      \"usage_account_menu_fees_other_fees\":false\n      \"usage_report_download\":true\n      \"usage_group\":true\n      \"usage_group_graph\":true\n      \"usage_tag\":true\n      \"usage_tag_graph\":true\n      \"usage_crosstag\":true\n      \"usage_crosstag_graph\":true\n      \"ri_purchased\":true\n      \"ri_utilization\":false\n      \"ri_recommendation\":false\n      \"sp_purchased\":false\n      \"invoice\":false\n      \"invoice_download_csv_discount\":false\n      \"invoice_download_csv_merged\":false\n      \"open_api\":false\n      \"users_management\":false\n      \"report_filters\":false\n    }\n}\n</code></pre> <p>request body description</p> Field Type Required Validation Description meta [object] Yes - Wave\u6a5f\u80fd\u8868\u793a\u8a2d\u5b9a\u3002meta\u306b\u3064\u3044\u3066 <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"status\":\"success\"\n}\n</code></pre>"},{"location":"ripple/apiref/reseller/#meta","title":"meta","text":"<p>meta\u306e\u30ea\u30b9\u30c8\u3092\u793a\u3057\u307e\u3059\u3002</p> <p><code>Default</code>\u306f\u30ea\u30bb\u30e9\u30fc\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u767a\u884c\u3059\u308b\u969b\u306b\u8a2d\u5b9a\u3055\u308c\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a2d\u5b9a\u3067\u3059\u3002</p> aq_coverage_ratio boolean false Aqua \u30a4\u30f3\u30b9\u30bf\u30f3\u9069\u7528\u7387 \u30a4\u30f3\u30b9\u30bf\u30f3\u9069\u7528\u7387\u30da\u30fc\u30b8\u306e\u8868\u793a aq_ri_management boolean false Aqua RI\u7ba1\u7406 RI\u7ba1\u7406\u30da\u30fc\u30b8\u306e\u8868\u793a aq_ri_sp_instances boolean false Aqua RI/SP RI/SP\u30ec\u30b3\u30e1\u30f3\u30c7\u30fc\u30b7\u30e7\u30f3\u30da\u30fc\u30b8\u306e\u8868\u793a aq_right_sizing boolean false Aqua \u30e9\u30a4\u30c8\u30b5\u30a4\u30b8\u30f3\u30b0 \u30e9\u30a4\u30c8\u30b5\u30a4\u30b8\u30f3\u30b0\u30da\u30fc\u30b8\u306e\u8868\u793a aq_scheduling boolean false Aqua \u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0 \u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u30da\u30fc\u30b8\u306e\u8868\u793a aq_sp_management boolean false Aqua SP\u7ba1\u7406 SP\u7ba1\u7406\u30da\u30fc\u30b8\u306e\u8868\u793a dashboard_graph boolean true \u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9 \u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u30b0\u30e9\u30d5\u306e\u8868\u793a usage_account boolean true \u30a2\u30ab\u30a6\u30f3\u30c8\u30ec\u30dd\u30fc\u30c8 \u30a2\u30ab\u30a6\u30f3\u30c8\u5229\u7528\u660e\u7d30\u306e\u8868\u793a [Account] usage_account_graph boolean true \u30b0\u30e9\u30d5\u306e\u8868\u793a [\u30a2\u30ab\u30a6\u30f3\u30c8] \u30a2\u30ab\u30a6\u30f3\u30c8\u5229\u7528\u660e\u7d30\u30b0\u30e9\u30d5\u306e\u8868\u793a [Account] usage_account_menu_account_edit boolean false \u30a2\u30ab\u30a6\u30f3\u30c8\u540d\u306e\u7de8\u96c6 \u30a2\u30ab\u30a6\u30f3\u30c8\u540d\u306e\u7de8\u96c6 [Account] usage_account_menu_budget boolean false \u30d0\u30b8\u30a7\u30c3\u30c8\u306e\u8868\u793a [\u30a2\u30ab\u30a6\u30f3\u30c8] \u30d0\u30b8\u30a7\u30c3\u30c8\u8a2d\u5b9a\u306e\u8868\u793a [Account] usage_account_menu_budget_edit boolean false \u30d0\u30b8\u30a7\u30c3\u30c8\u306e\u7de8\u96c6 [\u30a2\u30ab\u30a6\u30f3\u30c8] \u30d0\u30b8\u30a7\u30c3\u30c8\u8a2d\u5b9a\u306e\u7de8\u96c6 [Account] usage_account_menu_fees_fee boolean false Fee\u306e\u8868\u793a [\u30a2\u30ab\u30a6\u30f3\u30c8 &gt; \u305d\u306e\u4ed6\u660e\u7d30\u60c5\u5831] Fee\u306e\u8868\u793a [Account] usage_account_menu_fees_credit boolean false Credit\u306e\u8868\u793a [\u30a2\u30ab\u30a6\u30f3\u30c8 &gt; \u305d\u306e\u4ed6\u660e\u7d30\u60c5\u5831] Credit\u306e\u8868\u793a [Account] usage_account_menu_fees_refund boolean false Refund\u306e\u8868\u793a [\u30a2\u30ab\u30a6\u30f3\u30c8 &gt; \u305d\u306e\u4ed6\u660e\u7d30\u60c5\u5831] Refund\u306e\u8868\u793a [Account] usage_account_menu_fees_other_fees boolean false \u305d\u306e\u4ed6Fee\u306e\u8868\u793a [\u30a2\u30ab\u30a6\u30f3\u30c8 &gt; \u305d\u306e\u4ed6\u660e\u7d30\u60c5\u5831] \u305d\u306e\u4ed6Fee\u306e\u8868\u793a [Account] usage_report_download boolean true \u30ec\u30dd\u30fc\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 [\u30a2\u30ab\u30a6\u30f3\u30c8] \u5229\u7528\u660e\u7d30\u30ec\u30dd\u30fc\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u8868\u793a [Account] usage_group boolean true \u30b0\u30eb\u30fc\u30d7\u30ec\u30dd\u30fc\u30c8 \u5229\u7528\u660e\u7d30\u306e\u8868\u793a [Group] usage_group_graph boolean true \u30b0\u30e9\u30d5\u306e\u8868\u793a [\u30b0\u30eb\u30fc\u30d7] \u5229\u7528\u660e\u7d30\u30b0\u30e9\u30d5\u306e\u8868\u793a [Group] usage_tag boolean true \u30bf\u30b0\u30ec\u30dd\u30fc\u30c8 \u5229\u7528\u660e\u7d30\u306e\u8868\u793a [Tag] usage_tag_graph boolean true \u30b0\u30e9\u30d5\u306e\u8868\u793a [\u30bf\u30b0] \u5229\u7528\u660e\u7d30\u30b0\u30e9\u30d5\u306e\u8868\u793a [Tag] usage_crosstag boolean true \u30af\u30ed\u30b9\u30bf\u30b0\u30ec\u30dd\u30fc\u30c8 \u5229\u7528\u660e\u7d30\u306e\u8868\u793a [Cross Tag] usage_crosstag_graph boolean true \u30b0\u30e9\u30d5\u306e\u8868\u793a [\u30af\u30ed\u30b9\u30bf\u30b0] \u5229\u7528\u660e\u7d30\u30b0\u30e9\u30d5\u306e\u8868\u793a [Cross Tag] ri_purchased boolean true \u8cfc\u5165\u6e08\u307fRI\u306e\u8868\u793a \u8cfc\u5165\u6e08\u307fRI\u306e\u8868\u793a ri_utilization boolean false RI\u9069\u7528\u7387\u306e\u8868\u793a RI\u9069\u7528\u7387\u306e\u8868\u793a ri_recommendation boolean false \u30ec\u30b3\u30e1\u30f3\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u8868\u793a RI\u30ec\u30b3\u30e1\u30f3\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u8868\u793a sp_purchased boolean false \u8cfc\u5165\u6e08\u307fSavingsPlans\u306e\u8868\u793a \u8cfc\u5165\u6e08\u307fSavingsPlans\u306e\u8868\u793a invoice boolean false \u8acb\u6c42\u66f8\u306e\u8868\u793a \u3054\u5229\u7528\u660e\u7d30\u306e\u8868\u793a invoice_download_csv_discount boolean false \u5272\u5f15\u8a73\u7d30CSV\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u5272\u5f15\u8a73\u7d30CSV\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 [Usage details] invoice_download_csv_merged boolean false \u8acb\u6c42\u66f8\uff08\u7d71\u5408\u7248\uff09CSV\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u8acb\u6c42\u66f8\uff08\u7d71\u5408\u7248\uff09CSV\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 [Usage details] open_api boolean false API \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3 API \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3 [Settings] users_management boolean false \u30b5\u30d6\u30e6\u30fc\u30b6\u30fc\u7ba1\u7406 \u30b5\u30d6\u30e6\u30fc\u30b6\u30fc\u7ba1\u7406 [Settings] report_filters boolean false \u30ec\u30dd\u30fc\u30c8\u30d5\u30a3\u30eb\u30bf\u30fc \u30ec\u30dd\u30fc\u30c8\u30d5\u30a3\u30eb\u30bf\u30fc budgetalerts boolean false \u4e88\u7b97\u8d85\u904e\u901a\u77e5 \u4e88\u7b97\u306b\u95a2\u3059\u308b\u30a2\u30e9\u30fc\u30c8 [Notification][Settings]"},{"location":"ripple/apiref/ri-management/","title":"RI management","text":"<p>RI\u7ba1\u7406\u306eAPI\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002</p>"},{"location":"ripple/apiref/ri-management/#get-ri-purchased-list","title":"Get RI purchased list","text":"<p>RI\u7ba1\u7406\u30c7\u30fc\u30bf\u306e\u53d6\u5f97</p> <p>Role actions</p> <ul> <li><code>ReadRi</code></li> <li><code>ModifyRi</code></li> </ul> <p>Request</p> <pre><code>GET /ri/purchased?vendor={vendor} HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{vendor}</code>\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30f3\u30c0\u30fc: <code>aws</code>,<code>azure</code></p> <p>Response</p> <pre><code>HTTP 200\n\n[\n  {\n    \"billinggroup_id\":\"billinggroup1\",\n    \"billinggroup_name\":\"billinggroup1\",\n    \"customer_id\":\"012345678912\",\n    \"customer_name\":\"customer1\",\n    \"dest_customer_id\":\"\",\n    \"end\":\"2021-12-03T00:00:00Z\",\n    \"id\":\"ATEcVTAzVDA4pbnN6YW5jZXXFZbRmNGFlMTAtYWV\",\n    \"arn\":\"arn:aws:ec2:ap-northeast-1:012345678912:reserved-instances\\/adbcderf-cdef-xwcs-ecqx-5vfbk2767xxs\",\n    \"instance_type\":\"t2.large\",\n    \"modification_status\":\"Original\",\n    \"normalization_factor\":4,\n    \"number\":1,\n    \"offer_class\":\"standard\",\n    \"paid_by\":\"PaidByOwner\",\n    \"payment_option\":\"All Upfront\",\n    \"platform\":\"Linux\\/UNIX\",\n    \"region\":\"ap-northeast-1\",\n    \"remove\":false,\n    \"scope\":\"Region\",\n    \"service\":\"AmazonEC2\",\n    \"start\":\"2020-12-03T00:00:00Z\",\n    \"tenancy\":\"Shared\",\n    \"term_length\":\"1yr\",\n    \"unblended_rate\":0,\n    \"upfront_value\":672,\n    \"usage_type\":\"APN1-HeavyUsage:t2.large\",\n    \"vendor\":\"aws\",\n    \"zone\":\"\",\n    \"disabled\":false\n  },\n  ...\n]\n</code></pre>"},{"location":"ripple/apiref/ri-management/#move-ri-purchased","title":"Move RI purchased","text":"<p>RI\u7ba1\u7406\u30c7\u30fc\u30bf\u306e\u79fb\u52d5</p> <p>Role actions</p> <ul> <li><code>ModifyRi</code></li> </ul> <p>Request</p> <pre><code>POST /ri/purchased/{ri_id} HTTP1.1\nAuthorization: Bearer {token}\nContent-Type: application/json\n\n{request body}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{ri_id}</code> <code>GET /ri/purchased?vendor={vendor}</code>\u304b\u3089\u53d6\u5f97\u3057\u305fid</p> <p>\u4ee5\u4e0b\u306b<code>{request body}</code>\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>{request body}</p> <pre><code>{\n    \"customer_id\":\"123456789123\",\n    \"number\":1,\n    \"vendor\":\"aws\"\n}\n</code></pre> <p>{request body} description</p> Field Type Required Validation Description customer_id string Yes - \u79fb\u52d5\u5148\u306e\u9867\u5ba2ID number integer Yes - \u79fb\u52d5\u3059\u308b\u6570 vendor string Yes \u30b5\u30dd\u30fc\u30c8: <code>aws</code> \u30d9\u30f3\u30c0\u30fc <p>Response</p> <pre><code>HTTP 200\n\n{\"status\":\"success\"}\n</code></pre>"},{"location":"ripple/apiref/ri-management/#remove-ri-purchased","title":"Remove RI purchased","text":"<p>\u79fb\u52d5\u5148\u306eRI\u7ba1\u7406\u30c7\u30fc\u30bf\u3092\u5143\u306e\u30c7\u30fc\u30bf\u3078\u623b\u3059</p> <p>Role actions</p> <ul> <li><code>ModifyRi</code></li> </ul> <p>Request</p> <pre><code>POST /ri/purchased/{ri_id}/remove?vendor={vendor} HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{ri_id}</code> <code>GET /ri/purchased?vendor={vendor}</code>\u304b\u3089\u53d6\u5f97\u3057\u305fid \u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u306e<code>{vendor}</code>\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30f3\u30c0\u30fc: <code>aws</code></p> <p>Response</p> <pre><code>HTTP 200\n\n{\"status\":\"success\"}\n</code></pre>"},{"location":"ripple/apiref/user/","title":"User","text":"<p>\u30e6\u30fc\u30b6\u30fc\u306eAPI\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002</p>"},{"location":"ripple/apiref/user/#get-user","title":"Get user","text":"<p>\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u306e\u53d6\u5f97</p> <p>Role actions</p> <ul> <li><code>ModifySettings</code></li> </ul> <p>Request</p> <pre><code>GET /user HTTP1.1\nAuthorization: Bearer {token}\n</code></pre> <p>Response</p> <pre><code>HTTP 200\n\n{\n  \"msp_start\": \"2020-01\",\n  \"language\": \"ja\",\n  \"invoices_info\": {},\n  \"invoice_meta\": {},\n  \"meta\": {},\n  \"services\": [],\n  \"username\": null,\n  \"support_fee\": [],\n  \"msp_id\": \"MSP-5aa311904d5d6\",\n  \"invoice_layout\": {},\n  \"service_discount\": {},\n  \"months\": [],\n  \"export_digit\": \"up\",\n  \"exchange_rate\": [],\n  \"pay_accounts\": [],\n  \"service_fee\": null,\n  \"company_name\": \"Company Name\",\n  \"reseller_lng\": null,\n  \"email\": \"info@alphaus.cloud\"\n}\n</code></pre> <p>exchange_rate object\u4f8b</p> Field Type Description month string \u6708 format: <code>yyyy-mm</code> rate double \u70ba\u66ff\u30ec\u30fc\u30c8 <pre><code>\"exchange_rate\": [\n    {\n      \"month\": \"2020-04\",\n      \"rate\": 105.00\n    }\n]\n</code></pre> <p>pay_accounts object\u4f8b</p> <p>vendor : aws</p> Field Type Description vendor string \u30d9\u30f3\u30c0\u30fc id string \u652f\u6255\u3044\u30a2\u30ab\u30a6\u30f3\u30c8 name string \u652f\u6255\u3044\u30a2\u30ab\u30a6\u30f3\u30c8\u540d bucket_name string aws s3 bucket\u540d prefix string aws s3 bucket prefix report_name string aws s3 report\u540d role_arn string aws iam role arn report_last_saved string CUR\u66f4\u65b0\u65e5\u6642 <pre><code>\"pay_accounts\": [\n    {\n      \"vendor\": \"aws\",\n      \"id\": \"123456789109\",\n      \"name\": \"Payer Account\",\n      \"bucket_name\": null,\n      \"prefix\": null,\n      \"report_name\": null,\n      \"role_arn\": null,\n      \"report_last_saved\": []\n    }\n]\n</code></pre> <p>vendor : azure</p> Field Type Description vendor string \u30d9\u30f3\u30c0\u30fc id string \u652f\u6255\u3044\u30a2\u30ab\u30a6\u30f3\u30c8 name string \u652f\u6255\u3044\u30a2\u30ab\u30a6\u30f3\u30c8\u540d application_name string azure application name application_id string azure application id commerce_id string azure commerce id <pre><code>\"pay_accounts\": [\n    {\n      \"vendor\": \"azure\",\n      \"id\": \"1234567\",\n      \"name\": \"Payer Account\",\n      \"application_name\": null,\n      \"application_id\": null,\n      \"commerce_id\": null\n    }\n]\n</code></pre>"}]}